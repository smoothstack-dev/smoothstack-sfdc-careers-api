import { Schema, SObjectDefinition, DateString, BlobString, Address } from 'jsforce';

type Fields$AIInsightAction = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AiRecordInsightId: string;
  Type: string;
  Confidence: number | null;
  ActionName: string | null;
  ActionId: string | null;
};

type ParentReferences$AIInsightAction = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AiRecordInsight: SObjectDefinition$AIRecordInsight;
  Action: SObjectDefinition$Name | null;
};

type ChildRelationships$AIInsightAction = {
  //
  Feedback: SObjectDefinition$AIInsightFeedback;
  AiInsightActions: SObjectDefinition$AIInsightValue;
};

interface SObjectDefinition$AIInsightAction extends SObjectDefinition<'AIInsightAction'> {
    Name: 'AIInsightAction';
    Fields: Fields$AIInsightAction;
    ParentReferences: ParentReferences$AIInsightAction;
    ChildRelationships: ChildRelationships$AIInsightAction;
  }

type Fields$AIInsightFeedback = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AiRecordInsightId: string;
  AiInsightFeedbackType: string;
  AiFeedback: string;
  Rank: number | null;
  ValueId: string | null;
  ActualValue: string | null;
};

type ParentReferences$AIInsightFeedback = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AiRecordInsight: SObjectDefinition$AIRecordInsight;
  Value: SObjectDefinition$Name | null;
};

type ChildRelationships$AIInsightFeedback = {
  //
};

interface SObjectDefinition$AIInsightFeedback extends SObjectDefinition<'AIInsightFeedback'> {
    Name: 'AIInsightFeedback';
    Fields: Fields$AIInsightFeedback;
    ParentReferences: ParentReferences$AIInsightFeedback;
    ChildRelationships: ChildRelationships$AIInsightFeedback;
  }

type Fields$AIInsightReason = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AiInsightValueId: string;
  Intensity: number | null;
  Contribution: number | null;
  Variance: number | null;
  FieldName: string | null;
  Operator: string | null;
  FieldValue: string | null;
  FeatureValue: string | null;
  FeatureType: string | null;
};

type ParentReferences$AIInsightReason = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AiInsightValue: SObjectDefinition$AIInsightValue;
};

type ChildRelationships$AIInsightReason = {
  //
};

interface SObjectDefinition$AIInsightReason extends SObjectDefinition<'AIInsightReason'> {
    Name: 'AIInsightReason';
    Fields: Fields$AIInsightReason;
    ParentReferences: ParentReferences$AIInsightReason;
    ChildRelationships: ChildRelationships$AIInsightReason;
  }

type Fields$AIInsightValue = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AiRecordInsightId: string;
  AiInsightActionId: string | null;
  ValueType: string;
  SobjectType: string | null;
  Field: string | null;
  Value: string | null;
  FieldValueLowerBound: string | null;
  FieldValueUpperBound: string | null;
  Confidence: number | null;
  SobjectLookupValueId: string | null;
};

type ParentReferences$AIInsightValue = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AiRecordInsight: SObjectDefinition$AIRecordInsight;
  AiInsightAction: SObjectDefinition$AIInsightAction | null;
  SobjectLookupValue: SObjectDefinition$Name | null;
};

type ChildRelationships$AIInsightValue = {
  //
  Feedback: SObjectDefinition$AIInsightFeedback;
  AIInsightReasons: SObjectDefinition$AIInsightReason;
};

interface SObjectDefinition$AIInsightValue extends SObjectDefinition<'AIInsightValue'> {
    Name: 'AIInsightValue';
    Fields: Fields$AIInsightValue;
    ParentReferences: ParentReferences$AIInsightValue;
    ChildRelationships: ChildRelationships$AIInsightValue;
  }

type Fields$AIPredictionEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  PredictionEntityId: string | null;
  InsightId: string | null;
  TargetId: string | null;
  Confidence: number | null;
  FieldName: string | null;
  HasError: boolean;
};

type ParentReferences$AIPredictionEvent = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AIPredictionEvent = {
  //
};

interface SObjectDefinition$AIPredictionEvent extends SObjectDefinition<'AIPredictionEvent'> {
    Name: 'AIPredictionEvent';
    Fields: Fields$AIPredictionEvent;
    ParentReferences: ParentReferences$AIPredictionEvent;
    ChildRelationships: ChildRelationships$AIPredictionEvent;
  }

type Fields$AIRecordInsight = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TargetId: string;
  TargetSobjectType: string;
  Type: string;
  RunGuid: string;
  RunStartTime: DateString | null;
  ValidUntil: DateString | null;
  Confidence: number | null;
  TargetField: string | null;
  Status: string | null;
  PredictionField: string | null;
};

type ParentReferences$AIRecordInsight = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Target: SObjectDefinition$Name;
};

type ChildRelationships$AIRecordInsight = {
  //
  AIInsightActions: SObjectDefinition$AIInsightAction;
  AIInsightFeedbacks: SObjectDefinition$AIInsightFeedback;
  AIInsightValues: SObjectDefinition$AIInsightValue;
};

interface SObjectDefinition$AIRecordInsight extends SObjectDefinition<'AIRecordInsight'> {
    Name: 'AIRecordInsight';
    Fields: Fields$AIRecordInsight;
    ParentReferences: ParentReferences$AIRecordInsight;
    ChildRelationships: ChildRelationships$AIRecordInsight;
  }

type Fields$AcceptedEventRelation = {
  //
  Id: string;
  RelationId: string | null;
  EventId: string | null;
  AccountId: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$AcceptedEventRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Event: SObjectDefinition$Event | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AcceptedEventRelation = {
  //
};

interface SObjectDefinition$AcceptedEventRelation extends SObjectDefinition<'AcceptedEventRelation'> {
    Name: 'AcceptedEventRelation';
    Fields: Fields$AcceptedEventRelation;
    ParentReferences: ParentReferences$AcceptedEventRelation;
    ChildRelationships: ChildRelationships$AcceptedEventRelation;
  }

type Fields$Account = {
  //
  Id: string;
  IsDeleted: boolean;
  MasterRecordId: string | null;
  Name: string;
  Type: string | null;
  ParentId: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingStateCode: string | null;
  BillingCountryCode: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingStateCode: string | null;
  ShippingCountryCode: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  Phone: string | null;
  Website: string | null;
  PhotoUrl: string | null;
  Industry: string | null;
  NumberOfEmployees: number | null;
  Description: string | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Jigsaw: string | null;
  JigsawCompanyId: string | null;
  AccountSource: string | null;
  SicDesc: string | null;
  ActivityMetricId: string | null;
  ActivityMetricRollupId: string | null;
  Account_type__c: string | null;
  DSCORGPKG__Conflict__c: string | null;
  DSCORGPKG__DO_3yr_Employees_Growth__c: string | null;
  DSCORGPKG__DO_3yr_Sales_Growth__c: string | null;
  DSCORGPKG__DeletedFromDiscoverOrg__c: string | null;
  DSCORGPKG__DiscoverOrg_Created_On__c: DateString | null;
  DSCORGPKG__DiscoverOrg_First_Update__c: DateString | null;
  DSCORGPKG__DiscoverOrg_FullCountryName__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_LastUpdate__c: DateString | null;
  DSCORGPKG__DiscoverOrg_State_Full_Name__c: string | null;
  DSCORGPKG__DiscoverOrg_Technologies__c: string | null;
  DSCORGPKG__Exclude_Update__c: boolean;
  DSCORGPKG__External_DiscoverOrg_Id__c: string | null;
  DSCORGPKG__Fiscal_Year_End__c: string | null;
  DSCORGPKG__Fortune_Rank__c: string | null;
  DSCORGPKG__ITOrgChart__c: string | null;
  DSCORGPKG__IT_Budget__c: number | null;
  DSCORGPKG__IT_Employees__c: number | null;
  DSCORGPKG__Lead_Source__c: string | null;
  DSCORGPKG__Locked_By_User__c: string | null;
  DSCORGPKG__NAICS_Codes__c: string | null;
  DSCORGPKG__Ownership__c: string | null;
  DSCORGPKG__SIC_Codes__c: string | null;
  Account_Plan__c: string | null;
  Top_10__c: boolean;
  Next_10__c: boolean;
  Company_LinkedIn__c: string | null;
  Lead_Source__c: string | null;
  UTM_Content__c: string | null;
  UTM_Campaign__c: string | null;
  UTM_Term__c: string | null;
  UTM_Medium__c: string | null;
  UTM_Source__c: string | null;
  Last_Email_or_Meeting_Date__c: DateString | null;
};

type ParentReferences$Account = {
  //
  MasterRecord: SObjectDefinition$Account | null;
  Parent: SObjectDefinition$Account | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ActivityMetric: SObjectDefinition$ActivityMetric | null;
  ActivityMetricRollup: SObjectDefinition$ActivityMetricRollup | null;
  DSCORGPKG__Conflict__r: SObjectDefinition$DSCORGPKG__Conflict__c | null;
  DSCORGPKG__Locked_By_User__r: SObjectDefinition$User | null;
};

type ChildRelationships$Account = {
  //
  ChildAccounts: SObjectDefinition$Account;
  AccountContactRelations: SObjectDefinition$AccountContactRelation;
  AccountContactRoles: SObjectDefinition$AccountContactRole;
  Feeds: SObjectDefinition$AccountFeed;
  Histories: SObjectDefinition$AccountHistory;
  AccountPartnersFrom: SObjectDefinition$AccountPartner;
  AccountPartnersTo: SObjectDefinition$AccountPartner;
  Shares: SObjectDefinition$AccountShare;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Assets: SObjectDefinition$Asset;
  ProvidedAssets: SObjectDefinition$Asset;
  ServicedAssets: SObjectDefinition$Asset;
  AssociatedLocations: SObjectDefinition$AssociatedLocation;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  RelatedAuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  Cases: SObjectDefinition$Case;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  Contacts: SObjectDefinition$Contact;
  ContactPointAddresses: SObjectDefinition$ContactPointAddress;
  ContactPointEmails: SObjectDefinition$ContactPointEmail;
  ContactPointPhones: SObjectDefinition$ContactPointPhone;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Contracts: SObjectDefinition$Contract;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Opportunities: SObjectDefinition$Opportunity;
  OpportunityPartnersTo: SObjectDefinition$OpportunityPartner;
  Orders: SObjectDefinition$Order;
  PartnersFrom: SObjectDefinition$Partner;
  PartnersTo: SObjectDefinition$Partner;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Personas: SObjectDefinition$SocialPersona;
  Posts: SObjectDefinition$SocialPost;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Users: SObjectDefinition$User;
};

interface SObjectDefinition$Account extends SObjectDefinition<'Account'> {
    Name: 'Account';
    Fields: Fields$Account;
    ParentReferences: ParentReferences$Account;
    ChildRelationships: ChildRelationships$Account;
  }

type Fields$AccountChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  LastName: string | null;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Type: string | null;
  ParentId: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingStateCode: string | null;
  BillingCountryCode: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingStateCode: string | null;
  ShippingCountryCode: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  Phone: string | null;
  Website: string | null;
  Industry: string | null;
  NumberOfEmployees: number | null;
  Description: string | null;
  OwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Jigsaw: string | null;
  JigsawCompanyId: string | null;
  AccountSource: string | null;
  SicDesc: string | null;
  Account_type__c: string | null;
  DSCORGPKG__Conflict__c: string | null;
  DSCORGPKG__DO_3yr_Employees_Growth__c: string | null;
  DSCORGPKG__DO_3yr_Sales_Growth__c: string | null;
  DSCORGPKG__DeletedFromDiscoverOrg__c: string | null;
  DSCORGPKG__DiscoverOrg_Created_On__c: DateString | null;
  DSCORGPKG__DiscoverOrg_First_Update__c: DateString | null;
  DSCORGPKG__DiscoverOrg_FullCountryName__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_LastUpdate__c: DateString | null;
  DSCORGPKG__DiscoverOrg_State_Full_Name__c: string | null;
  DSCORGPKG__DiscoverOrg_Technologies__c: string | null;
  DSCORGPKG__Exclude_Update__c: boolean;
  DSCORGPKG__External_DiscoverOrg_Id__c: string | null;
  DSCORGPKG__Fiscal_Year_End__c: string | null;
  DSCORGPKG__Fortune_Rank__c: string | null;
  DSCORGPKG__ITOrgChart__c: string | null;
  DSCORGPKG__IT_Budget__c: number | null;
  DSCORGPKG__IT_Employees__c: number | null;
  DSCORGPKG__Lead_Source__c: string | null;
  DSCORGPKG__Locked_By_User__c: string | null;
  DSCORGPKG__NAICS_Codes__c: string | null;
  DSCORGPKG__Ownership__c: string | null;
  DSCORGPKG__SIC_Codes__c: string | null;
  Account_Plan__c: string | null;
  Top_10__c: boolean;
  Next_10__c: boolean;
  Company_LinkedIn__c: string | null;
  Lead_Source__c: string | null;
  UTM_Content__c: string | null;
  UTM_Campaign__c: string | null;
  UTM_Term__c: string | null;
  UTM_Medium__c: string | null;
  UTM_Source__c: string | null;
  Last_Email_or_Meeting_Date__c: DateString | null;
};

type ParentReferences$AccountChangeEvent = {
  //
};

type ChildRelationships$AccountChangeEvent = {
  //
};

interface SObjectDefinition$AccountChangeEvent extends SObjectDefinition<'AccountChangeEvent'> {
    Name: 'AccountChangeEvent';
    Fields: Fields$AccountChangeEvent;
    ParentReferences: ParentReferences$AccountChangeEvent;
    ChildRelationships: ChildRelationships$AccountChangeEvent;
  }

type Fields$AccountContactRelation = {
  //
  Id: string;
  AccountId: string;
  ContactId: string;
  Roles: string | null;
  IsDirect: boolean;
  IsActive: boolean;
  StartDate: DateString | null;
  EndDate: DateString | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Relationship_Strength__c: string | null;
};

type ParentReferences$AccountContactRelation = {
  //
  Account: SObjectDefinition$Account;
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AccountContactRelation = {
  //
};

interface SObjectDefinition$AccountContactRelation extends SObjectDefinition<'AccountContactRelation'> {
    Name: 'AccountContactRelation';
    Fields: Fields$AccountContactRelation;
    ParentReferences: ParentReferences$AccountContactRelation;
    ChildRelationships: ChildRelationships$AccountContactRelation;
  }

type Fields$AccountContactRole = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AccountId: string;
  ContactId: string;
  Role: string | null;
  IsPrimary: boolean;
};

type ParentReferences$AccountContactRole = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account: SObjectDefinition$Account;
  Contact: SObjectDefinition$Contact;
};

type ChildRelationships$AccountContactRole = {
  //
};

interface SObjectDefinition$AccountContactRole extends SObjectDefinition<'AccountContactRole'> {
    Name: 'AccountContactRole';
    Fields: Fields$AccountContactRole;
    ParentReferences: ParentReferences$AccountContactRole;
    ChildRelationships: ChildRelationships$AccountContactRole;
  }

type Fields$AccountContactRoleChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  AccountId: string | null;
  ContactId: string | null;
  Role: string | null;
  IsPrimary: boolean;
};

type ParentReferences$AccountContactRoleChangeEvent = {
  //
};

type ChildRelationships$AccountContactRoleChangeEvent = {
  //
};

interface SObjectDefinition$AccountContactRoleChangeEvent extends SObjectDefinition<'AccountContactRoleChangeEvent'> {
    Name: 'AccountContactRoleChangeEvent';
    Fields: Fields$AccountContactRoleChangeEvent;
    ParentReferences: ParentReferences$AccountContactRoleChangeEvent;
    ChildRelationships: ChildRelationships$AccountContactRoleChangeEvent;
  }

type Fields$AccountFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AccountFeed = {
  //
  Parent: SObjectDefinition$Account;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AccountFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AccountFeed extends SObjectDefinition<'AccountFeed'> {
    Name: 'AccountFeed';
    Fields: Fields$AccountFeed;
    ParentReferences: ParentReferences$AccountFeed;
    ChildRelationships: ChildRelationships$AccountFeed;
  }

type Fields$AccountHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AccountId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AccountHistory = {
  //
  Account: SObjectDefinition$Account;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AccountHistory = {
  //
};

interface SObjectDefinition$AccountHistory extends SObjectDefinition<'AccountHistory'> {
    Name: 'AccountHistory';
    Fields: Fields$AccountHistory;
    ParentReferences: ParentReferences$AccountHistory;
    ChildRelationships: ChildRelationships$AccountHistory;
  }

type Fields$AccountPartner = {
  //
  Id: string;
  AccountFromId: string;
  AccountToId: string;
  OpportunityId: string | null;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  ReversePartnerId: string | null;
};

type ParentReferences$AccountPartner = {
  //
  AccountFrom: SObjectDefinition$Account;
  AccountTo: SObjectDefinition$Account;
  Opportunity: SObjectDefinition$Opportunity | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AccountPartner = {
  //
};

interface SObjectDefinition$AccountPartner extends SObjectDefinition<'AccountPartner'> {
    Name: 'AccountPartner';
    Fields: Fields$AccountPartner;
    ParentReferences: ParentReferences$AccountPartner;
    ChildRelationships: ChildRelationships$AccountPartner;
  }

type Fields$AccountShare = {
  //
  Id: string;
  AccountId: string;
  UserOrGroupId: string;
  AccountAccessLevel: string;
  OpportunityAccessLevel: string;
  CaseAccessLevel: string;
  ContactAccessLevel: string | null;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AccountShare = {
  //
  Account: SObjectDefinition$Account;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AccountShare = {
  //
};

interface SObjectDefinition$AccountShare extends SObjectDefinition<'AccountShare'> {
    Name: 'AccountShare';
    Fields: Fields$AccountShare;
    ParentReferences: ParentReferences$AccountShare;
    ChildRelationships: ChildRelationships$AccountShare;
  }

type Fields$ActionLinkGroupTemplate = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExecutionsAllowed: string;
  HoursUntilExpiration: number | null;
  Category: string;
  IsPublished: boolean;
};

type ParentReferences$ActionLinkGroupTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ActionLinkGroupTemplate = {
  //
  ActionLinkTemplates: SObjectDefinition$ActionLinkTemplate;
};

interface SObjectDefinition$ActionLinkGroupTemplate extends SObjectDefinition<'ActionLinkGroupTemplate'> {
    Name: 'ActionLinkGroupTemplate';
    Fields: Fields$ActionLinkGroupTemplate;
    ParentReferences: ParentReferences$ActionLinkGroupTemplate;
    ChildRelationships: ChildRelationships$ActionLinkGroupTemplate;
  }

type Fields$ActionLinkTemplate = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ActionLinkGroupTemplateId: string;
  LabelKey: string;
  Method: string;
  LinkType: string;
  Position: number;
  IsConfirmationRequired: boolean;
  IsGroupDefault: boolean;
  UserVisibility: string;
  UserAlias: string | null;
  Label: string | null;
  ActionUrl: string;
  RequestBody: string | null;
  Headers: string | null;
};

type ParentReferences$ActionLinkTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ActionLinkGroupTemplate: SObjectDefinition$ActionLinkGroupTemplate;
};

type ChildRelationships$ActionLinkTemplate = {
  //
};

interface SObjectDefinition$ActionLinkTemplate extends SObjectDefinition<'ActionLinkTemplate'> {
    Name: 'ActionLinkTemplate';
    Fields: Fields$ActionLinkTemplate;
    ParentReferences: ParentReferences$ActionLinkTemplate;
    ChildRelationships: ChildRelationships$ActionLinkTemplate;
  }

type Fields$ActivityHistory = {
  //
  Id: string;
  AccountId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  Subject: string | null;
  IsTask: boolean;
  ActivityDate: DateString | null;
  ActivityDateTime: DateString | null;
  OwnerId: string | null;
  Status: string | null;
  Priority: string | null;
  IsHighPriority: boolean;
  ActivityType: string | null;
  IsClosed: boolean;
  IsAllDayEvent: boolean;
  IsVisibleInSelfService: boolean;
  DurationInMinutes: number | null;
  Location: string | null;
  Description: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  EndDateTime: DateString | null;
  StartDateTime: DateString | null;
  PrimaryWhoId: string | null;
  PrimaryAccountId: string | null;
  ActivitySubtype: string | null;
  AlternateDetailId: string | null;
  rcsfl__CALL_UNIQUE_ID__c: string | null;
  rcsfl__CALL_UUID__c: string | null;
  rcsfl__Call_Recording__c: string | null;
  rcsfl__RC_Logging_Type__c: string | null;
  rcsfl__Recording_Information__c: string | null;
  rcsfl__external_whoid__c: string | null;
  rcsfl__hvs_disposition__c: string | null;
  rcsfl__key__c: string | null;
  DB_Activity_Type__c: string | null;
  task_type__c: string | null;
  Outreach_Task_Type__c: string | null;
};

type ParentReferences$ActivityHistory = {
  //
  Account: SObjectDefinition$Account | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PrimaryWho: SObjectDefinition$Name | null;
  PrimaryAccount: SObjectDefinition$Account | null;
  AlternateDetail: SObjectDefinition$EmailMessage | null;
};

type ChildRelationships$ActivityHistory = {
  //
};

interface SObjectDefinition$ActivityHistory extends SObjectDefinition<'ActivityHistory'> {
    Name: 'ActivityHistory';
    Fields: Fields$ActivityHistory;
    ParentReferences: ParentReferences$ActivityHistory;
    ChildRelationships: ChildRelationships$ActivityHistory;
  }

type Fields$ActivityMetric = {
  //
  Id: string;
  BaseId: string;
  BaseType: string | null;
  InactiveDays: number | null;
  LastModifiedDate: DateString;
  LastActivityDateTime: DateString | null;
  LastActivityDateLastModDate: DateString | null;
  NextActivityDateTime: DateString | null;
  NextActivityDateLastModDate: DateString | null;
  LastCallDateTime: DateString | null;
  LastCallDateLastModDate: DateString | null;
  LastEventDateTime: DateString | null;
  LastEventDateLastModDate: DateString | null;
  LastTaskDateTime: DateString | null;
  LastTaskDateLastModDate: DateString | null;
  LastEmailDateTime: DateString | null;
  LastEmailDateLastModDate: DateString | null;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$ActivityMetric = {
  //
  Base: SObjectDefinition$Name;
};

type ChildRelationships$ActivityMetric = {
  //
  AccountActivityMetric: SObjectDefinition$Account;
  ContactActivityMetric: SObjectDefinition$Contact;
  ContractActivityMetric: SObjectDefinition$Contract;
  LeadActivityMetric: SObjectDefinition$Lead;
  OpportunityActivityMetric: SObjectDefinition$Opportunity;
};

interface SObjectDefinition$ActivityMetric extends SObjectDefinition<'ActivityMetric'> {
    Name: 'ActivityMetric';
    Fields: Fields$ActivityMetric;
    ParentReferences: ParentReferences$ActivityMetric;
    ChildRelationships: ChildRelationships$ActivityMetric;
  }

type Fields$ActivityMetricRollup = {
  //
  Id: string;
  BaseId: string;
  BaseType: string | null;
  LastModifiedDate: DateString;
  TotalActivitiesDay: number | null;
  TotalActivitiesDayLastModDate: DateString | null;
  TotalActivities7Days: number | null;
  TotalActivities30Days: number | null;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$ActivityMetricRollup = {
  //
  Base: SObjectDefinition$Name;
};

type ChildRelationships$ActivityMetricRollup = {
  //
  AccountActivityMetricRollup: SObjectDefinition$Account;
  ContactActivityMetricRollup: SObjectDefinition$Contact;
  ContractActivityMetricRollup: SObjectDefinition$Contract;
  LeadActivityMetricRollup: SObjectDefinition$Lead;
  OpportunityActivityMetricRollup: SObjectDefinition$Opportunity;
};

interface SObjectDefinition$ActivityMetricRollup extends SObjectDefinition<'ActivityMetricRollup'> {
    Name: 'ActivityMetricRollup';
    Fields: Fields$ActivityMetricRollup;
    ParentReferences: ParentReferences$ActivityMetricRollup;
    ChildRelationships: ChildRelationships$ActivityMetricRollup;
  }

type Fields$AdditionalNumber = {
  //
  Id: string;
  IsDeleted: boolean;
  CallCenterId: string | null;
  Name: string;
  Description: string | null;
  Phone: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$AdditionalNumber = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AdditionalNumber = {
  //
};

interface SObjectDefinition$AdditionalNumber extends SObjectDefinition<'AdditionalNumber'> {
    Name: 'AdditionalNumber';
    Fields: Fields$AdditionalNumber;
    ParentReferences: ParentReferences$AdditionalNumber;
    ChildRelationships: ChildRelationships$AdditionalNumber;
  }

type Fields$AggregateResult = {
  //
  Id: string;
};

type ParentReferences$AggregateResult = {
  //
};

type ChildRelationships$AggregateResult = {
  //
};

interface SObjectDefinition$AggregateResult extends SObjectDefinition<'AggregateResult'> {
    Name: 'AggregateResult';
    Fields: Fields$AggregateResult;
    ParentReferences: ParentReferences$AggregateResult;
    ChildRelationships: ChildRelationships$AggregateResult;
  }

type Fields$Announcement = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FeedItemId: string;
  ExpirationDate: DateString;
  SendEmails: boolean;
  IsArchived: boolean;
  ParentId: string | null;
};

type ParentReferences$Announcement = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  FeedItem: SObjectDefinition$FeedItem;
  Parent: SObjectDefinition$CollaborationGroup | null;
};

type ChildRelationships$Announcement = {
  //
};

interface SObjectDefinition$Announcement extends SObjectDefinition<'Announcement'> {
    Name: 'Announcement';
    Fields: Fields$Announcement;
    ParentReferences: ParentReferences$Announcement;
    ChildRelationships: ChildRelationships$Announcement;
  }

type Fields$Anticipated_Revenue__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Opportunity__c: string | null;
  Duration__c: number | null;
  Rate__c: number | null;
  Total_Resources__c: number | null;
  Anticipated_Revenue__c: number | null;
};

type ParentReferences$Anticipated_Revenue__ChangeEvent = {
  //
};

type ChildRelationships$Anticipated_Revenue__ChangeEvent = {
  //
};

interface SObjectDefinition$Anticipated_Revenue__ChangeEvent extends SObjectDefinition<'Anticipated_Revenue__ChangeEvent'> {
    Name: 'Anticipated_Revenue__ChangeEvent';
    Fields: Fields$Anticipated_Revenue__ChangeEvent;
    ParentReferences: ParentReferences$Anticipated_Revenue__ChangeEvent;
    ChildRelationships: ChildRelationships$Anticipated_Revenue__ChangeEvent;
  }

type Fields$Anticipated_Revenue__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Opportunity__c: string;
  Duration__c: number | null;
  Rate__c: number | null;
  Total_Resources__c: number | null;
  Anticipated_Revenue__c: number | null;
};

type ParentReferences$Anticipated_Revenue__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Opportunity__r: SObjectDefinition$Opportunity;
};

type ChildRelationships$Anticipated_Revenue__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Anticipated_Revenue__c extends SObjectDefinition<'Anticipated_Revenue__c'> {
    Name: 'Anticipated_Revenue__c';
    Fields: Fields$Anticipated_Revenue__c;
    ParentReferences: ParentReferences$Anticipated_Revenue__c;
    ChildRelationships: ChildRelationships$Anticipated_Revenue__c;
  }

type Fields$ApexClass = {
  //
  Id: string;
  NamespacePrefix: string | null;
  Name: string;
  ApiVersion: number;
  Status: string;
  IsValid: boolean;
  BodyCrc: number | null;
  Body: string | null;
  LengthWithoutComments: number;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ApexClass = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ApexClass = {
  //
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$ApexClass extends SObjectDefinition<'ApexClass'> {
    Name: 'ApexClass';
    Fields: Fields$ApexClass;
    ParentReferences: ParentReferences$ApexClass;
    ChildRelationships: ChildRelationships$ApexClass;
  }

type Fields$ApexComponent = {
  //
  Id: string;
  NamespacePrefix: string | null;
  Name: string;
  ApiVersion: number;
  MasterLabel: string;
  Description: string | null;
  ControllerType: string;
  ControllerKey: string | null;
  Markup: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ApexComponent = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ApexComponent = {
  //
};

interface SObjectDefinition$ApexComponent extends SObjectDefinition<'ApexComponent'> {
    Name: 'ApexComponent';
    Fields: Fields$ApexComponent;
    ParentReferences: ParentReferences$ApexComponent;
    ChildRelationships: ChildRelationships$ApexComponent;
  }

type Fields$ApexEmailNotification = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string | null;
  Email: string | null;
};

type ParentReferences$ApexEmailNotification = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$ApexEmailNotification = {
  //
};

interface SObjectDefinition$ApexEmailNotification extends SObjectDefinition<'ApexEmailNotification'> {
    Name: 'ApexEmailNotification';
    Fields: Fields$ApexEmailNotification;
    ParentReferences: ParentReferences$ApexEmailNotification;
    ChildRelationships: ChildRelationships$ApexEmailNotification;
  }

type Fields$ApexLog = {
  //
  Id: string;
  LogUserId: string | null;
  LogLength: number;
  LastModifiedDate: DateString;
  Request: string;
  Operation: string;
  Application: string;
  Status: string;
  DurationMilliseconds: number;
  SystemModstamp: DateString;
  StartTime: DateString;
  Location: string | null;
  RequestIdentifier: string | null;
};

type ParentReferences$ApexLog = {
  //
  LogUser: SObjectDefinition$User | null;
};

type ChildRelationships$ApexLog = {
  //
};

interface SObjectDefinition$ApexLog extends SObjectDefinition<'ApexLog'> {
    Name: 'ApexLog';
    Fields: Fields$ApexLog;
    ParentReferences: ParentReferences$ApexLog;
    ChildRelationships: ChildRelationships$ApexLog;
  }

type Fields$ApexPage = {
  //
  Id: string;
  NamespacePrefix: string | null;
  Name: string;
  ApiVersion: number;
  MasterLabel: string;
  Description: string | null;
  ControllerType: string;
  ControllerKey: string | null;
  IsAvailableInTouch: boolean;
  IsConfirmationTokenRequired: boolean;
  Markup: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ApexPage = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ApexPage = {
  //
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$ApexPage extends SObjectDefinition<'ApexPage'> {
    Name: 'ApexPage';
    Fields: Fields$ApexPage;
    ParentReferences: ParentReferences$ApexPage;
    ChildRelationships: ChildRelationships$ApexPage;
  }

type Fields$ApexPageInfo = {
  //
  Id: string;
  DurableId: string | null;
  ApexPageId: string;
  Name: string;
  NameSpacePrefix: string | null;
  ApiVersion: number;
  Description: string | null;
  IsAvailableInTouch: boolean;
  MasterLabel: string | null;
  IsShowHeader: string | null;
};

type ParentReferences$ApexPageInfo = {
  //
};

type ChildRelationships$ApexPageInfo = {
  //
};

interface SObjectDefinition$ApexPageInfo extends SObjectDefinition<'ApexPageInfo'> {
    Name: 'ApexPageInfo';
    Fields: Fields$ApexPageInfo;
    ParentReferences: ParentReferences$ApexPageInfo;
    ChildRelationships: ChildRelationships$ApexPageInfo;
  }

type Fields$ApexTestQueueItem = {
  //
  Id: string;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
  ApexClassId: string;
  Status: string;
  ExtendedStatus: string | null;
  ParentJobId: string | null;
  TestRunResultId: string | null;
  ShouldSkipCodeCoverage: boolean;
};

type ParentReferences$ApexTestQueueItem = {
  //
  CreatedBy: SObjectDefinition$User;
  ApexClass: SObjectDefinition$ApexClass;
};

type ChildRelationships$ApexTestQueueItem = {
  //
};

interface SObjectDefinition$ApexTestQueueItem extends SObjectDefinition<'ApexTestQueueItem'> {
    Name: 'ApexTestQueueItem';
    Fields: Fields$ApexTestQueueItem;
    ParentReferences: ParentReferences$ApexTestQueueItem;
    ChildRelationships: ChildRelationships$ApexTestQueueItem;
  }

type Fields$ApexTestResult = {
  //
  Id: string;
  SystemModstamp: DateString;
  TestTimestamp: DateString;
  Outcome: string;
  ApexClassId: string;
  MethodName: string | null;
  Message: string | null;
  StackTrace: string | null;
  AsyncApexJobId: string | null;
  QueueItemId: string | null;
  ApexLogId: string | null;
  ApexTestRunResultId: string | null;
  RunTime: number | null;
};

type ParentReferences$ApexTestResult = {
  //
  ApexClass: SObjectDefinition$ApexClass;
  AsyncApexJob: SObjectDefinition$AsyncApexJob | null;
  QueueItem: SObjectDefinition$ApexTestQueueItem | null;
  ApexLog: SObjectDefinition$ApexLog | null;
  ApexTestRunResult: SObjectDefinition$ApexTestRunResult | null;
};

type ChildRelationships$ApexTestResult = {
  //
  ApexTestResults: SObjectDefinition$ApexTestResultLimits;
};

interface SObjectDefinition$ApexTestResult extends SObjectDefinition<'ApexTestResult'> {
    Name: 'ApexTestResult';
    Fields: Fields$ApexTestResult;
    ParentReferences: ParentReferences$ApexTestResult;
    ChildRelationships: ChildRelationships$ApexTestResult;
  }

type Fields$ApexTestResultLimits = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ApexTestResultId: string;
  Soql: number;
  QueryRows: number;
  Sosl: number;
  Dml: number;
  DmlRows: number;
  Cpu: number;
  Callouts: number;
  Email: number;
  AsyncCalls: number;
  MobilePush: number;
  LimitContext: string | null;
  LimitExceptions: string | null;
};

type ParentReferences$ApexTestResultLimits = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ApexTestResult: SObjectDefinition$ApexTestResult;
};

type ChildRelationships$ApexTestResultLimits = {
  //
};

interface SObjectDefinition$ApexTestResultLimits extends SObjectDefinition<'ApexTestResultLimits'> {
    Name: 'ApexTestResultLimits';
    Fields: Fields$ApexTestResultLimits;
    ParentReferences: ParentReferences$ApexTestResultLimits;
    ChildRelationships: ChildRelationships$ApexTestResultLimits;
  }

type Fields$ApexTestRunResult = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AsyncApexJobId: string | null;
  UserId: string | null;
  JobName: string | null;
  IsAllTests: boolean;
  Source: string | null;
  StartTime: DateString;
  EndTime: DateString | null;
  TestTime: number | null;
  Status: string;
  ClassesEnqueued: number;
  ClassesCompleted: number | null;
  MethodsEnqueued: number | null;
  MethodsCompleted: number | null;
  MethodsFailed: number | null;
};

type ParentReferences$ApexTestRunResult = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AsyncApexJob: SObjectDefinition$AsyncApexJob | null;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$ApexTestRunResult = {
  //
};

interface SObjectDefinition$ApexTestRunResult extends SObjectDefinition<'ApexTestRunResult'> {
    Name: 'ApexTestRunResult';
    Fields: Fields$ApexTestRunResult;
    ParentReferences: ParentReferences$ApexTestRunResult;
    ChildRelationships: ChildRelationships$ApexTestRunResult;
  }

type Fields$ApexTestSuite = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TestSuiteName: string;
};

type ParentReferences$ApexTestSuite = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ApexTestSuite = {
  //
  ApexClassJunctions: SObjectDefinition$TestSuiteMembership;
};

interface SObjectDefinition$ApexTestSuite extends SObjectDefinition<'ApexTestSuite'> {
    Name: 'ApexTestSuite';
    Fields: Fields$ApexTestSuite;
    ParentReferences: ParentReferences$ApexTestSuite;
    ChildRelationships: ChildRelationships$ApexTestSuite;
  }

type Fields$ApexTrigger = {
  //
  Id: string;
  NamespacePrefix: string | null;
  Name: string;
  TableEnumOrId: string | null;
  UsageBeforeInsert: boolean;
  UsageAfterInsert: boolean;
  UsageBeforeUpdate: boolean;
  UsageAfterUpdate: boolean;
  UsageBeforeDelete: boolean;
  UsageAfterDelete: boolean;
  UsageIsBulk: boolean;
  UsageAfterUndelete: boolean;
  ApiVersion: number;
  Status: string;
  IsValid: boolean;
  BodyCrc: number | null;
  Body: string | null;
  LengthWithoutComments: number;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ApexTrigger = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ApexTrigger = {
  //
};

interface SObjectDefinition$ApexTrigger extends SObjectDefinition<'ApexTrigger'> {
    Name: 'ApexTrigger';
    Fields: Fields$ApexTrigger;
    ParentReferences: ParentReferences$ApexTrigger;
    ChildRelationships: ChildRelationships$ApexTrigger;
  }

type Fields$AppAnalyticsQueryRequest = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DataType: string;
  StartTime: DateString | null;
  EndTime: DateString | null;
  RequestState: string | null;
  DownloadUrl: string | null;
  DownloadExpirationTime: DateString | null;
  ErrorMessage: string | null;
  PackageIds: string | null;
  OrganizationIds: string | null;
  DownloadSize: string | null;
};

type ParentReferences$AppAnalyticsQueryRequest = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AppAnalyticsQueryRequest = {
  //
};

interface SObjectDefinition$AppAnalyticsQueryRequest extends SObjectDefinition<'AppAnalyticsQueryRequest'> {
    Name: 'AppAnalyticsQueryRequest';
    Fields: Fields$AppAnalyticsQueryRequest;
    ParentReferences: ParentReferences$AppAnalyticsQueryRequest;
    ChildRelationships: ChildRelationships$AppAnalyticsQueryRequest;
  }

type Fields$AppDefinition = {
  //
  Id: string;
  DurableId: string | null;
  Label: string | null;
  MasterLabel: string | null;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  LogoUrl: string | null;
  Description: string | null;
  UiType: string | null;
  NavType: string | null;
  UtilityBar: string | null;
  HeaderColor: string | null;
  IsOverrideOrgTheme: boolean;
  IsSmallFormFactorSupported: boolean;
  IsMediumFormFactorSupported: boolean;
  IsLargeFormFactorSupported: boolean;
  IsNavPersonalizationDisabled: boolean;
  IsNavAutoTempTabsDisabled: boolean;
};

type ParentReferences$AppDefinition = {
  //
};

type ChildRelationships$AppDefinition = {
  //
  AppTabs: SObjectDefinition$AppTabMember;
};

interface SObjectDefinition$AppDefinition extends SObjectDefinition<'AppDefinition'> {
    Name: 'AppDefinition';
    Fields: Fields$AppDefinition;
    ParentReferences: ParentReferences$AppDefinition;
    ChildRelationships: ChildRelationships$AppDefinition;
  }

type Fields$AppMenuItem = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SortOrder: number;
  Name: string | null;
  NamespacePrefix: string | null;
  Label: string | null;
  Description: string | null;
  StartUrl: string | null;
  MobileStartUrl: string | null;
  LogoUrl: string | null;
  IconUrl: string | null;
  InfoUrl: string | null;
  IsUsingAdminAuthorization: boolean;
  MobilePlatform: string | null;
  MobileMinOsVer: string | null;
  MobileDeviceType: string | null;
  IsRegisteredDeviceOnly: boolean;
  MobileAppVer: string | null;
  MobileAppInstalledDate: DateString | null;
  MobileAppInstalledVersion: string | null;
  MobileAppBinaryId: string | null;
  MobileAppInstallUrl: string | null;
  CanvasEnabled: boolean;
  CanvasReferenceId: string | null;
  CanvasUrl: string | null;
  CanvasAccessMethod: string | null;
  CanvasSelectedLocations: string | null;
  CanvasOptions: string | null;
  Type: string | null;
  ApplicationId: string | null;
  UserSortOrder: number | null;
  IsVisible: boolean;
  IsAccessible: boolean;
};

type ParentReferences$AppMenuItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AppMenuItem = {
  //
};

interface SObjectDefinition$AppMenuItem extends SObjectDefinition<'AppMenuItem'> {
    Name: 'AppMenuItem';
    Fields: Fields$AppMenuItem;
    ParentReferences: ParentReferences$AppMenuItem;
    ChildRelationships: ChildRelationships$AppMenuItem;
  }

type Fields$AppTabMember = {
  //
  Id: string;
  DurableId: string | null;
  AppDefinitionId: string | null;
  TabDefinitionId: string | null;
  SortOrder: number | null;
  WorkspaceDriverField: string | null;
};

type ParentReferences$AppTabMember = {
  //
};

type ChildRelationships$AppTabMember = {
  //
};

interface SObjectDefinition$AppTabMember extends SObjectDefinition<'AppTabMember'> {
    Name: 'AppTabMember';
    Fields: Fields$AppTabMember;
    ParentReferences: ParentReferences$AppTabMember;
    ChildRelationships: ChildRelationships$AppTabMember;
  }

type Fields$AppleDomainVerification = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string | null;
  TextFile: string | null;
};

type ParentReferences$AppleDomainVerification = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Domain | null;
};

type ChildRelationships$AppleDomainVerification = {
  //
};

interface SObjectDefinition$AppleDomainVerification extends SObjectDefinition<'AppleDomainVerification'> {
    Name: 'AppleDomainVerification';
    Fields: Fields$AppleDomainVerification;
    ParentReferences: ParentReferences$AppleDomainVerification;
    ChildRelationships: ChildRelationships$AppleDomainVerification;
  }

type Fields$Applicant__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Email__c: string | null;
  Mobile__c: string | null;
  First_Name__c: string | null;
  Middle_Name__c: string | null;
  Last_Name__c: string | null;
  Nickname__c: string | null;
  Suffix__c: string | null;
  Date_Added__c: DateString | null;
  Candidate_Status__c: string | null;
  Potential_Smoothstack_Email__c: string | null;
  Potential_Smoothstack_Email_QC__c: string | null;
  Address__Street__s: string | null;
  Address__City__s: string | null;
  Address__PostalCode__s: string | null;
  Address__StateCode__s: string | null;
  Address__CountryCode__s: string | null;
  Address__Latitude__s: number | null;
  Address__Longitude__s: number | null;
  Address__GeocodeAccuracy__s: string | null;
  Address__c: Address | null;
  County__c: string | null;
};

type ParentReferences$Applicant__ChangeEvent = {
  //
};

type ChildRelationships$Applicant__ChangeEvent = {
  //
};

interface SObjectDefinition$Applicant__ChangeEvent extends SObjectDefinition<'Applicant__ChangeEvent'> {
    Name: 'Applicant__ChangeEvent';
    Fields: Fields$Applicant__ChangeEvent;
    ParentReferences: ParentReferences$Applicant__ChangeEvent;
    ChildRelationships: ChildRelationships$Applicant__ChangeEvent;
  }

type Fields$Applicant__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Applicant__History = {
  //
  Parent: SObjectDefinition$Applicant__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Applicant__History = {
  //
};

interface SObjectDefinition$Applicant__History extends SObjectDefinition<'Applicant__History'> {
    Name: 'Applicant__History';
    Fields: Fields$Applicant__History;
    ParentReferences: ParentReferences$Applicant__History;
    ChildRelationships: ChildRelationships$Applicant__History;
  }

type Fields$Applicant__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Email__c: string | null;
  Mobile__c: string | null;
  First_Name__c: string | null;
  Middle_Name__c: string | null;
  Last_Name__c: string | null;
  Nickname__c: string | null;
  Suffix__c: string | null;
  Date_Added__c: DateString | null;
  Candidate_Status__c: string | null;
  Potential_Smoothstack_Email__c: string | null;
  Potential_Smoothstack_Email_QC__c: string | null;
  Address__Street__s: string | null;
  Address__City__s: string | null;
  Address__PostalCode__s: string | null;
  Address__StateCode__s: string | null;
  Address__CountryCode__s: string | null;
  Address__Latitude__s: number | null;
  Address__Longitude__s: number | null;
  Address__GeocodeAccuracy__s: string | null;
  Address__c: Address | null;
  County__c: string | null;
};

type ParentReferences$Applicant__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Applicant__c = {
  //
  Histories: SObjectDefinition$Applicant__History;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Applicant__c extends SObjectDefinition<'Applicant__c'> {
    Name: 'Applicant__c';
    Fields: Fields$Applicant__c;
    ParentReferences: ParentReferences$Applicant__c;
    ChildRelationships: ChildRelationships$Applicant__c;
  }

type Fields$Approval = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  Status: string;
  RequestComment: string | null;
  ApproveComment: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$Approval = {
  //
  Parent: SObjectDefinition$Contract;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Approval = {
  //
};

interface SObjectDefinition$Approval extends SObjectDefinition<'Approval'> {
    Name: 'Approval';
    Fields: Fields$Approval;
    ParentReferences: ParentReferences$Approval;
    ChildRelationships: ChildRelationships$Approval;
  }

type Fields$Asset = {
  //
  Id: string;
  ContactId: string | null;
  AccountId: string | null;
  ParentId: string | null;
  RootAssetId: string | null;
  Product2Id: string | null;
  ProductCode: string | null;
  IsCompetitorProduct: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Name: string;
  SerialNumber: string | null;
  InstallDate: DateString | null;
  PurchaseDate: DateString | null;
  UsageEndDate: DateString | null;
  Status: string | null;
  Price: number | null;
  Quantity: number | null;
  Description: string | null;
  OwnerId: string;
  AssetProvidedById: string | null;
  AssetServicedById: string | null;
  IsInternal: boolean;
  AssetLevel: number | null;
  StockKeepingUnit: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Asset = {
  //
  Contact: SObjectDefinition$Contact | null;
  Account: SObjectDefinition$Account | null;
  Parent: SObjectDefinition$Asset | null;
  RootAsset: SObjectDefinition$Asset | null;
  Product2: SObjectDefinition$Product2 | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$User;
  AssetProvidedBy: SObjectDefinition$Account | null;
  AssetServicedBy: SObjectDefinition$Account | null;
};

type ChildRelationships$Asset = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  ChildAssets: SObjectDefinition$Asset;
  Feeds: SObjectDefinition$AssetFeed;
  Histories: SObjectDefinition$AssetHistory;
  PrimaryAssets: SObjectDefinition$AssetRelationship;
  RelatedAssets: SObjectDefinition$AssetRelationship;
  Shares: SObjectDefinition$AssetShare;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Asset extends SObjectDefinition<'Asset'> {
    Name: 'Asset';
    Fields: Fields$Asset;
    ParentReferences: ParentReferences$Asset;
    ChildRelationships: ChildRelationships$Asset;
  }

type Fields$AssetChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  ContactId: string | null;
  AccountId: string | null;
  ParentId: string | null;
  RootAssetId: string | null;
  Product2Id: string | null;
  IsCompetitorProduct: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Name: string | null;
  SerialNumber: string | null;
  InstallDate: DateString | null;
  PurchaseDate: DateString | null;
  UsageEndDate: DateString | null;
  Status: string | null;
  Price: number | null;
  Quantity: number | null;
  Description: string | null;
  OwnerId: string | null;
  AssetProvidedById: string | null;
  AssetServicedById: string | null;
  IsInternal: boolean;
};

type ParentReferences$AssetChangeEvent = {
  //
};

type ChildRelationships$AssetChangeEvent = {
  //
};

interface SObjectDefinition$AssetChangeEvent extends SObjectDefinition<'AssetChangeEvent'> {
    Name: 'AssetChangeEvent';
    Fields: Fields$AssetChangeEvent;
    ParentReferences: ParentReferences$AssetChangeEvent;
    ChildRelationships: ChildRelationships$AssetChangeEvent;
  }

type Fields$AssetFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AssetFeed = {
  //
  Parent: SObjectDefinition$Asset;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AssetFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AssetFeed extends SObjectDefinition<'AssetFeed'> {
    Name: 'AssetFeed';
    Fields: Fields$AssetFeed;
    ParentReferences: ParentReferences$AssetFeed;
    ChildRelationships: ChildRelationships$AssetFeed;
  }

type Fields$AssetHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AssetId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AssetHistory = {
  //
  Asset: SObjectDefinition$Asset;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AssetHistory = {
  //
};

interface SObjectDefinition$AssetHistory extends SObjectDefinition<'AssetHistory'> {
    Name: 'AssetHistory';
    Fields: Fields$AssetHistory;
    ParentReferences: ParentReferences$AssetHistory;
    ChildRelationships: ChildRelationships$AssetHistory;
  }

type Fields$AssetRelationship = {
  //
  Id: string;
  IsDeleted: boolean;
  AssetRelationshipNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AssetId: string;
  RelatedAssetId: string;
  FromDate: DateString | null;
  ToDate: DateString | null;
  RelationshipType: string | null;
};

type ParentReferences$AssetRelationship = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Asset: SObjectDefinition$Asset;
  RelatedAsset: SObjectDefinition$Asset;
};

type ChildRelationships$AssetRelationship = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Feeds: SObjectDefinition$AssetRelationshipFeed;
  Histories: SObjectDefinition$AssetRelationshipHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$AssetRelationship extends SObjectDefinition<'AssetRelationship'> {
    Name: 'AssetRelationship';
    Fields: Fields$AssetRelationship;
    ParentReferences: ParentReferences$AssetRelationship;
    ChildRelationships: ChildRelationships$AssetRelationship;
  }

type Fields$AssetRelationshipFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$AssetRelationshipFeed = {
  //
  Parent: SObjectDefinition$AssetRelationship;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$AssetRelationshipFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$AssetRelationshipFeed extends SObjectDefinition<'AssetRelationshipFeed'> {
    Name: 'AssetRelationshipFeed';
    Fields: Fields$AssetRelationshipFeed;
    ParentReferences: ParentReferences$AssetRelationshipFeed;
    ChildRelationships: ChildRelationships$AssetRelationshipFeed;
  }

type Fields$AssetRelationshipHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AssetRelationshipId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AssetRelationshipHistory = {
  //
  AssetRelationship: SObjectDefinition$AssetRelationship;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AssetRelationshipHistory = {
  //
};

interface SObjectDefinition$AssetRelationshipHistory extends SObjectDefinition<'AssetRelationshipHistory'> {
    Name: 'AssetRelationshipHistory';
    Fields: Fields$AssetRelationshipHistory;
    ParentReferences: ParentReferences$AssetRelationshipHistory;
    ChildRelationships: ChildRelationships$AssetRelationshipHistory;
  }

type Fields$AssetShare = {
  //
  Id: string;
  AssetId: string;
  UserOrGroupId: string;
  AssetAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AssetShare = {
  //
  Asset: SObjectDefinition$Asset;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AssetShare = {
  //
};

interface SObjectDefinition$AssetShare extends SObjectDefinition<'AssetShare'> {
    Name: 'AssetShare';
    Fields: Fields$AssetShare;
    ParentReferences: ParentReferences$AssetShare;
    ChildRelationships: ChildRelationships$AssetShare;
  }

type Fields$AssetTokenEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  ConnectedAppId: string | null;
  UserId: string | null;
  AssetId: string | null;
  Name: string | null;
  DeviceId: string | null;
  DeviceKey: string | null;
  Expiration: DateString | null;
  AssetSerialNumber: string | null;
  AssetName: string | null;
  ActorTokenPayload: string | null;
};

type ParentReferences$AssetTokenEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  ConnectedApp: SObjectDefinition$ConnectedApplication | null;
  User: SObjectDefinition$User | null;
  Asset: SObjectDefinition$Asset | null;
};

type ChildRelationships$AssetTokenEvent = {
  //
};

interface SObjectDefinition$AssetTokenEvent extends SObjectDefinition<'AssetTokenEvent'> {
    Name: 'AssetTokenEvent';
    Fields: Fields$AssetTokenEvent;
    ParentReferences: ParentReferences$AssetTokenEvent;
    ChildRelationships: ChildRelationships$AssetTokenEvent;
  }

type Fields$AssignmentRule = {
  //
  Id: string;
  Name: string | null;
  SobjectType: string | null;
  Active: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$AssignmentRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AssignmentRule = {
  //
};

interface SObjectDefinition$AssignmentRule extends SObjectDefinition<'AssignmentRule'> {
    Name: 'AssignmentRule';
    Fields: Fields$AssignmentRule;
    ParentReferences: ParentReferences$AssignmentRule;
    ChildRelationships: ChildRelationships$AssignmentRule;
  }

type Fields$Assignment_Group_Member__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Assignment_Group__c: string | null;
  User__c: string | null;
  Calendar_ID__c: string | null;
  Last_Assignment_Date__c: DateString | null;
  Active__c: boolean;
  Pause_Assignments__c: boolean;
};

type ParentReferences$Assignment_Group_Member__ChangeEvent = {
  //
};

type ChildRelationships$Assignment_Group_Member__ChangeEvent = {
  //
};

interface SObjectDefinition$Assignment_Group_Member__ChangeEvent extends SObjectDefinition<'Assignment_Group_Member__ChangeEvent'> {
    Name: 'Assignment_Group_Member__ChangeEvent';
    Fields: Fields$Assignment_Group_Member__ChangeEvent;
    ParentReferences: ParentReferences$Assignment_Group_Member__ChangeEvent;
    ChildRelationships: ChildRelationships$Assignment_Group_Member__ChangeEvent;
  }

type Fields$Assignment_Group_Member__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Assignment_Group__c: string;
  User__c: string | null;
  Calendar_ID__c: string;
  Last_Assignment_Date__c: DateString | null;
  Active__c: boolean;
  Pause_Assignments__c: boolean;
};

type ParentReferences$Assignment_Group_Member__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Assignment_Group__r: SObjectDefinition$Assignment_Group__c;
  User__r: SObjectDefinition$User | null;
};

type ChildRelationships$Assignment_Group_Member__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Assignment_Group_Member__c extends SObjectDefinition<'Assignment_Group_Member__c'> {
    Name: 'Assignment_Group_Member__c';
    Fields: Fields$Assignment_Group_Member__c;
    ParentReferences: ParentReferences$Assignment_Group_Member__c;
    ChildRelationships: ChildRelationships$Assignment_Group_Member__c;
  }

type Fields$Assignment_Group__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Object__c: string | null;
  Group_Member_Count__c: number | null;
};

type ParentReferences$Assignment_Group__ChangeEvent = {
  //
};

type ChildRelationships$Assignment_Group__ChangeEvent = {
  //
};

interface SObjectDefinition$Assignment_Group__ChangeEvent extends SObjectDefinition<'Assignment_Group__ChangeEvent'> {
    Name: 'Assignment_Group__ChangeEvent';
    Fields: Fields$Assignment_Group__ChangeEvent;
    ParentReferences: ParentReferences$Assignment_Group__ChangeEvent;
    ChildRelationships: ChildRelationships$Assignment_Group__ChangeEvent;
  }

type Fields$Assignment_Group__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Object__c: string | null;
  Group_Member_Count__c: number | null;
};

type ParentReferences$Assignment_Group__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Assignment_Group__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Assignment_Group__c extends SObjectDefinition<'Assignment_Group__c'> {
    Name: 'Assignment_Group__c';
    Fields: Fields$Assignment_Group__c;
    ParentReferences: ParentReferences$Assignment_Group__c;
    ChildRelationships: ChildRelationships$Assignment_Group__c;
  }

type Fields$AssociatedLocation = {
  //
  Id: string;
  IsDeleted: boolean;
  AssociatedLocationNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentRecordId: string;
  LocationId: string;
  Type: string | null;
  ActiveFrom: DateString | null;
  ActiveTo: DateString | null;
};

type ParentReferences$AssociatedLocation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentRecord: SObjectDefinition$Account;
  Location: SObjectDefinition$Location;
};

type ChildRelationships$AssociatedLocation = {
  //
  Histories: SObjectDefinition$AssociatedLocationHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$AssociatedLocation extends SObjectDefinition<'AssociatedLocation'> {
    Name: 'AssociatedLocation';
    Fields: Fields$AssociatedLocation;
    ParentReferences: ParentReferences$AssociatedLocation;
    ChildRelationships: ChildRelationships$AssociatedLocation;
  }

type Fields$AssociatedLocationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AssociatedLocationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AssociatedLocationHistory = {
  //
  AssociatedLocation: SObjectDefinition$AssociatedLocation;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AssociatedLocationHistory = {
  //
};

interface SObjectDefinition$AssociatedLocationHistory extends SObjectDefinition<'AssociatedLocationHistory'> {
    Name: 'AssociatedLocationHistory';
    Fields: Fields$AssociatedLocationHistory;
    ParentReferences: ParentReferences$AssociatedLocationHistory;
    ChildRelationships: ChildRelationships$AssociatedLocationHistory;
  }

type Fields$AsyncApexJob = {
  //
  Id: string;
  CreatedDate: DateString;
  CreatedById: string;
  JobType: string;
  ApexClassId: string | null;
  Status: string;
  JobItemsProcessed: number;
  TotalJobItems: number | null;
  NumberOfErrors: number | null;
  CompletedDate: DateString | null;
  MethodName: string | null;
  ExtendedStatus: string | null;
  ParentJobId: string | null;
  LastProcessed: string | null;
  LastProcessedOffset: number | null;
};

type ParentReferences$AsyncApexJob = {
  //
  CreatedBy: SObjectDefinition$User;
  ApexClass: SObjectDefinition$ApexClass | null;
};

type ChildRelationships$AsyncApexJob = {
  //
  AsyncApex: SObjectDefinition$ApexTestRunResult;
};

interface SObjectDefinition$AsyncApexJob extends SObjectDefinition<'AsyncApexJob'> {
    Name: 'AsyncApexJob';
    Fields: Fields$AsyncApexJob;
    ParentReferences: ParentReferences$AsyncApexJob;
    ChildRelationships: ChildRelationships$AsyncApexJob;
  }

type Fields$AsyncOperationEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  OperationId: string | null;
  SourceEvent: any | null;
  OperationDetails: any | null;
};

type ParentReferences$AsyncOperationEvent = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AsyncOperationEvent = {
  //
};

interface SObjectDefinition$AsyncOperationEvent extends SObjectDefinition<'AsyncOperationEvent'> {
    Name: 'AsyncOperationEvent';
    Fields: Fields$AsyncOperationEvent;
    ParentReferences: ParentReferences$AsyncOperationEvent;
    ChildRelationships: ChildRelationships$AsyncOperationEvent;
  }

type Fields$AsyncOperationStatus = {
  //
  CreatedDate: DateString;
  CreatedById: string;
  Fields: any | null;
  Status: string | null;
  Category: string | null;
  Message: string | null;
  StatusCode: string | null;
};

type ParentReferences$AsyncOperationStatus = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AsyncOperationStatus = {
  //
};

interface SObjectDefinition$AsyncOperationStatus extends SObjectDefinition<'AsyncOperationStatus'> {
    Name: 'AsyncOperationStatus';
    Fields: Fields$AsyncOperationStatus;
    ParentReferences: ParentReferences$AsyncOperationStatus;
    ChildRelationships: ChildRelationships$AsyncOperationStatus;
  }

type Fields$AttachedContentDocument = {
  //
  Id: string;
  IsDeleted: boolean;
  LinkedEntityId: string;
  ContentDocumentId: string | null;
  Title: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  ContentUrl: string | null;
  ExternalDataSourceName: string | null;
  ExternalDataSourceType: string | null;
  SharingOption: string | null;
};

type ParentReferences$AttachedContentDocument = {
  //
  LinkedEntity: SObjectDefinition$Name;
  ContentDocument: SObjectDefinition$ContentDocument | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AttachedContentDocument = {
  //
};

interface SObjectDefinition$AttachedContentDocument extends SObjectDefinition<'AttachedContentDocument'> {
    Name: 'AttachedContentDocument';
    Fields: Fields$AttachedContentDocument;
    ParentReferences: ParentReferences$AttachedContentDocument;
    ChildRelationships: ChildRelationships$AttachedContentDocument;
  }

type Fields$AttachedContentNote = {
  //
  Id: string;
  IsDeleted: boolean;
  LinkedEntityId: string;
  ContentDocumentId: string | null;
  Title: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  TextPreview: string | null;
};

type ParentReferences$AttachedContentNote = {
  //
  LinkedEntity: SObjectDefinition$Name;
  ContentDocument: SObjectDefinition$ContentDocument | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AttachedContentNote = {
  //
};

interface SObjectDefinition$AttachedContentNote extends SObjectDefinition<'AttachedContentNote'> {
    Name: 'AttachedContentNote';
    Fields: Fields$AttachedContentNote;
    ParentReferences: ParentReferences$AttachedContentNote;
    ChildRelationships: ChildRelationships$AttachedContentNote;
  }

type Fields$Attachment = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  Name: string;
  IsPrivate: boolean;
  ContentType: string | null;
  BodyLength: number | null;
  Body: BlobString;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
};

type ParentReferences$Attachment = {
  //
  Parent: SObjectDefinition$Name;
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Attachment = {
  //
};

interface SObjectDefinition$Attachment extends SObjectDefinition<'Attachment'> {
    Name: 'Attachment';
    Fields: Fields$Attachment;
    ParentReferences: ParentReferences$Attachment;
    ChildRelationships: ChildRelationships$Attachment;
  }

type Fields$AuraDefinition = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AuraDefinitionBundleId: string;
  DefType: string;
  Format: string;
  Source: string;
};

type ParentReferences$AuraDefinition = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuraDefinitionBundle: SObjectDefinition$AuraDefinitionBundle;
};

type ChildRelationships$AuraDefinition = {
  //
};

interface SObjectDefinition$AuraDefinition extends SObjectDefinition<'AuraDefinition'> {
    Name: 'AuraDefinition';
    Fields: Fields$AuraDefinition;
    ParentReferences: ParentReferences$AuraDefinition;
    ChildRelationships: ChildRelationships$AuraDefinition;
  }

type Fields$AuraDefinitionBundle = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ApiVersion: number;
  Description: string;
};

type ParentReferences$AuraDefinitionBundle = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuraDefinitionBundle = {
  //
};

interface SObjectDefinition$AuraDefinitionBundle extends SObjectDefinition<'AuraDefinitionBundle'> {
    Name: 'AuraDefinitionBundle';
    Fields: Fields$AuraDefinitionBundle;
    ParentReferences: ParentReferences$AuraDefinitionBundle;
    ChildRelationships: ChildRelationships$AuraDefinitionBundle;
  }

type Fields$AuraDefinitionBundleInfo = {
  //
  Id: string;
  DurableId: string | null;
  AuraDefinitionBundleId: string;
  ApiVersion: number;
  DeveloperName: string | null;
  NamespacePrefix: string | null;
};

type ParentReferences$AuraDefinitionBundleInfo = {
  //
};

type ChildRelationships$AuraDefinitionBundleInfo = {
  //
  Bundle: SObjectDefinition$AuraDefinitionInfo;
};

interface SObjectDefinition$AuraDefinitionBundleInfo extends SObjectDefinition<'AuraDefinitionBundleInfo'> {
    Name: 'AuraDefinitionBundleInfo';
    Fields: Fields$AuraDefinitionBundleInfo;
    ParentReferences: ParentReferences$AuraDefinitionBundleInfo;
    ChildRelationships: ChildRelationships$AuraDefinitionBundleInfo;
  }

type Fields$AuraDefinitionInfo = {
  //
  Id: string;
  DurableId: string | null;
  AuraDefinitionBundleInfoId: string | null;
  AuraDefinitionId: string;
  DefType: string;
  Format: string;
  Source: string;
  LastModifiedDate: DateString;
  DeveloperName: string | null;
  NamespacePrefix: string | null;
};

type ParentReferences$AuraDefinitionInfo = {
  //
};

type ChildRelationships$AuraDefinitionInfo = {
  //
};

interface SObjectDefinition$AuraDefinitionInfo extends SObjectDefinition<'AuraDefinitionInfo'> {
    Name: 'AuraDefinitionInfo';
    Fields: Fields$AuraDefinitionInfo;
    ParentReferences: ParentReferences$AuraDefinitionInfo;
    ChildRelationships: ChildRelationships$AuraDefinitionInfo;
  }

type Fields$AuthConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Url: string;
  AuthOptionsUsernamePassword: boolean;
  AuthOptionsSaml: boolean;
  AuthOptionsAuthProvider: boolean;
  AuthOptionsCertificate: boolean;
  IsActive: boolean;
  Type: string;
};

type ParentReferences$AuthConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthConfig = {
  //
  AuthProvidersForConfig: SObjectDefinition$AuthConfigProviders;
};

interface SObjectDefinition$AuthConfig extends SObjectDefinition<'AuthConfig'> {
    Name: 'AuthConfig';
    Fields: Fields$AuthConfig;
    ParentReferences: ParentReferences$AuthConfig;
    ChildRelationships: ChildRelationships$AuthConfig;
  }

type Fields$AuthConfigProviders = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AuthConfigId: string;
  AuthProviderId: string;
};

type ParentReferences$AuthConfigProviders = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthConfig: SObjectDefinition$AuthConfig;
  AuthProvider: SObjectDefinition$Name;
};

type ChildRelationships$AuthConfigProviders = {
  //
};

interface SObjectDefinition$AuthConfigProviders extends SObjectDefinition<'AuthConfigProviders'> {
    Name: 'AuthConfigProviders';
    Fields: Fields$AuthConfigProviders;
    ParentReferences: ParentReferences$AuthConfigProviders;
    ChildRelationships: ChildRelationships$AuthConfigProviders;
  }

type Fields$AuthProvider = {
  //
  Id: string;
  CreatedDate: DateString;
  ProviderType: string;
  FriendlyName: string;
  DeveloperName: string;
  RegistrationHandlerId: string | null;
  ExecutionUserId: string | null;
  ConsumerKey: string | null;
  ConsumerSecret: string | null;
  ErrorUrl: string | null;
  AuthorizeUrl: string | null;
  TokenUrl: string | null;
  UserInfoUrl: string | null;
  DefaultScopes: string | null;
  IdTokenIssuer: string | null;
  OptionsSendAccessTokenInHeader: boolean;
  OptionsSendClientCredentialsInHeader: boolean;
  OptionsIncludeOrgIdInId: boolean;
  OptionsSendSecretInApis: boolean;
  IconUrl: string | null;
  LogoutUrl: string | null;
  PluginId: string | null;
  CustomMetadataTypeRecord: string | null;
  EcKey: string | null;
  AppleTeam: string | null;
  SsoKickoffUrl: string | null;
  LinkKickoffUrl: string | null;
  OauthKickoffUrl: string | null;
};

type ParentReferences$AuthProvider = {
  //
};

type ChildRelationships$AuthProvider = {
  //
};

interface SObjectDefinition$AuthProvider extends SObjectDefinition<'AuthProvider'> {
    Name: 'AuthProvider';
    Fields: Fields$AuthProvider;
    ParentReferences: ParentReferences$AuthProvider;
    ChildRelationships: ChildRelationships$AuthProvider;
  }

type Fields$AuthSession = {
  //
  Id: string;
  UsersId: string | null;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  NumSecondsValid: number;
  UserType: string;
  SourceIp: string;
  LoginType: string | null;
  SessionType: string | null;
  SessionSecurityLevel: string | null;
  LogoutUrl: string | null;
  ParentId: string | null;
  LoginHistoryId: string | null;
  LoginGeoId: string | null;
  IsCurrent: boolean;
};

type ParentReferences$AuthSession = {
  //
  Users: SObjectDefinition$User | null;
  LoginHistory: SObjectDefinition$LoginHistory | null;
  LoginGeo: SObjectDefinition$LoginGeo | null;
};

type ChildRelationships$AuthSession = {
  //
  SessionPermSetActivations: SObjectDefinition$SessionPermSetActivation;
};

interface SObjectDefinition$AuthSession extends SObjectDefinition<'AuthSession'> {
    Name: 'AuthSession';
    Fields: Fields$AuthSession;
    ParentReferences: ParentReferences$AuthSession;
    ChildRelationships: ChildRelationships$AuthSession;
  }

type Fields$AuthorizationForm = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  RevisionNumber: string | null;
  EffectiveFromDate: DateString | null;
  EffectiveToDate: DateString | null;
  DefaultAuthFormTextId: string | null;
  IsSignatureRequired: boolean;
};

type ParentReferences$AuthorizationForm = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DefaultAuthFormText: SObjectDefinition$AuthorizationFormText | null;
};

type ChildRelationships$AuthorizationForm = {
  //
  Histories: SObjectDefinition$AuthorizationFormHistory;
  Shares: SObjectDefinition$AuthorizationFormShare;
  AuthorizationForms: SObjectDefinition$AuthorizationFormText;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$AuthorizationForm extends SObjectDefinition<'AuthorizationForm'> {
    Name: 'AuthorizationForm';
    Fields: Fields$AuthorizationForm;
    ParentReferences: ParentReferences$AuthorizationForm;
    ChildRelationships: ChildRelationships$AuthorizationForm;
  }

type Fields$AuthorizationFormConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ConsentGiverId: string;
  AuthorizationFormTextId: string | null;
  ConsentCapturedSource: string | null;
  ConsentCapturedSourceType: string | null;
  ConsentCapturedDateTime: DateString | null;
  Status: string | null;
  DocumentVersionId: string | null;
  RelatedRecordId: string | null;
};

type ParentReferences$AuthorizationFormConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ConsentGiver: SObjectDefinition$Name;
  AuthorizationFormText: SObjectDefinition$AuthorizationFormText | null;
  DocumentVersion: SObjectDefinition$ContentVersion | null;
  RelatedRecord: SObjectDefinition$Account | null;
};

type ChildRelationships$AuthorizationFormConsent = {
  //
  Histories: SObjectDefinition$AuthorizationFormConsentHistory;
  Shares: SObjectDefinition$AuthorizationFormConsentShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$AuthorizationFormConsent extends SObjectDefinition<'AuthorizationFormConsent'> {
    Name: 'AuthorizationFormConsent';
    Fields: Fields$AuthorizationFormConsent;
    ParentReferences: ParentReferences$AuthorizationFormConsent;
    ChildRelationships: ChildRelationships$AuthorizationFormConsent;
  }

type Fields$AuthorizationFormConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ConsentGiverId: string | null;
  AuthorizationFormTextId: string | null;
  ConsentCapturedSource: string | null;
  ConsentCapturedSourceType: string | null;
  ConsentCapturedDateTime: DateString | null;
  Status: string | null;
  DocumentVersionId: string | null;
  RelatedRecordId: string | null;
};

type ParentReferences$AuthorizationFormConsentChangeEvent = {
  //
};

type ChildRelationships$AuthorizationFormConsentChangeEvent = {
  //
};

interface SObjectDefinition$AuthorizationFormConsentChangeEvent extends SObjectDefinition<'AuthorizationFormConsentChangeEvent'> {
    Name: 'AuthorizationFormConsentChangeEvent';
    Fields: Fields$AuthorizationFormConsentChangeEvent;
    ParentReferences: ParentReferences$AuthorizationFormConsentChangeEvent;
    ChildRelationships: ChildRelationships$AuthorizationFormConsentChangeEvent;
  }

type Fields$AuthorizationFormConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthorizationFormConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthorizationFormConsentHistory = {
  //
  AuthorizationFormConsent: SObjectDefinition$AuthorizationFormConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormConsentHistory = {
  //
};

interface SObjectDefinition$AuthorizationFormConsentHistory extends SObjectDefinition<'AuthorizationFormConsentHistory'> {
    Name: 'AuthorizationFormConsentHistory';
    Fields: Fields$AuthorizationFormConsentHistory;
    ParentReferences: ParentReferences$AuthorizationFormConsentHistory;
    ChildRelationships: ChildRelationships$AuthorizationFormConsentHistory;
  }

type Fields$AuthorizationFormConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthorizationFormConsentShare = {
  //
  Parent: SObjectDefinition$AuthorizationFormConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormConsentShare = {
  //
};

interface SObjectDefinition$AuthorizationFormConsentShare extends SObjectDefinition<'AuthorizationFormConsentShare'> {
    Name: 'AuthorizationFormConsentShare';
    Fields: Fields$AuthorizationFormConsentShare;
    ParentReferences: ParentReferences$AuthorizationFormConsentShare;
    ChildRelationships: ChildRelationships$AuthorizationFormConsentShare;
  }

type Fields$AuthorizationFormDataUse = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AuthorizationFormId: string;
  DataUsePurposeId: string;
};

type ParentReferences$AuthorizationFormDataUse = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthorizationForm: SObjectDefinition$AuthorizationForm;
  DataUsePurpose: SObjectDefinition$DataUsePurpose;
};

type ChildRelationships$AuthorizationFormDataUse = {
  //
  Histories: SObjectDefinition$AuthorizationFormDataUseHistory;
  Shares: SObjectDefinition$AuthorizationFormDataUseShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$AuthorizationFormDataUse extends SObjectDefinition<'AuthorizationFormDataUse'> {
    Name: 'AuthorizationFormDataUse';
    Fields: Fields$AuthorizationFormDataUse;
    ParentReferences: ParentReferences$AuthorizationFormDataUse;
    ChildRelationships: ChildRelationships$AuthorizationFormDataUse;
  }

type Fields$AuthorizationFormDataUseHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthorizationFormDataUseId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthorizationFormDataUseHistory = {
  //
  AuthorizationFormDataUse: SObjectDefinition$AuthorizationFormDataUse;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormDataUseHistory = {
  //
};

interface SObjectDefinition$AuthorizationFormDataUseHistory extends SObjectDefinition<'AuthorizationFormDataUseHistory'> {
    Name: 'AuthorizationFormDataUseHistory';
    Fields: Fields$AuthorizationFormDataUseHistory;
    ParentReferences: ParentReferences$AuthorizationFormDataUseHistory;
    ChildRelationships: ChildRelationships$AuthorizationFormDataUseHistory;
  }

type Fields$AuthorizationFormDataUseShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthorizationFormDataUseShare = {
  //
  Parent: SObjectDefinition$AuthorizationFormDataUse;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormDataUseShare = {
  //
};

interface SObjectDefinition$AuthorizationFormDataUseShare extends SObjectDefinition<'AuthorizationFormDataUseShare'> {
    Name: 'AuthorizationFormDataUseShare';
    Fields: Fields$AuthorizationFormDataUseShare;
    ParentReferences: ParentReferences$AuthorizationFormDataUseShare;
    ChildRelationships: ChildRelationships$AuthorizationFormDataUseShare;
  }

type Fields$AuthorizationFormHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthorizationFormId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthorizationFormHistory = {
  //
  AuthorizationForm: SObjectDefinition$AuthorizationForm;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormHistory = {
  //
};

interface SObjectDefinition$AuthorizationFormHistory extends SObjectDefinition<'AuthorizationFormHistory'> {
    Name: 'AuthorizationFormHistory';
    Fields: Fields$AuthorizationFormHistory;
    ParentReferences: ParentReferences$AuthorizationFormHistory;
    ChildRelationships: ChildRelationships$AuthorizationFormHistory;
  }

type Fields$AuthorizationFormShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$AuthorizationFormShare = {
  //
  Parent: SObjectDefinition$AuthorizationForm;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormShare = {
  //
};

interface SObjectDefinition$AuthorizationFormShare extends SObjectDefinition<'AuthorizationFormShare'> {
    Name: 'AuthorizationFormShare';
    Fields: Fields$AuthorizationFormShare;
    ParentReferences: ParentReferences$AuthorizationFormShare;
    ChildRelationships: ChildRelationships$AuthorizationFormShare;
  }

type Fields$AuthorizationFormText = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AuthorizationFormId: string;
  FullAuthorizationFormUrl: string | null;
  SummaryAuthFormText: string | null;
  Locale: string | null;
  LocaleSelection: string | null;
  ContentDocumentId: string | null;
};

type ParentReferences$AuthorizationFormText = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthorizationForm: SObjectDefinition$AuthorizationForm;
  ContentDocument: SObjectDefinition$ContentDocument | null;
};

type ChildRelationships$AuthorizationFormText = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  Histories: SObjectDefinition$AuthorizationFormTextHistory;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$AuthorizationFormText extends SObjectDefinition<'AuthorizationFormText'> {
    Name: 'AuthorizationFormText';
    Fields: Fields$AuthorizationFormText;
    ParentReferences: ParentReferences$AuthorizationFormText;
    ChildRelationships: ChildRelationships$AuthorizationFormText;
  }

type Fields$AuthorizationFormTextHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  AuthorizationFormTextId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$AuthorizationFormTextHistory = {
  //
  AuthorizationFormText: SObjectDefinition$AuthorizationFormText;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$AuthorizationFormTextHistory = {
  //
};

interface SObjectDefinition$AuthorizationFormTextHistory extends SObjectDefinition<'AuthorizationFormTextHistory'> {
    Name: 'AuthorizationFormTextHistory';
    Fields: Fields$AuthorizationFormTextHistory;
    ParentReferences: ParentReferences$AuthorizationFormTextHistory;
    ChildRelationships: ChildRelationships$AuthorizationFormTextHistory;
  }

type Fields$BackgroundOperation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SubmittedAt: DateString | null;
  Status: string | null;
  ExecutionGroup: string | null;
  SequenceGroup: string | null;
  SequenceNumber: number | null;
  GroupLeaderId: string | null;
  StartedAt: DateString | null;
  FinishedAt: DateString | null;
  WorkerUri: string | null;
  Timeout: number | null;
  ExpiresAt: DateString | null;
  NumFollowers: number | null;
  ProcessAfter: DateString | null;
  ParentKey: string | null;
  RetryLimit: number | null;
  RetryCount: number | null;
  RetryBackoff: number | null;
  Error: string | null;
};

type ParentReferences$BackgroundOperation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  GroupLeader: SObjectDefinition$BackgroundOperation | null;
};

type ChildRelationships$BackgroundOperation = {
  //
  MergedOperations: SObjectDefinition$BackgroundOperation;
};

interface SObjectDefinition$BackgroundOperation extends SObjectDefinition<'BackgroundOperation'> {
    Name: 'BackgroundOperation';
    Fields: Fields$BackgroundOperation;
    ParentReferences: ParentReferences$BackgroundOperation;
    ChildRelationships: ChildRelationships$BackgroundOperation;
  }

type Fields$BatchApexErrorEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  ExceptionType: string | null;
  Message: string | null;
  StackTrace: string | null;
  RequestId: string | null;
  AsyncApexJobId: string | null;
  JobScope: string | null;
  DoesExceedJobScopeMaxLength: boolean;
  Phase: string | null;
};

type ParentReferences$BatchApexErrorEvent = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$BatchApexErrorEvent = {
  //
};

interface SObjectDefinition$BatchApexErrorEvent extends SObjectDefinition<'BatchApexErrorEvent'> {
    Name: 'BatchApexErrorEvent';
    Fields: Fields$BatchApexErrorEvent;
    ParentReferences: ParentReferences$BatchApexErrorEvent;
    ChildRelationships: ChildRelationships$BatchApexErrorEvent;
  }

type Fields$BrandTemplate = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  IsActive: boolean;
  Description: string | null;
  Value: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$BrandTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BrandTemplate = {
  //
};

interface SObjectDefinition$BrandTemplate extends SObjectDefinition<'BrandTemplate'> {
    Name: 'BrandTemplate';
    Fields: Fields$BrandTemplate;
    ParentReferences: ParentReferences$BrandTemplate;
    ChildRelationships: ChildRelationships$BrandTemplate;
  }

type Fields$BrandingSet = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
};

type ParentReferences$BrandingSet = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BrandingSet = {
  //
};

interface SObjectDefinition$BrandingSet extends SObjectDefinition<'BrandingSet'> {
    Name: 'BrandingSet';
    Fields: Fields$BrandingSet;
    ParentReferences: ParentReferences$BrandingSet;
    ChildRelationships: ChildRelationships$BrandingSet;
  }

type Fields$BrandingSetProperty = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  BrandingSetId: string;
  PropertyName: string;
  PropertyValue: string | null;
};

type ParentReferences$BrandingSetProperty = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  BrandingSet: SObjectDefinition$BrandingSet;
};

type ChildRelationships$BrandingSetProperty = {
  //
};

interface SObjectDefinition$BrandingSetProperty extends SObjectDefinition<'BrandingSetProperty'> {
    Name: 'BrandingSetProperty';
    Fields: Fields$BrandingSetProperty;
    ParentReferences: ParentReferences$BrandingSetProperty;
    ChildRelationships: ChildRelationships$BrandingSetProperty;
  }

type Fields$BriefcaseAssignment = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserOrGroupId: string;
  BriefcaseId: string;
};

type ParentReferences$BriefcaseAssignment = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  UserOrGroup: SObjectDefinition$Name;
  Briefcase: SObjectDefinition$BriefcaseDefinition;
};

type ChildRelationships$BriefcaseAssignment = {
  //
};

interface SObjectDefinition$BriefcaseAssignment extends SObjectDefinition<'BriefcaseAssignment'> {
    Name: 'BriefcaseAssignment';
    Fields: Fields$BriefcaseAssignment;
    ParentReferences: ParentReferences$BriefcaseAssignment;
    ChildRelationships: ChildRelationships$BriefcaseAssignment;
  }

type Fields$BriefcaseDefinition = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsActive: boolean;
  Description: string | null;
};

type ParentReferences$BriefcaseDefinition = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BriefcaseDefinition = {
  //
  Briefcases: SObjectDefinition$BriefcaseAssignment;
  BriefcaseRules: SObjectDefinition$BriefcaseRule;
};

interface SObjectDefinition$BriefcaseDefinition extends SObjectDefinition<'BriefcaseDefinition'> {
    Name: 'BriefcaseDefinition';
    Fields: Fields$BriefcaseDefinition;
    ParentReferences: ParentReferences$BriefcaseDefinition;
    ChildRelationships: ChildRelationships$BriefcaseDefinition;
  }

type Fields$BriefcaseRule = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  BriefcaseId: string;
  TargetEntity: string;
  FilterLogic: string | null;
  QueryScope: string;
  RecordLimit: number | null;
  OrderBy: string | null;
  IsAscendingOrder: boolean;
};

type ParentReferences$BriefcaseRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Briefcase: SObjectDefinition$BriefcaseDefinition;
};

type ChildRelationships$BriefcaseRule = {
  //
  BriefcaseRuleFilters: SObjectDefinition$BriefcaseRuleFilter;
};

interface SObjectDefinition$BriefcaseRule extends SObjectDefinition<'BriefcaseRule'> {
    Name: 'BriefcaseRule';
    Fields: Fields$BriefcaseRule;
    ParentReferences: ParentReferences$BriefcaseRule;
    ChildRelationships: ChildRelationships$BriefcaseRule;
  }

type Fields$BriefcaseRuleFilter = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  BriefcaseRuleId: string;
  TargetEntityField: string;
  FilterOperator: string;
  FilterValue: string | null;
  FilterSeqNumber: number;
};

type ParentReferences$BriefcaseRuleFilter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  BriefcaseRule: SObjectDefinition$BriefcaseRule;
};

type ChildRelationships$BriefcaseRuleFilter = {
  //
};

interface SObjectDefinition$BriefcaseRuleFilter extends SObjectDefinition<'BriefcaseRuleFilter'> {
    Name: 'BriefcaseRuleFilter';
    Fields: Fields$BriefcaseRuleFilter;
    ParentReferences: ParentReferences$BriefcaseRuleFilter;
    ChildRelationships: ChildRelationships$BriefcaseRuleFilter;
  }

type Fields$BusinessHours = {
  //
  Id: string;
  Name: string;
  IsActive: boolean;
  IsDefault: boolean;
  SundayStartTime: DateString | null;
  SundayEndTime: DateString | null;
  MondayStartTime: DateString | null;
  MondayEndTime: DateString | null;
  TuesdayStartTime: DateString | null;
  TuesdayEndTime: DateString | null;
  WednesdayStartTime: DateString | null;
  WednesdayEndTime: DateString | null;
  ThursdayStartTime: DateString | null;
  ThursdayEndTime: DateString | null;
  FridayStartTime: DateString | null;
  FridayEndTime: DateString | null;
  SaturdayStartTime: DateString | null;
  SaturdayEndTime: DateString | null;
  TimeZoneSidKey: string;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  LastViewedDate: DateString | null;
};

type ParentReferences$BusinessHours = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessHours = {
  //
};

interface SObjectDefinition$BusinessHours extends SObjectDefinition<'BusinessHours'> {
    Name: 'BusinessHours';
    Fields: Fields$BusinessHours;
    ParentReferences: ParentReferences$BusinessHours;
    ChildRelationships: ChildRelationships$BusinessHours;
  }

type Fields$BusinessProcess = {
  //
  Id: string;
  Name: string;
  NamespacePrefix: string | null;
  Description: string | null;
  TableEnumOrId: string;
  IsActive: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$BusinessProcess = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$BusinessProcess = {
  //
};

interface SObjectDefinition$BusinessProcess extends SObjectDefinition<'BusinessProcess'> {
    Name: 'BusinessProcess';
    Fields: Fields$BusinessProcess;
    ParentReferences: ParentReferences$BusinessProcess;
    ChildRelationships: ChildRelationships$BusinessProcess;
  }

type Fields$Calendar = {
  //
  Id: string;
  Name: string;
  UserId: string | null;
  Type: string;
  IsActive: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Calendar = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Calendar = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  EventRelations: SObjectDefinition$EventRelation;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
};

interface SObjectDefinition$Calendar extends SObjectDefinition<'Calendar'> {
    Name: 'Calendar';
    Fields: Fields$Calendar;
    ParentReferences: ParentReferences$Calendar;
    ChildRelationships: ChildRelationships$Calendar;
  }

type Fields$CalendarView = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDisplayed: boolean;
  Color: string | null;
  FillPattern: string | null;
  ListViewFilterId: string | null;
  DateHandlingType: string | null;
  StartField: string;
  EndField: string | null;
  DisplayField: string;
  SobjectType: string;
};

type ParentReferences$CalendarView = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ListViewFilter: SObjectDefinition$ListView | null;
};

type ChildRelationships$CalendarView = {
  //
  Shares: SObjectDefinition$CalendarViewShare;
};

interface SObjectDefinition$CalendarView extends SObjectDefinition<'CalendarView'> {
    Name: 'CalendarView';
    Fields: Fields$CalendarView;
    ParentReferences: ParentReferences$CalendarView;
    ChildRelationships: ChildRelationships$CalendarView;
  }

type Fields$CalendarViewShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CalendarViewShare = {
  //
  Parent: SObjectDefinition$CalendarView;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CalendarViewShare = {
  //
};

interface SObjectDefinition$CalendarViewShare extends SObjectDefinition<'CalendarViewShare'> {
    Name: 'CalendarViewShare';
    Fields: Fields$CalendarViewShare;
    ParentReferences: ParentReferences$CalendarViewShare;
    ChildRelationships: ChildRelationships$CalendarViewShare;
  }

type Fields$CallCenter = {
  //
  Id: string;
  Name: string;
  InternalName: string;
  Version: number | null;
  AdapterUrl: string | null;
  CustomSettings: string | null;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$CallCenter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CallCenter = {
  //
};

interface SObjectDefinition$CallCenter extends SObjectDefinition<'CallCenter'> {
    Name: 'CallCenter';
    Fields: Fields$CallCenter;
    ParentReferences: ParentReferences$CallCenter;
    ChildRelationships: ChildRelationships$CallCenter;
  }

type Fields$CallCoachingMediaProvider = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProviderName: string;
  ProviderDescription: string | null;
  IsActive: boolean;
};

type ParentReferences$CallCoachingMediaProvider = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CallCoachingMediaProvider = {
  //
};

interface SObjectDefinition$CallCoachingMediaProvider extends SObjectDefinition<'CallCoachingMediaProvider'> {
    Name: 'CallCoachingMediaProvider';
    Fields: Fields$CallCoachingMediaProvider;
    ParentReferences: ParentReferences$CallCoachingMediaProvider;
    ChildRelationships: ChildRelationships$CallCoachingMediaProvider;
  }

type Fields$Campaign = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  ParentId: string | null;
  Type: string | null;
  Status: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  ExpectedRevenue: number | null;
  BudgetedCost: number | null;
  ActualCost: number | null;
  ExpectedResponse: number | null;
  NumberSent: number | null;
  IsActive: boolean;
  Description: string | null;
  NumberOfLeads: number;
  NumberOfConvertedLeads: number;
  NumberOfContacts: number;
  NumberOfResponses: number;
  NumberOfOpportunities: number;
  NumberOfWonOpportunities: number;
  AmountAllOpportunities: number;
  AmountWonOpportunities: number;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  CampaignMemberRecordTypeId: string | null;
  DSCORGPKG__Suppress_from_DiscoverOrg__c: boolean;
  DB_Campaign_Tactic__c: string | null;
};

type ParentReferences$Campaign = {
  //
  Parent: SObjectDefinition$Campaign | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CampaignMemberRecordType: SObjectDefinition$RecordType | null;
};

type ChildRelationships$Campaign = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  ChildCampaigns: SObjectDefinition$Campaign;
  Feeds: SObjectDefinition$CampaignFeed;
  Histories: SObjectDefinition$CampaignHistory;
  CampaignMembers: SObjectDefinition$CampaignMember;
  CampaignMemberStatuses: SObjectDefinition$CampaignMemberStatus;
  Shares: SObjectDefinition$CampaignShare;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  ListEmails: SObjectDefinition$ListEmail;
  ListEmailRecipientSources: SObjectDefinition$ListEmailRecipientSource;
  OpenActivities: SObjectDefinition$OpenActivity;
  Opportunities: SObjectDefinition$Opportunity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Campaign extends SObjectDefinition<'Campaign'> {
    Name: 'Campaign';
    Fields: Fields$Campaign;
    ParentReferences: ParentReferences$Campaign;
    ChildRelationships: ChildRelationships$Campaign;
  }

type Fields$CampaignChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  ParentId: string | null;
  Type: string | null;
  Status: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  ExpectedRevenue: number | null;
  BudgetedCost: number | null;
  ActualCost: number | null;
  ExpectedResponse: number | null;
  NumberSent: number | null;
  IsActive: boolean;
  Description: string | null;
  NumberOfLeads: number | null;
  NumberOfConvertedLeads: number | null;
  NumberOfContacts: number | null;
  NumberOfResponses: number | null;
  NumberOfOpportunities: number | null;
  NumberOfWonOpportunities: number | null;
  AmountAllOpportunities: number | null;
  AmountWonOpportunities: number | null;
  OwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  CampaignMemberRecordTypeId: string | null;
  DSCORGPKG__Suppress_from_DiscoverOrg__c: boolean;
  DB_Campaign_Tactic__c: string | null;
};

type ParentReferences$CampaignChangeEvent = {
  //
};

type ChildRelationships$CampaignChangeEvent = {
  //
};

interface SObjectDefinition$CampaignChangeEvent extends SObjectDefinition<'CampaignChangeEvent'> {
    Name: 'CampaignChangeEvent';
    Fields: Fields$CampaignChangeEvent;
    ParentReferences: ParentReferences$CampaignChangeEvent;
    ChildRelationships: ChildRelationships$CampaignChangeEvent;
  }

type Fields$CampaignFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CampaignFeed = {
  //
  Parent: SObjectDefinition$Campaign;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CampaignFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CampaignFeed extends SObjectDefinition<'CampaignFeed'> {
    Name: 'CampaignFeed';
    Fields: Fields$CampaignFeed;
    ParentReferences: ParentReferences$CampaignFeed;
    ChildRelationships: ChildRelationships$CampaignFeed;
  }

type Fields$CampaignHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CampaignId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CampaignHistory = {
  //
  Campaign: SObjectDefinition$Campaign;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CampaignHistory = {
  //
};

interface SObjectDefinition$CampaignHistory extends SObjectDefinition<'CampaignHistory'> {
    Name: 'CampaignHistory';
    Fields: Fields$CampaignHistory;
    ParentReferences: ParentReferences$CampaignHistory;
    ChildRelationships: ChildRelationships$CampaignHistory;
  }

type Fields$CampaignInfluenceModel = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ModelType: string | null;
  ModelDescription: string | null;
  IsDefaultModel: boolean;
  IsModelLocked: boolean;
  IsActive: boolean;
  RecordPreference: string;
};

type ParentReferences$CampaignInfluenceModel = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CampaignInfluenceModel = {
  //
};

interface SObjectDefinition$CampaignInfluenceModel extends SObjectDefinition<'CampaignInfluenceModel'> {
    Name: 'CampaignInfluenceModel';
    Fields: Fields$CampaignInfluenceModel;
    ParentReferences: ParentReferences$CampaignInfluenceModel;
    ChildRelationships: ChildRelationships$CampaignInfluenceModel;
  }

type Fields$CampaignMember = {
  //
  Id: string;
  IsDeleted: boolean;
  CampaignId: string;
  LeadId: string | null;
  ContactId: string | null;
  Status: string | null;
  HasResponded: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FirstRespondedDate: DateString | null;
  Salutation: string | null;
  Name: string | null;
  FirstName: string | null;
  LastName: string | null;
  Title: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  Email: string | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  Description: string | null;
  DoNotCall: boolean;
  HasOptedOutOfEmail: boolean;
  HasOptedOutOfFax: boolean;
  LeadSource: string | null;
  CompanyOrAccount: string | null;
  Type: string | null;
  LeadOrContactId: string | null;
  LeadOrContactOwnerId: string | null;
};

type ParentReferences$CampaignMember = {
  //
  Campaign: SObjectDefinition$Campaign;
  Lead: SObjectDefinition$Lead | null;
  Contact: SObjectDefinition$Contact | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LeadOrContactOwner: SObjectDefinition$Name | null;
};

type ChildRelationships$CampaignMember = {
  //
  ListEmailIndividualRecipients: SObjectDefinition$ListEmailIndividualRecipient;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$CampaignMember extends SObjectDefinition<'CampaignMember'> {
    Name: 'CampaignMember';
    Fields: Fields$CampaignMember;
    ParentReferences: ParentReferences$CampaignMember;
    ChildRelationships: ChildRelationships$CampaignMember;
  }

type Fields$CampaignMemberChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CampaignId: string | null;
  LeadId: string | null;
  ContactId: string | null;
  Status: string | null;
  HasResponded: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  FirstRespondedDate: DateString | null;
};

type ParentReferences$CampaignMemberChangeEvent = {
  //
};

type ChildRelationships$CampaignMemberChangeEvent = {
  //
};

interface SObjectDefinition$CampaignMemberChangeEvent extends SObjectDefinition<'CampaignMemberChangeEvent'> {
    Name: 'CampaignMemberChangeEvent';
    Fields: Fields$CampaignMemberChangeEvent;
    ParentReferences: ParentReferences$CampaignMemberChangeEvent;
    ChildRelationships: ChildRelationships$CampaignMemberChangeEvent;
  }

type Fields$CampaignMemberStatus = {
  //
  Id: string;
  IsDeleted: boolean;
  CampaignId: string;
  Label: string;
  SortOrder: number | null;
  IsDefault: boolean;
  HasResponded: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CampaignMemberStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CampaignMemberStatus = {
  //
};

interface SObjectDefinition$CampaignMemberStatus extends SObjectDefinition<'CampaignMemberStatus'> {
    Name: 'CampaignMemberStatus';
    Fields: Fields$CampaignMemberStatus;
    ParentReferences: ParentReferences$CampaignMemberStatus;
    ChildRelationships: ChildRelationships$CampaignMemberStatus;
  }

type Fields$CampaignMemberStatusChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CampaignId: string | null;
  SortOrder: number | null;
  IsDefault: boolean;
  HasResponded: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$CampaignMemberStatusChangeEvent = {
  //
};

type ChildRelationships$CampaignMemberStatusChangeEvent = {
  //
};

interface SObjectDefinition$CampaignMemberStatusChangeEvent extends SObjectDefinition<'CampaignMemberStatusChangeEvent'> {
    Name: 'CampaignMemberStatusChangeEvent';
    Fields: Fields$CampaignMemberStatusChangeEvent;
    ParentReferences: ParentReferences$CampaignMemberStatusChangeEvent;
    ChildRelationships: ChildRelationships$CampaignMemberStatusChangeEvent;
  }

type Fields$CampaignShare = {
  //
  Id: string;
  CampaignId: string;
  UserOrGroupId: string;
  CampaignAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CampaignShare = {
  //
  Campaign: SObjectDefinition$Campaign;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CampaignShare = {
  //
};

interface SObjectDefinition$CampaignShare extends SObjectDefinition<'CampaignShare'> {
    Name: 'CampaignShare';
    Fields: Fields$CampaignShare;
    ParentReferences: ParentReferences$CampaignShare;
    ChildRelationships: ChildRelationships$CampaignShare;
  }

type Fields$Case = {
  //
  Id: string;
  IsDeleted: boolean;
  MasterRecordId: string | null;
  CaseNumber: string;
  ContactId: string | null;
  AccountId: string | null;
  ParentId: string | null;
  SuppliedName: string | null;
  SuppliedEmail: string | null;
  SuppliedPhone: string | null;
  SuppliedCompany: string | null;
  Type: string | null;
  Status: string | null;
  Reason: string | null;
  Origin: string | null;
  Subject: string | null;
  Priority: string | null;
  Description: string | null;
  IsClosed: boolean;
  ClosedDate: DateString | null;
  IsEscalated: boolean;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ContactPhone: string | null;
  ContactMobile: string | null;
  ContactEmail: string | null;
  ContactFax: string | null;
  Comments: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Case = {
  //
  MasterRecord: SObjectDefinition$Case | null;
  Contact: SObjectDefinition$Contact | null;
  Account: SObjectDefinition$Account | null;
  Parent: SObjectDefinition$Case | null;
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Case = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Cases: SObjectDefinition$Case;
  CaseComments: SObjectDefinition$CaseComment;
  CaseContactRoles: SObjectDefinition$CaseContactRole;
  Feeds: SObjectDefinition$CaseFeed;
  Histories: SObjectDefinition$CaseHistory;
  Shares: SObjectDefinition$CaseShare;
  CaseSolutions: SObjectDefinition$CaseSolution;
  TeamMembers: SObjectDefinition$CaseTeamMember;
  TeamTemplateRecords: SObjectDefinition$CaseTeamTemplateRecord;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  EmailMessages: SObjectDefinition$EmailMessage;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Posts: SObjectDefinition$SocialPost;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Case extends SObjectDefinition<'Case'> {
    Name: 'Case';
    Fields: Fields$Case;
    ParentReferences: ParentReferences$Case;
    ChildRelationships: ChildRelationships$Case;
  }

type Fields$CaseChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  CaseNumber: string;
  ContactId: string | null;
  AccountId: string | null;
  ParentId: string | null;
  SuppliedName: string | null;
  SuppliedEmail: string | null;
  SuppliedPhone: string | null;
  SuppliedCompany: string | null;
  Type: string | null;
  Status: string | null;
  Reason: string | null;
  Origin: string | null;
  Subject: string | null;
  Priority: string | null;
  Description: string | null;
  IsClosed: boolean;
  ClosedDate: DateString | null;
  IsEscalated: boolean;
  OwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$CaseChangeEvent = {
  //
};

type ChildRelationships$CaseChangeEvent = {
  //
};

interface SObjectDefinition$CaseChangeEvent extends SObjectDefinition<'CaseChangeEvent'> {
    Name: 'CaseChangeEvent';
    Fields: Fields$CaseChangeEvent;
    ParentReferences: ParentReferences$CaseChangeEvent;
    ChildRelationships: ChildRelationships$CaseChangeEvent;
  }

type Fields$CaseComment = {
  //
  Id: string;
  ParentId: string;
  IsPublished: boolean;
  CommentBody: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CaseComment = {
  //
  Parent: SObjectDefinition$Case;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseComment = {
  //
};

interface SObjectDefinition$CaseComment extends SObjectDefinition<'CaseComment'> {
    Name: 'CaseComment';
    Fields: Fields$CaseComment;
    ParentReferences: ParentReferences$CaseComment;
    ChildRelationships: ChildRelationships$CaseComment;
  }

type Fields$CaseContactRole = {
  //
  Id: string;
  CasesId: string;
  ContactId: string;
  Role: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$CaseContactRole = {
  //
  Cases: SObjectDefinition$Case;
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseContactRole = {
  //
};

interface SObjectDefinition$CaseContactRole extends SObjectDefinition<'CaseContactRole'> {
    Name: 'CaseContactRole';
    Fields: Fields$CaseContactRole;
    ParentReferences: ParentReferences$CaseContactRole;
    ChildRelationships: ChildRelationships$CaseContactRole;
  }

type Fields$CaseFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CaseFeed = {
  //
  Parent: SObjectDefinition$Case;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CaseFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CaseFeed extends SObjectDefinition<'CaseFeed'> {
    Name: 'CaseFeed';
    Fields: Fields$CaseFeed;
    ParentReferences: ParentReferences$CaseFeed;
    ChildRelationships: ChildRelationships$CaseFeed;
  }

type Fields$CaseHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CaseId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CaseHistory = {
  //
  Case: SObjectDefinition$Case;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseHistory = {
  //
};

interface SObjectDefinition$CaseHistory extends SObjectDefinition<'CaseHistory'> {
    Name: 'CaseHistory';
    Fields: Fields$CaseHistory;
    ParentReferences: ParentReferences$CaseHistory;
    ChildRelationships: ChildRelationships$CaseHistory;
  }

type Fields$CaseShare = {
  //
  Id: string;
  CaseId: string;
  UserOrGroupId: string;
  CaseAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CaseShare = {
  //
  Case: SObjectDefinition$Case;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseShare = {
  //
};

interface SObjectDefinition$CaseShare extends SObjectDefinition<'CaseShare'> {
    Name: 'CaseShare';
    Fields: Fields$CaseShare;
    ParentReferences: ParentReferences$CaseShare;
    ChildRelationships: ChildRelationships$CaseShare;
  }

type Fields$CaseSolution = {
  //
  Id: string;
  CaseId: string;
  SolutionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$CaseSolution = {
  //
  Case: SObjectDefinition$Case;
  Solution: SObjectDefinition$Solution;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseSolution = {
  //
};

interface SObjectDefinition$CaseSolution extends SObjectDefinition<'CaseSolution'> {
    Name: 'CaseSolution';
    Fields: Fields$CaseSolution;
    ParentReferences: ParentReferences$CaseSolution;
    ChildRelationships: ChildRelationships$CaseSolution;
  }

type Fields$CaseStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsClosed: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$CaseStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseStatus = {
  //
};

interface SObjectDefinition$CaseStatus extends SObjectDefinition<'CaseStatus'> {
    Name: 'CaseStatus';
    Fields: Fields$CaseStatus;
    ParentReferences: ParentReferences$CaseStatus;
    ChildRelationships: ChildRelationships$CaseStatus;
  }

type Fields$CaseSubjectParticle = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Index: number;
  Type: string;
  TextField: string | null;
};

type ParentReferences$CaseSubjectParticle = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseSubjectParticle = {
  //
};

interface SObjectDefinition$CaseSubjectParticle extends SObjectDefinition<'CaseSubjectParticle'> {
    Name: 'CaseSubjectParticle';
    Fields: Fields$CaseSubjectParticle;
    ParentReferences: ParentReferences$CaseSubjectParticle;
    ChildRelationships: ChildRelationships$CaseSubjectParticle;
  }

type Fields$CaseTeamMember = {
  //
  Id: string;
  ParentId: string;
  MemberId: string;
  TeamTemplateMemberId: string | null;
  TeamRoleId: string;
  TeamTemplateId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamMember = {
  //
  Parent: SObjectDefinition$Case;
  Member: SObjectDefinition$Name;
  TeamTemplateMember: SObjectDefinition$CaseTeamTemplateMember | null;
  TeamRole: SObjectDefinition$CaseTeamRole;
  TeamTemplate: SObjectDefinition$CaseTeamTemplate | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamMember = {
  //
};

interface SObjectDefinition$CaseTeamMember extends SObjectDefinition<'CaseTeamMember'> {
    Name: 'CaseTeamMember';
    Fields: Fields$CaseTeamMember;
    ParentReferences: ParentReferences$CaseTeamMember;
    ChildRelationships: ChildRelationships$CaseTeamMember;
  }

type Fields$CaseTeamRole = {
  //
  Id: string;
  Name: string;
  AccessLevel: string;
  PreferencesVisibleInCSP: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamRole = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamRole = {
  //
};

interface SObjectDefinition$CaseTeamRole extends SObjectDefinition<'CaseTeamRole'> {
    Name: 'CaseTeamRole';
    Fields: Fields$CaseTeamRole;
    ParentReferences: ParentReferences$CaseTeamRole;
    ChildRelationships: ChildRelationships$CaseTeamRole;
  }

type Fields$CaseTeamTemplate = {
  //
  Id: string;
  Name: string;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamTemplate = {
  //
};

interface SObjectDefinition$CaseTeamTemplate extends SObjectDefinition<'CaseTeamTemplate'> {
    Name: 'CaseTeamTemplate';
    Fields: Fields$CaseTeamTemplate;
    ParentReferences: ParentReferences$CaseTeamTemplate;
    ChildRelationships: ChildRelationships$CaseTeamTemplate;
  }

type Fields$CaseTeamTemplateMember = {
  //
  Id: string;
  TeamTemplateId: string;
  MemberId: string;
  TeamRoleId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamTemplateMember = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamTemplateMember = {
  //
};

interface SObjectDefinition$CaseTeamTemplateMember extends SObjectDefinition<'CaseTeamTemplateMember'> {
    Name: 'CaseTeamTemplateMember';
    Fields: Fields$CaseTeamTemplateMember;
    ParentReferences: ParentReferences$CaseTeamTemplateMember;
    ChildRelationships: ChildRelationships$CaseTeamTemplateMember;
  }

type Fields$CaseTeamTemplateRecord = {
  //
  Id: string;
  ParentId: string;
  TeamTemplateId: string;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CaseTeamTemplateRecord = {
  //
  Parent: SObjectDefinition$Case;
  TeamTemplate: SObjectDefinition$CaseTeamTemplate;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CaseTeamTemplateRecord = {
  //
};

interface SObjectDefinition$CaseTeamTemplateRecord extends SObjectDefinition<'CaseTeamTemplateRecord'> {
    Name: 'CaseTeamTemplateRecord';
    Fields: Fields$CaseTeamTemplateRecord;
    ParentReferences: ParentReferences$CaseTeamTemplateRecord;
    ChildRelationships: ChildRelationships$CaseTeamTemplateRecord;
  }

type Fields$CategoryData = {
  //
  Id: string;
  CategoryNodeId: string;
  RelatedSobjectId: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CategoryData = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CategoryData = {
  //
};

interface SObjectDefinition$CategoryData extends SObjectDefinition<'CategoryData'> {
    Name: 'CategoryData';
    Fields: Fields$CategoryData;
    ParentReferences: ParentReferences$CategoryData;
    ChildRelationships: ChildRelationships$CategoryData;
  }

type Fields$CategoryNode = {
  //
  Id: string;
  ParentId: string | null;
  MasterLabel: string;
  SortOrder: number | null;
  SortStyle: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CategoryNode = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CategoryNode = {
  //
};

interface SObjectDefinition$CategoryNode extends SObjectDefinition<'CategoryNode'> {
    Name: 'CategoryNode';
    Fields: Fields$CategoryNode;
    ParentReferences: ParentReferences$CategoryNode;
    ChildRelationships: ChildRelationships$CategoryNode;
  }

type Fields$Certification__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Attempted_Date__c: DateString | null;
  Voucher_Assignee__c: string | null;
  Date_Assigned__c: DateString | null;
  Expiration_Date__c: DateString | null;
  Scheduled_Date__c: DateString | null;
  Status__c: string | null;
  Assignment_Aging__c: number | null;
  Voucher__c: string | null;
  Credential__c: string | null;
  Credential_ID__c: string | null;
  Is_Latest__c: boolean;
};

type ParentReferences$Certification__ChangeEvent = {
  //
};

type ChildRelationships$Certification__ChangeEvent = {
  //
};

interface SObjectDefinition$Certification__ChangeEvent extends SObjectDefinition<'Certification__ChangeEvent'> {
    Name: 'Certification__ChangeEvent';
    Fields: Fields$Certification__ChangeEvent;
    ParentReferences: ParentReferences$Certification__ChangeEvent;
    ChildRelationships: ChildRelationships$Certification__ChangeEvent;
  }

type Fields$Certification__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Attempted_Date__c: DateString | null;
  Voucher_Assignee__c: string | null;
  Date_Assigned__c: DateString | null;
  Expiration_Date__c: DateString | null;
  Scheduled_Date__c: DateString | null;
  Status__c: string | null;
  Assignment_Aging__c: number | null;
  Voucher__c: string;
  Credential__c: string | null;
  Credential_ID__c: string | null;
  Is_Latest__c: boolean;
};

type ParentReferences$Certification__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Voucher_Assignee__r: SObjectDefinition$Contact | null;
  Voucher__r: SObjectDefinition$Voucher__c;
};

type ChildRelationships$Certification__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Certification__c extends SObjectDefinition<'Certification__c'> {
    Name: 'Certification__c';
    Fields: Fields$Certification__c;
    ParentReferences: ParentReferences$Certification__c;
    ChildRelationships: ChildRelationships$Certification__c;
  }

type Fields$ChatterActivity = {
  //
  Id: string;
  ParentId: string | null;
  PostCount: number;
  CommentCount: number;
  CommentReceivedCount: number;
  LikeReceivedCount: number;
  InfluenceRawRank: number;
  SystemModstamp: DateString;
};

type ParentReferences$ChatterActivity = {
  //
};

type ChildRelationships$ChatterActivity = {
  //
};

interface SObjectDefinition$ChatterActivity extends SObjectDefinition<'ChatterActivity'> {
    Name: 'ChatterActivity';
    Fields: Fields$ChatterActivity;
    ParentReferences: ParentReferences$ChatterActivity;
    ChildRelationships: ChildRelationships$ChatterActivity;
  }

type Fields$ChatterExtension = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  IsProtected: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExtensionName: string;
  Type: string;
  IconId: string | null;
  Description: string;
  CompositionComponentEnumOrId: string | null;
  RenderComponentEnumOrId: string | null;
  HoverText: string | null;
  HeaderText: string | null;
};

type ParentReferences$ChatterExtension = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Icon: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$ChatterExtension = {
  //
};

interface SObjectDefinition$ChatterExtension extends SObjectDefinition<'ChatterExtension'> {
    Name: 'ChatterExtension';
    Fields: Fields$ChatterExtension;
    ParentReferences: ParentReferences$ChatterExtension;
    ChildRelationships: ChildRelationships$ChatterExtension;
  }

type Fields$ChatterExtensionConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ChatterExtensionId: string | null;
  CanCreate: boolean;
  CanRead: boolean;
  Position: number | null;
};

type ParentReferences$ChatterExtensionConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ChatterExtension: SObjectDefinition$ChatterExtension | null;
};

type ChildRelationships$ChatterExtensionConfig = {
  //
};

interface SObjectDefinition$ChatterExtensionConfig extends SObjectDefinition<'ChatterExtensionConfig'> {
    Name: 'ChatterExtensionConfig';
    Fields: Fields$ChatterExtensionConfig;
    ParentReferences: ParentReferences$ChatterExtensionConfig;
    ChildRelationships: ChildRelationships$ChatterExtensionConfig;
  }

type Fields$ClientBrowser = {
  //
  Id: string;
  UsersId: string;
  FullUserAgent: string | null;
  ProxyInfo: string | null;
  LastUpdate: DateString | null;
  CreatedDate: DateString;
};

type ParentReferences$ClientBrowser = {
  //
  Users: SObjectDefinition$User;
};

type ChildRelationships$ClientBrowser = {
  //
};

interface SObjectDefinition$ClientBrowser extends SObjectDefinition<'ClientBrowser'> {
    Name: 'ClientBrowser';
    Fields: Fields$ClientBrowser;
    ParentReferences: ParentReferences$ClientBrowser;
    ChildRelationships: ChildRelationships$ClientBrowser;
  }

type Fields$Cohort_Participant_Ranking__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Cohort_Participant__c: string | null;
  Communication__c: number | null;
  Initiative__c: number | null;
  Participation__c: number | null;
  Responsiveness__c: number | null;
  Start_Date__c: DateString | null;
  Tech_Skills__c: number | null;
  Avg_Ranking__c: number | null;
  Meta__c: string | null;
  Comment__c: string | null;
  Email_Report_Sent_At__c: DateString | null;
};

type ParentReferences$Cohort_Participant_Ranking__ChangeEvent = {
  //
};

type ChildRelationships$Cohort_Participant_Ranking__ChangeEvent = {
  //
};

interface SObjectDefinition$Cohort_Participant_Ranking__ChangeEvent extends SObjectDefinition<'Cohort_Participant_Ranking__ChangeEvent'> {
    Name: 'Cohort_Participant_Ranking__ChangeEvent';
    Fields: Fields$Cohort_Participant_Ranking__ChangeEvent;
    ParentReferences: ParentReferences$Cohort_Participant_Ranking__ChangeEvent;
    ChildRelationships: ChildRelationships$Cohort_Participant_Ranking__ChangeEvent;
  }

type Fields$Cohort_Participant_Ranking__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Cohort_Participant__c: string | null;
  Communication__c: number | null;
  Initiative__c: number | null;
  Participation__c: number | null;
  Responsiveness__c: number | null;
  Start_Date__c: DateString | null;
  Tech_Skills__c: number | null;
  Avg_Ranking__c: number | null;
  Meta__c: string | null;
  Comment__c: string | null;
  Email_Report_Sent_At__c: DateString | null;
};

type ParentReferences$Cohort_Participant_Ranking__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Cohort_Participant__r: SObjectDefinition$Cohort_Participant__c | null;
};

type ChildRelationships$Cohort_Participant_Ranking__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Cohort_Participant_Ranking__c extends SObjectDefinition<'Cohort_Participant_Ranking__c'> {
    Name: 'Cohort_Participant_Ranking__c';
    Fields: Fields$Cohort_Participant_Ranking__c;
    ParentReferences: ParentReferences$Cohort_Participant_Ranking__c;
    ChildRelationships: ChildRelationships$Cohort_Participant_Ranking__c;
  }

type Fields$Cohort_Participant__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Participant__c: string | null;
  Cohort__c: string | null;
  Participant_Name__c: string | null;
  Training_Completion_Date__c: DateString | null;
  Recommend_for_Foundations__c: string | null;
  Training_Completion_Aging__c: number | null;
  Primary_Candidate_Status__c: string | null;
  Hire_Date__c: DateString | null;
  Inactive_Status__c: string | null;
  Cut_Keep__c: string | null;
  Cohort_Name__c: string | null;
  QC_Stack_Rank__c: number | null;
  Engagement_Backout_Reason__c: string | null;
  Is_Latest__c: boolean;
  Placement_Start_Date__c: DateString | null;
  Training_To_Placement_Aging__c: number | null;
  MSMembershipId__c: string | null;
  Prework_Status__c: string | null;
  Interview_Readiness_Date__c: DateString | null;
  Capstone_Readiness_Date__c: DateString | null;
};

type ParentReferences$Cohort_Participant__ChangeEvent = {
  //
};

type ChildRelationships$Cohort_Participant__ChangeEvent = {
  //
};

interface SObjectDefinition$Cohort_Participant__ChangeEvent extends SObjectDefinition<'Cohort_Participant__ChangeEvent'> {
    Name: 'Cohort_Participant__ChangeEvent';
    Fields: Fields$Cohort_Participant__ChangeEvent;
    ParentReferences: ParentReferences$Cohort_Participant__ChangeEvent;
    ChildRelationships: ChildRelationships$Cohort_Participant__ChangeEvent;
  }

type Fields$Cohort_Participant__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Cohort_Participant__History = {
  //
  Parent: SObjectDefinition$Cohort_Participant__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Cohort_Participant__History = {
  //
};

interface SObjectDefinition$Cohort_Participant__History extends SObjectDefinition<'Cohort_Participant__History'> {
    Name: 'Cohort_Participant__History';
    Fields: Fields$Cohort_Participant__History;
    ParentReferences: ParentReferences$Cohort_Participant__History;
    ChildRelationships: ChildRelationships$Cohort_Participant__History;
  }

type Fields$Cohort_Participant__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Participant__c: string;
  Cohort__c: string;
  Participant_Name__c: string | null;
  Training_Completion_Date__c: DateString | null;
  Recommend_for_Foundations__c: string | null;
  Training_Completion_Aging__c: number | null;
  Primary_Candidate_Status__c: string | null;
  Hire_Date__c: DateString | null;
  Inactive_Status__c: string | null;
  Cut_Keep__c: string | null;
  Cohort_Name__c: string | null;
  QC_Stack_Rank__c: number | null;
  Engagement_Backout_Reason__c: string | null;
  Is_Latest__c: boolean;
  Placement_Start_Date__c: DateString | null;
  Training_To_Placement_Aging__c: number | null;
  MSMembershipId__c: string | null;
  Prework_Status__c: string | null;
  Interview_Readiness_Date__c: DateString | null;
  Capstone_Readiness_Date__c: DateString | null;
};

type ParentReferences$Cohort_Participant__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Participant__r: SObjectDefinition$Contact;
  Cohort__r: SObjectDefinition$Cohort__c;
};

type ChildRelationships$Cohort_Participant__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Histories: SObjectDefinition$Cohort_Participant__History;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Cohort_Participant__c extends SObjectDefinition<'Cohort_Participant__c'> {
    Name: 'Cohort_Participant__c';
    Fields: Fields$Cohort_Participant__c;
    ParentReferences: ParentReferences$Cohort_Participant__c;
    ChildRelationships: ChildRelationships$Cohort_Participant__c;
  }

type Fields$Cohort__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  GitLab__c: string | null;
  BH_Job_Id__c: string | null;
  MSTeamID__c: string | null;
  Digital_Badge_Date__c: DateString | null;
  Email_Distribution_Name__c: string | null;
  Evaluation_1_Date__c: DateString | null;
  Evaluation_2_Date__c: DateString | null;
  MSDistributionID__c: string | null;
  Technologies__c: string | null;
  Publishing_Status__c: string | null;
  Offer_Date__c: DateString | null;
  Pilot_1_SOW_Confirmation__c: boolean;
  Pilot_2_SOW_Confirmation__c: boolean;
  Pilot_Opportunity_1_Commitment_Nmb__c: number | null;
  Pilot_Opportunity_1__c: string | null;
  Pilot_Opportunity_2_Commitment_Nmb__c: number | null;
  Pilot_Opportunity_2__c: string | null;
  Primary_Anchor_Commitment_Nmb__c: number | null;
  Primary_Anchor_Opportunity__c: string | null;
  Primary_Anchor_SOW_Confirmation__c: boolean;
  Secondary_Anchor_Commitment_Nmb__c: number | null;
  Secondary_Anchor_Opportunity__c: string | null;
  Secondary_SOW_Confirmation__c: boolean;
  Cohort_Category__c: string | null;
  Slack_Channel_Name__c: string | null;
  Open_Cohort_Comments__c: string | null;
  Revised_Target_Completion_Date__c: DateString | null;
  Tovuti_Group_Name__c: string | null;
  Training_Start_Date__c: DateString | null;
  Number_of_people__c: number | null;
  Target_Completion_Date__c: DateString | null;
  Primary_Anchor_Client__c: string | null;
  Primary_Anchor_Selection_Date__c: DateString | null;
  Secondary_Anchor_Selection_Date__c: DateString | null;
  Pilot_1_Selection_Date__c: DateString | null;
  Pilot_2_Selection_Date__c: DateString | null;
  Secondary_Anchor_Client__c: string | null;
  Pilot_1_Client__c: string | null;
  Pilot_2_Client__c: string | null;
  Revise_Target_Completion_Date_Reason__c: string | null;
  Current_Training_Completion_Date__c: DateString | null;
  Capstone_Readiness_Date__c: DateString | null;
  Job_ID__c: string | null;
};

type ParentReferences$Cohort__ChangeEvent = {
  //
};

type ChildRelationships$Cohort__ChangeEvent = {
  //
};

interface SObjectDefinition$Cohort__ChangeEvent extends SObjectDefinition<'Cohort__ChangeEvent'> {
    Name: 'Cohort__ChangeEvent';
    Fields: Fields$Cohort__ChangeEvent;
    ParentReferences: ParentReferences$Cohort__ChangeEvent;
    ChildRelationships: ChildRelationships$Cohort__ChangeEvent;
  }

type Fields$Cohort__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Cohort__History = {
  //
  Parent: SObjectDefinition$Cohort__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Cohort__History = {
  //
};

interface SObjectDefinition$Cohort__History extends SObjectDefinition<'Cohort__History'> {
    Name: 'Cohort__History';
    Fields: Fields$Cohort__History;
    ParentReferences: ParentReferences$Cohort__History;
    ChildRelationships: ChildRelationships$Cohort__History;
  }

type Fields$Cohort__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  GitLab__c: string | null;
  BH_Job_Id__c: string | null;
  MSTeamID__c: string | null;
  Digital_Badge_Date__c: DateString | null;
  Email_Distribution_Name__c: string | null;
  Evaluation_1_Date__c: DateString | null;
  Evaluation_2_Date__c: DateString | null;
  MSDistributionID__c: string | null;
  Technologies__c: string | null;
  Publishing_Status__c: string | null;
  Offer_Date__c: DateString | null;
  Pilot_1_SOW_Confirmation__c: boolean;
  Pilot_2_SOW_Confirmation__c: boolean;
  Pilot_Opportunity_1_Commitment_Nmb__c: number | null;
  Pilot_Opportunity_1__c: string | null;
  Pilot_Opportunity_2_Commitment_Nmb__c: number | null;
  Pilot_Opportunity_2__c: string | null;
  Primary_Anchor_Commitment_Nmb__c: number | null;
  Primary_Anchor_Opportunity__c: string | null;
  Primary_Anchor_SOW_Confirmation__c: boolean;
  Secondary_Anchor_Commitment_Nmb__c: number | null;
  Secondary_Anchor_Opportunity__c: string | null;
  Secondary_SOW_Confirmation__c: boolean;
  Cohort_Category__c: string | null;
  Slack_Channel_Name__c: string | null;
  Open_Cohort_Comments__c: string | null;
  Revised_Target_Completion_Date__c: DateString | null;
  Tovuti_Group_Name__c: string | null;
  Training_Start_Date__c: DateString | null;
  Number_of_people__c: number | null;
  Target_Completion_Date__c: DateString | null;
  Primary_Anchor_Client__c: string | null;
  Primary_Anchor_Selection_Date__c: DateString | null;
  Secondary_Anchor_Selection_Date__c: DateString | null;
  Pilot_1_Selection_Date__c: DateString | null;
  Pilot_2_Selection_Date__c: DateString | null;
  Secondary_Anchor_Client__c: string | null;
  Pilot_1_Client__c: string | null;
  Pilot_2_Client__c: string | null;
  Revise_Target_Completion_Date_Reason__c: string | null;
  Current_Training_Completion_Date__c: DateString | null;
  Capstone_Readiness_Date__c: DateString | null;
  Job_ID__c: string | null;
};

type ParentReferences$Cohort__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Pilot_Opportunity_1__r: SObjectDefinition$Opportunity | null;
  Pilot_Opportunity_2__r: SObjectDefinition$Opportunity | null;
  Primary_Anchor_Opportunity__r: SObjectDefinition$Opportunity | null;
  Secondary_Anchor_Opportunity__r: SObjectDefinition$Opportunity | null;
  Job_ID__r: SObjectDefinition$Job__c | null;
};

type ChildRelationships$Cohort__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  Histories: SObjectDefinition$Cohort__History;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Cohort__c extends SObjectDefinition<'Cohort__c'> {
    Name: 'Cohort__c';
    Fields: Fields$Cohort__c;
    ParentReferences: ParentReferences$Cohort__c;
    ChildRelationships: ChildRelationships$Cohort__c;
  }

type Fields$CollaborationGroup = {
  //
  Id: string;
  Name: string;
  MemberCount: number | null;
  OwnerId: string;
  CollaborationType: string;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FullPhotoUrl: string | null;
  MediumPhotoUrl: string | null;
  SmallPhotoUrl: string | null;
  LastFeedModifiedDate: DateString;
  InformationTitle: string | null;
  InformationBody: string | null;
  HasPrivateFieldsAccess: boolean;
  CanHaveGuests: boolean;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsArchived: boolean;
  IsAutoArchiveDisabled: boolean;
  AnnouncementId: string | null;
  GroupEmail: string | null;
  BannerPhotoUrl: string | null;
  IsBroadcast: boolean;
  IsActivityGroup: boolean;
};

type ParentReferences$CollaborationGroup = {
  //
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Announcement: SObjectDefinition$Announcement | null;
};

type ChildRelationships$CollaborationGroup = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Feeds: SObjectDefinition$CollaborationGroupFeed;
  GroupMembers: SObjectDefinition$CollaborationGroupMember;
  GroupMemberRequests: SObjectDefinition$CollaborationGroupMemberRequest;
  CollaborationGroupRecords: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ChatterGroup: SObjectDefinition$LightningOnboardingConfig;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$CollaborationGroup extends SObjectDefinition<'CollaborationGroup'> {
    Name: 'CollaborationGroup';
    Fields: Fields$CollaborationGroup;
    ParentReferences: ParentReferences$CollaborationGroup;
    ChildRelationships: ChildRelationships$CollaborationGroup;
  }

type Fields$CollaborationGroupFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CollaborationGroupFeed = {
  //
  Parent: SObjectDefinition$CollaborationGroup;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CollaborationGroupFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CollaborationGroupFeed extends SObjectDefinition<'CollaborationGroupFeed'> {
    Name: 'CollaborationGroupFeed';
    Fields: Fields$CollaborationGroupFeed;
    ParentReferences: ParentReferences$CollaborationGroupFeed;
    ChildRelationships: ChildRelationships$CollaborationGroupFeed;
  }

type Fields$CollaborationGroupMember = {
  //
  Id: string;
  CollaborationGroupId: string;
  MemberId: string;
  CollaborationRole: string | null;
  NotificationFrequency: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastFeedAccessDate: DateString | null;
  IsActivityShared: boolean;
};

type ParentReferences$CollaborationGroupMember = {
  //
  CollaborationGroup: SObjectDefinition$CollaborationGroup;
  Member: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CollaborationGroupMember = {
  //
};

interface SObjectDefinition$CollaborationGroupMember extends SObjectDefinition<'CollaborationGroupMember'> {
    Name: 'CollaborationGroupMember';
    Fields: Fields$CollaborationGroupMember;
    ParentReferences: ParentReferences$CollaborationGroupMember;
    ChildRelationships: ChildRelationships$CollaborationGroupMember;
  }

type Fields$CollaborationGroupMemberRequest = {
  //
  Id: string;
  CollaborationGroupId: string;
  RequesterId: string;
  ResponseMessage: string | null;
  Status: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CollaborationGroupMemberRequest = {
  //
  CollaborationGroup: SObjectDefinition$CollaborationGroup;
  Requester: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CollaborationGroupMemberRequest = {
  //
};

interface SObjectDefinition$CollaborationGroupMemberRequest extends SObjectDefinition<'CollaborationGroupMemberRequest'> {
    Name: 'CollaborationGroupMemberRequest';
    Fields: Fields$CollaborationGroupMemberRequest;
    ParentReferences: ParentReferences$CollaborationGroupMemberRequest;
    ChildRelationships: ChildRelationships$CollaborationGroupMemberRequest;
  }

type Fields$CollaborationGroupRecord = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CollaborationGroupId: string;
  RecordId: string;
};

type ParentReferences$CollaborationGroupRecord = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CollaborationGroup: SObjectDefinition$CollaborationGroup;
  Record: SObjectDefinition$Name;
};

type ChildRelationships$CollaborationGroupRecord = {
  //
};

interface SObjectDefinition$CollaborationGroupRecord extends SObjectDefinition<'CollaborationGroupRecord'> {
    Name: 'CollaborationGroupRecord';
    Fields: Fields$CollaborationGroupRecord;
    ParentReferences: ParentReferences$CollaborationGroupRecord;
    ChildRelationships: ChildRelationships$CollaborationGroupRecord;
  }

type Fields$CollaborationInvitation = {
  //
  Id: string;
  ParentId: string | null;
  SharedEntityId: string;
  InviterId: string;
  InvitedUserEmail: string;
  InvitedUserEmailNormalized: string;
  Status: string;
  OptionalMessage: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CollaborationInvitation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CollaborationInvitation = {
  //
};

interface SObjectDefinition$CollaborationInvitation extends SObjectDefinition<'CollaborationInvitation'> {
    Name: 'CollaborationInvitation';
    Fields: Fields$CollaborationInvitation;
    ParentReferences: ParentReferences$CollaborationInvitation;
    ChildRelationships: ChildRelationships$CollaborationInvitation;
  }

type Fields$ColorDefinition = {
  //
  Id: string;
  DurableId: string | null;
  TabDefinitionId: string | null;
  Color: string | null;
  Theme: string | null;
  Context: string | null;
};

type ParentReferences$ColorDefinition = {
  //
};

type ChildRelationships$ColorDefinition = {
  //
};

interface SObjectDefinition$ColorDefinition extends SObjectDefinition<'ColorDefinition'> {
    Name: 'ColorDefinition';
    Fields: Fields$ColorDefinition;
    ParentReferences: ParentReferences$ColorDefinition;
    ChildRelationships: ChildRelationships$ColorDefinition;
  }

type Fields$CombinedAttachment = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  RecordType: string | null;
  Title: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  ContentUrl: string | null;
  ExternalDataSourceName: string | null;
  ExternalDataSourceType: string | null;
  SharingOption: string | null;
};

type ParentReferences$CombinedAttachment = {
  //
  Parent: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CombinedAttachment = {
  //
};

interface SObjectDefinition$CombinedAttachment extends SObjectDefinition<'CombinedAttachment'> {
    Name: 'CombinedAttachment';
    Fields: Fields$CombinedAttachment;
    ParentReferences: ParentReferences$CombinedAttachment;
    ChildRelationships: ChildRelationships$CombinedAttachment;
  }

type Fields$CommSubscription = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$CommSubscription = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscription = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionChannelTypes: SObjectDefinition$CommSubscriptionChannelType;
  Feeds: SObjectDefinition$CommSubscriptionFeed;
  Histories: SObjectDefinition$CommSubscriptionHistory;
  Shares: SObjectDefinition$CommSubscriptionShare;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$CommSubscription extends SObjectDefinition<'CommSubscription'> {
    Name: 'CommSubscription';
    Fields: Fields$CommSubscription;
    ParentReferences: ParentReferences$CommSubscription;
    ChildRelationships: ChildRelationships$CommSubscription;
  }

type Fields$CommSubscriptionChannelType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  CommunicationSubscriptionId: string;
  EngagementChannelTypeId: string;
};

type ParentReferences$CommSubscriptionChannelType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CommunicationSubscription: SObjectDefinition$CommSubscription;
  EngagementChannelType: SObjectDefinition$EngagementChannelType;
};

type ChildRelationships$CommSubscriptionChannelType = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  Feeds: SObjectDefinition$CommSubscriptionChannelTypeFeed;
  Histories: SObjectDefinition$CommSubscriptionChannelTypeHistory;
  Shares: SObjectDefinition$CommSubscriptionChannelTypeShare;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$CommSubscriptionChannelType extends SObjectDefinition<'CommSubscriptionChannelType'> {
    Name: 'CommSubscriptionChannelType';
    Fields: Fields$CommSubscriptionChannelType;
    ParentReferences: ParentReferences$CommSubscriptionChannelType;
    ChildRelationships: ChildRelationships$CommSubscriptionChannelType;
  }

type Fields$CommSubscriptionChannelTypeFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CommSubscriptionChannelTypeFeed = {
  //
  Parent: SObjectDefinition$CommSubscriptionChannelType;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CommSubscriptionChannelTypeFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CommSubscriptionChannelTypeFeed extends SObjectDefinition<'CommSubscriptionChannelTypeFeed'> {
    Name: 'CommSubscriptionChannelTypeFeed';
    Fields: Fields$CommSubscriptionChannelTypeFeed;
    ParentReferences: ParentReferences$CommSubscriptionChannelTypeFeed;
    ChildRelationships: ChildRelationships$CommSubscriptionChannelTypeFeed;
  }

type Fields$CommSubscriptionChannelTypeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CommSubscriptionChannelTypeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CommSubscriptionChannelTypeHistory = {
  //
  CommSubscriptionChannelType: SObjectDefinition$CommSubscriptionChannelType;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionChannelTypeHistory = {
  //
};

interface SObjectDefinition$CommSubscriptionChannelTypeHistory extends SObjectDefinition<'CommSubscriptionChannelTypeHistory'> {
    Name: 'CommSubscriptionChannelTypeHistory';
    Fields: Fields$CommSubscriptionChannelTypeHistory;
    ParentReferences: ParentReferences$CommSubscriptionChannelTypeHistory;
    ChildRelationships: ChildRelationships$CommSubscriptionChannelTypeHistory;
  }

type Fields$CommSubscriptionChannelTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CommSubscriptionChannelTypeShare = {
  //
  Parent: SObjectDefinition$CommSubscriptionChannelType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionChannelTypeShare = {
  //
};

interface SObjectDefinition$CommSubscriptionChannelTypeShare extends SObjectDefinition<'CommSubscriptionChannelTypeShare'> {
    Name: 'CommSubscriptionChannelTypeShare';
    Fields: Fields$CommSubscriptionChannelTypeShare;
    ParentReferences: ParentReferences$CommSubscriptionChannelTypeShare;
    ChildRelationships: ChildRelationships$CommSubscriptionChannelTypeShare;
  }

type Fields$CommSubscriptionConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ConsentGiverId: string | null;
  ContactPointId: string;
  EffectiveFromDate: DateString;
  ConsentCapturedDateTime: DateString | null;
  ConsentCapturedSource: string | null;
  CommSubscriptionChannelTypeId: string;
};

type ParentReferences$CommSubscriptionConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ConsentGiver: SObjectDefinition$Name | null;
  ContactPoint: SObjectDefinition$Name;
  CommSubscriptionChannelType: SObjectDefinition$CommSubscriptionChannelType;
};

type ChildRelationships$CommSubscriptionConsent = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  Feeds: SObjectDefinition$CommSubscriptionConsentFeed;
  Histories: SObjectDefinition$CommSubscriptionConsentHistory;
  Shares: SObjectDefinition$CommSubscriptionConsentShare;
  CommSubscriptionTimings: SObjectDefinition$CommSubscriptionTiming;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$CommSubscriptionConsent extends SObjectDefinition<'CommSubscriptionConsent'> {
    Name: 'CommSubscriptionConsent';
    Fields: Fields$CommSubscriptionConsent;
    ParentReferences: ParentReferences$CommSubscriptionConsent;
    ChildRelationships: ChildRelationships$CommSubscriptionConsent;
  }

type Fields$CommSubscriptionConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ConsentGiverId: string | null;
  ContactPointId: string | null;
  EffectiveFromDate: DateString | null;
  ConsentCapturedDateTime: DateString | null;
  ConsentCapturedSource: string | null;
  CommSubscriptionChannelTypeId: string | null;
};

type ParentReferences$CommSubscriptionConsentChangeEvent = {
  //
};

type ChildRelationships$CommSubscriptionConsentChangeEvent = {
  //
};

interface SObjectDefinition$CommSubscriptionConsentChangeEvent extends SObjectDefinition<'CommSubscriptionConsentChangeEvent'> {
    Name: 'CommSubscriptionConsentChangeEvent';
    Fields: Fields$CommSubscriptionConsentChangeEvent;
    ParentReferences: ParentReferences$CommSubscriptionConsentChangeEvent;
    ChildRelationships: ChildRelationships$CommSubscriptionConsentChangeEvent;
  }

type Fields$CommSubscriptionConsentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CommSubscriptionConsentFeed = {
  //
  Parent: SObjectDefinition$CommSubscriptionConsent;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CommSubscriptionConsentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CommSubscriptionConsentFeed extends SObjectDefinition<'CommSubscriptionConsentFeed'> {
    Name: 'CommSubscriptionConsentFeed';
    Fields: Fields$CommSubscriptionConsentFeed;
    ParentReferences: ParentReferences$CommSubscriptionConsentFeed;
    ChildRelationships: ChildRelationships$CommSubscriptionConsentFeed;
  }

type Fields$CommSubscriptionConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CommSubscriptionConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CommSubscriptionConsentHistory = {
  //
  CommSubscriptionConsent: SObjectDefinition$CommSubscriptionConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionConsentHistory = {
  //
};

interface SObjectDefinition$CommSubscriptionConsentHistory extends SObjectDefinition<'CommSubscriptionConsentHistory'> {
    Name: 'CommSubscriptionConsentHistory';
    Fields: Fields$CommSubscriptionConsentHistory;
    ParentReferences: ParentReferences$CommSubscriptionConsentHistory;
    ChildRelationships: ChildRelationships$CommSubscriptionConsentHistory;
  }

type Fields$CommSubscriptionConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CommSubscriptionConsentShare = {
  //
  Parent: SObjectDefinition$CommSubscriptionConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionConsentShare = {
  //
};

interface SObjectDefinition$CommSubscriptionConsentShare extends SObjectDefinition<'CommSubscriptionConsentShare'> {
    Name: 'CommSubscriptionConsentShare';
    Fields: Fields$CommSubscriptionConsentShare;
    ParentReferences: ParentReferences$CommSubscriptionConsentShare;
    ChildRelationships: ChildRelationships$CommSubscriptionConsentShare;
  }

type Fields$CommSubscriptionFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CommSubscriptionFeed = {
  //
  Parent: SObjectDefinition$CommSubscription;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CommSubscriptionFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CommSubscriptionFeed extends SObjectDefinition<'CommSubscriptionFeed'> {
    Name: 'CommSubscriptionFeed';
    Fields: Fields$CommSubscriptionFeed;
    ParentReferences: ParentReferences$CommSubscriptionFeed;
    ChildRelationships: ChildRelationships$CommSubscriptionFeed;
  }

type Fields$CommSubscriptionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CommSubscriptionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CommSubscriptionHistory = {
  //
  CommSubscription: SObjectDefinition$CommSubscription;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionHistory = {
  //
};

interface SObjectDefinition$CommSubscriptionHistory extends SObjectDefinition<'CommSubscriptionHistory'> {
    Name: 'CommSubscriptionHistory';
    Fields: Fields$CommSubscriptionHistory;
    ParentReferences: ParentReferences$CommSubscriptionHistory;
    ChildRelationships: ChildRelationships$CommSubscriptionHistory;
  }

type Fields$CommSubscriptionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$CommSubscriptionShare = {
  //
  Parent: SObjectDefinition$CommSubscription;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionShare = {
  //
};

interface SObjectDefinition$CommSubscriptionShare extends SObjectDefinition<'CommSubscriptionShare'> {
    Name: 'CommSubscriptionShare';
    Fields: Fields$CommSubscriptionShare;
    ParentReferences: ParentReferences$CommSubscriptionShare;
    ChildRelationships: ChildRelationships$CommSubscriptionShare;
  }

type Fields$CommSubscriptionTiming = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  CommSubscriptionConsentId: string;
  Unit: string;
};

type ParentReferences$CommSubscriptionTiming = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CommSubscriptionConsent: SObjectDefinition$CommSubscriptionConsent;
};

type ChildRelationships$CommSubscriptionTiming = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  Feeds: SObjectDefinition$CommSubscriptionTimingFeed;
  Histories: SObjectDefinition$CommSubscriptionTimingHistory;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$CommSubscriptionTiming extends SObjectDefinition<'CommSubscriptionTiming'> {
    Name: 'CommSubscriptionTiming';
    Fields: Fields$CommSubscriptionTiming;
    ParentReferences: ParentReferences$CommSubscriptionTiming;
    ChildRelationships: ChildRelationships$CommSubscriptionTiming;
  }

type Fields$CommSubscriptionTimingFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$CommSubscriptionTimingFeed = {
  //
  Parent: SObjectDefinition$CommSubscriptionTiming;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$CommSubscriptionTimingFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$CommSubscriptionTimingFeed extends SObjectDefinition<'CommSubscriptionTimingFeed'> {
    Name: 'CommSubscriptionTimingFeed';
    Fields: Fields$CommSubscriptionTimingFeed;
    ParentReferences: ParentReferences$CommSubscriptionTimingFeed;
    ChildRelationships: ChildRelationships$CommSubscriptionTimingFeed;
  }

type Fields$CommSubscriptionTimingHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  CommSubscriptionTimingId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$CommSubscriptionTimingHistory = {
  //
  CommSubscriptionTiming: SObjectDefinition$CommSubscriptionTiming;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CommSubscriptionTimingHistory = {
  //
};

interface SObjectDefinition$CommSubscriptionTimingHistory extends SObjectDefinition<'CommSubscriptionTimingHistory'> {
    Name: 'CommSubscriptionTimingHistory';
    Fields: Fields$CommSubscriptionTimingHistory;
    ParentReferences: ParentReferences$CommSubscriptionTimingHistory;
    ChildRelationships: ChildRelationships$CommSubscriptionTimingHistory;
  }

type Fields$Community = {
  //
  Id: string;
  SystemModstamp: DateString;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  Name: string;
  Description: string | null;
  IsActive: boolean;
  IsPublished: boolean;
};

type ParentReferences$Community = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Community = {
  //
};

interface SObjectDefinition$Community extends SObjectDefinition<'Community'> {
    Name: 'Community';
    Fields: Fields$Community;
    ParentReferences: ParentReferences$Community;
    ChildRelationships: ChildRelationships$Community;
  }

type Fields$Compensation_Policy__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Contact__c: string | null;
  Effective_Date__c: DateString | null;
  End_Date__c: DateString | null;
  Holidays__c: string | null;
  Work_Classification__c: string | null;
  Employee_Type__c: string | null;
  Home_Address__Street__s: string | null;
  Home_Address__City__s: string | null;
  Home_Address__PostalCode__s: string | null;
  Home_Address__StateCode__s: string | null;
  Home_Address__CountryCode__s: string | null;
  Home_Address__Latitude__s: number | null;
  Home_Address__Longitude__s: number | null;
  Home_Address__GeocodeAccuracy__s: string | null;
  Home_Address__c: Address | null;
  Is_Latest__c: boolean;
  Hourly_Rate__c: number | null;
  State_Sick_Leave_Hours__c: string | null;
  Federal_Sick_Leave_Hours__c: string | null;
  PTO_Hours__c: string | null;
  County__c: string | null;
  Policy_Event__c: string | null;
  Min_Wage__c: string | null;
  Min_Wage_Rate__c: number | null;
  Min_Wage_Issue__c: string | null;
};

type ParentReferences$Compensation_Policy__ChangeEvent = {
  //
};

type ChildRelationships$Compensation_Policy__ChangeEvent = {
  //
};

interface SObjectDefinition$Compensation_Policy__ChangeEvent extends SObjectDefinition<'Compensation_Policy__ChangeEvent'> {
    Name: 'Compensation_Policy__ChangeEvent';
    Fields: Fields$Compensation_Policy__ChangeEvent;
    ParentReferences: ParentReferences$Compensation_Policy__ChangeEvent;
    ChildRelationships: ChildRelationships$Compensation_Policy__ChangeEvent;
  }

type Fields$Compensation_Policy__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Contact__c: string;
  Effective_Date__c: DateString;
  End_Date__c: DateString | null;
  Holidays__c: string | null;
  Work_Classification__c: string | null;
  Employee_Type__c: string | null;
  Home_Address__Street__s: string | null;
  Home_Address__City__s: string | null;
  Home_Address__PostalCode__s: string | null;
  Home_Address__StateCode__s: string | null;
  Home_Address__CountryCode__s: string | null;
  Home_Address__Latitude__s: number | null;
  Home_Address__Longitude__s: number | null;
  Home_Address__GeocodeAccuracy__s: string | null;
  Home_Address__c: Address | null;
  Is_Latest__c: boolean;
  Hourly_Rate__c: number | null;
  State_Sick_Leave_Hours__c: string | null;
  Federal_Sick_Leave_Hours__c: string | null;
  PTO_Hours__c: string | null;
  County__c: string | null;
  Policy_Event__c: string | null;
  Min_Wage__c: string | null;
  Min_Wage_Rate__c: number | null;
  Min_Wage_Issue__c: string | null;
};

type ParentReferences$Compensation_Policy__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact__r: SObjectDefinition$Contact;
  Min_Wage__r: SObjectDefinition$Min_Wage__c | null;
};

type ChildRelationships$Compensation_Policy__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Compensation_Policy__c extends SObjectDefinition<'Compensation_Policy__c'> {
    Name: 'Compensation_Policy__c';
    Fields: Fields$Compensation_Policy__c;
    ParentReferences: ParentReferences$Compensation_Policy__c;
    ChildRelationships: ChildRelationships$Compensation_Policy__c;
  }

type Fields$ConferenceNumber = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalEventId: string | null;
  Label: string | null;
  Number: string | null;
  AccessCode: string | null;
  Vendor: string | null;
};

type ParentReferences$ConferenceNumber = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ExternalEvent: SObjectDefinition$ExternalEvent | null;
};

type ChildRelationships$ConferenceNumber = {
  //
};

interface SObjectDefinition$ConferenceNumber extends SObjectDefinition<'ConferenceNumber'> {
    Name: 'ConferenceNumber';
    Fields: Fields$ConferenceNumber;
    ParentReferences: ParentReferences$ConferenceNumber;
    ChildRelationships: ChildRelationships$ConferenceNumber;
  }

type Fields$ConnectedApplication = {
  //
  Id: string;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OptionsAllowAdminApprovedUsersOnly: boolean;
  OptionsRefreshTokenValidityMetric: boolean;
  OptionsHasSessionLevelPolicy: boolean;
  OptionsIsInternal: boolean;
  OptionsFullContentPushNotifications: boolean;
  MobileSessionTimeout: string | null;
  PinLength: string | null;
  StartUrl: string | null;
  MobileStartUrl: string | null;
  RefreshTokenValidityPeriod: number | null;
};

type ParentReferences$ConnectedApplication = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ConnectedApplication = {
  //
  InstalledMobileApps: SObjectDefinition$InstalledMobileApp;
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$ConnectedApplication extends SObjectDefinition<'ConnectedApplication'> {
    Name: 'ConnectedApplication';
    Fields: Fields$ConnectedApplication;
    ParentReferences: ParentReferences$ConnectedApplication;
    ChildRelationships: ChildRelationships$ConnectedApplication;
  }

type Fields$Contact = {
  //
  Id: string;
  IsDeleted: boolean;
  MasterRecordId: string | null;
  AccountId: string | null;
  LastName: string;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string;
  RecordTypeId: string | null;
  OtherStreet: string | null;
  OtherCity: string | null;
  OtherState: string | null;
  OtherPostalCode: string | null;
  OtherCountry: string | null;
  OtherStateCode: string | null;
  OtherCountryCode: string | null;
  OtherLatitude: number | null;
  OtherLongitude: number | null;
  OtherGeocodeAccuracy: string | null;
  OtherAddress: Address | null;
  MailingStreet: string | null;
  MailingCity: string | null;
  MailingState: string | null;
  MailingPostalCode: string | null;
  MailingCountry: string | null;
  MailingStateCode: string | null;
  MailingCountryCode: string | null;
  MailingLatitude: number | null;
  MailingLongitude: number | null;
  MailingGeocodeAccuracy: string | null;
  MailingAddress: Address | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  HomePhone: string | null;
  OtherPhone: string | null;
  AssistantPhone: string | null;
  ReportsToId: string | null;
  Email: string | null;
  Title: string | null;
  Department: string | null;
  AssistantName: string | null;
  LeadSource: string | null;
  Birthdate: DateString | null;
  Description: string | null;
  OwnerId: string;
  HasOptedOutOfEmail: boolean;
  HasOptedOutOfFax: boolean;
  DoNotCall: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastCURequestDate: DateString | null;
  LastCUUpdateDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  EmailBouncedReason: string | null;
  EmailBouncedDate: DateString | null;
  IsEmailBounced: boolean;
  PhotoUrl: string | null;
  Jigsaw: string | null;
  JigsawContactId: string | null;
  IndividualId: string | null;
  ActivityMetricId: string | null;
  ActivityMetricRollupId: string | null;
  Linkedin__c: string | null;
  Is_Migrated__c: boolean;
  Type__c: string | null;
  Internal_Advocate__c: boolean;
  DSCORGPKG__Company_HQ_Address__c: string | null;
  DSCORGPKG__Company_HQ_City__c: string | null;
  DSCORGPKG__Company_HQ_Country_Code__c: string | null;
  DSCORGPKG__Company_HQ_Country_Full_Name__c: string | null;
  DSCORGPKG__Company_HQ_Postal_Code__c: string | null;
  DSCORGPKG__Company_HQ_State_Full_Name__c: string | null;
  DSCORGPKG__Company_HQ_State__c: string | null;
  DSCORGPKG__Conflict__c: string | null;
  DSCORGPKG__DeletedFromDiscoverOrg__c: string | null;
  DSCORGPKG__DiscoverOrg_Company_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_Created_On__c: DateString | null;
  DSCORGPKG__DiscoverOrg_First_Update__c: DateString | null;
  DSCORGPKG__DiscoverOrg_FullCountryName__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_LastUpdate__c: DateString | null;
  DSCORGPKG__DiscoverOrg_State_Full_Name__c: string | null;
  DSCORGPKG__DiscoverOrg_Technologies__c: string | null;
  DSCORGPKG__Email_Invalid__c: boolean;
  DSCORGPKG__Exclude_Update__c: boolean;
  DSCORGPKG__External_DiscoverOrg_Id__c: string | null;
  DSCORGPKG__ITOrgChart__c: string | null;
  DSCORGPKG__Job_Function__c: string | null;
  DSCORGPKG__LinkedIn_URL__c: string | null;
  DSCORGPKG__Locked_By_User__c: string | null;
  DSCORGPKG__Management_Level__c: string | null;
  DSCORGPKG__MiddleName__c: string | null;
  DSCORGPKG__NickName__c: string | null;
  DSCORGPKG__REMOVELinkedinURL__c: string | null;
  DSCORGPKG__ReportsTo__c: string | null;
  DSCORGPKG__Twitter_URL__c: string | null;
  DSCORGPKG__department__c: string | null;
  DSCORGPKG__title_Custom__c: string | null;
  Leave_Without_Pay_Total_Hours__c: number | null;
  ADP_Associate_Id__c: string | null;
  Approval_Frequency__c: string | null;
  Interview_date__c: DateString | null;
  Status__c: string | null;
  Authorization__c: string | null;
  LCAT_years_of_experience__c: string | null;
  Company_Phone__c: string | null;
  Sstack_CC__T_P_Actual_Start_Date__c: DateString | null;
  Interview_4__c: string | null;
  Military_experience__c: boolean;
  Other_supervisor__c: string | null;
  Client__c: string | null;
  Inactive_Status__c: string | null;
  Candidate_Primary_Status__c: string | null;
  rcsfl__SMS_Number__c: string | null;
  Active_Security_Clearance__c: boolean;
  User__c: string | null;
  County__c: string | null;
  Non_Citizen__c: boolean;
  Offshore_Total_Hours__c: number | null;
  Hometown__c: string | null;
  Geographic_Preference__c: string | null;
  Months_of_Experience__c: string | null;
  Highest_level_of_degree_completed__c: string | null;
  Year_of_Graduation__c: DateString | null;
  School_Where_Degree_was_Earned__c: string | null;
  Degree_Achieved__c: string | null;
  Years_Of_Experience__c: string | null;
  Tech_Stack_Preference__c: string | null;
  Additional_Credentials__c: string | null;
  Personal_GitHub__c: string | null;
  Linkedin_Account__c: string | null;
  Expected_Degree__c: string | null;
  Expected_Graduation_Date__c: DateString | null;
  Client_Feedback__c: string | null;
  Tech_Screen_Result__c: string | null;
  Communication_Skills_Recruiter__c: string | null;
  Communication_Skills_Tech_Screener__c: string | null;
  Tech_Screener__c: string | null;
  Linkedin_Profile_Approved__c: boolean;
  Interview_1__c: string | null;
  Interview_2__c: string | null;
  Interview_3__c: string | null;
  rcsfl__SendSMS__c: string | null;
  Challenge_Name__c: string | null;
  Personal_email__c: string | null;
  Challenge_Link__c: string | null;
  Codility__c: number | null;
  Special_event__c: string | null;
  Joined_from_DSS__c: boolean;
  Opportunity__c: string | null;
  Staff_Aug_Total_Hours__c: number | null;
  Post_placement_feedback_del__c: string | null;
  Opportunity_Rank__c: string | null;
  Coding_Self_Rank__c: string | null;
  Department_1__c: string | null;
  Military_Service_Type__c: string | null;
  Military_Job_Code__c: string | null;
  Military_Status__c: string | null;
  Military_Service_Start_Date__c: DateString | null;
  Military_Service_End_Date__c: DateString | null;
  Military_Separation_Date_5Y__c: boolean;
  DD_214_Uploaded__c: boolean;
  Signature__c: string | null;
  Contact_Type__c: string | null;
  Train_Place_Total_Hours__c: number | null;
  Technical_Result__c: string | null;
  Client_Email__c: string | null;
  Corp_Github__c: string | null;
  Recruiter_1_Email__c: string | null;
  Recruiter_2_Email__c: string | null;
  Recruiter_1__c: string | null;
  Recruiter_2__c: string | null;
  Github_Set_to_Private__c: boolean;
  Behavioral_Result__c: string | null;
  Project_Score_Result__c: string | null;
  Recruiter_1_Commission_Percentage__c: number | null;
  Recruiter_2_Commission_Percentage__c: number | null;
  Screener_Determination__c: string | null;
  BH_Candidate_ID__c: string | null;
  Temp_MS_Password__c: string | null;
  MS_Subscription_ID__c: string | null;
  Application_Date__c: DateString | null;
  Willing_to_Relocate_BH__c: string | null;
  Target_Start_Date__c: DateString | null;
  Referrer_BH__c: string | null;
  Instagram_Handle__c: string | null;
  Source__c: string | null;
  Lead_Source__c: string | null;
  VIP__c: boolean;
  Medium__c: string | null;
  Internal_Memberships__c: string | null;
  Contact_Stage__c: string | null;
  Campaign__c: string | null;
  Clearance_Status__c: string | null;
  Candidate_Rank_Recruiter__c: string | null;
  Paid_Sick_Leave_Federal_Total_Hours__c: number | null;
  Client_Name__c: string | null;
  Mocha_Test_Taken_On__c: DateString | null;
  Pass_Fail__c: string | null;
  Willing_to_Relocate__c: boolean;
  Opportunity_1__c: string | null;
  Opportunity_2__c: string | null;
  Submitted_Date__c: DateString | null;
  Interview_Client__c: string | null;
  Submitted_Client__c: string | null;
  Opportunity_3__c: string | null;
  Opportunity_4__c: string | null;
  Interview_Date1__c: DateString | null;
  Paid_Sick_Leave_Total_Hours__c: number | null;
  Training_Bench_Override_Total_Hours__c: number | null;
  Training_Bench_Total_Hours__c: number | null;
  sansancard__CreatedByScanToSalesforce__c: boolean;
  Unexcused_LWP_Total_Hours__c: number | null;
  Vaccination_Status__c: string | null;
  Sstack_CC__Offshore_Total_Hours__c: number | null;
  Sstack_CC__Staff_Aug_Total_Hours__c: number | null;
  Sstack_CC__Train_Place_Total_Hours__c: number | null;
  Nickname__c: string | null;
  Major__c: string | null;
  Agency__c: string | null;
  Rapids__c: string | null;
  Registration_Date__c: DateString | null;
  Digital_Badge_Issue_Date__c: DateString | null;
  Certificate_of_Completion_Date__c: DateString | null;
  Apprenticeship_Agreement_Uploaded__c: string | null;
  PTO_Total_Hours__c: number | null;
  Apprenticeship_Cancellation__c: DateString | null;
  X1st_Pay_Increase_Evaluated_Processed__c: string | null;
  X2nd_Pay_Increase_Evaluated_Processed__c: string | null;
  Potential_Smoothstack_Email__c: string | null;
  Potential_Smoothstack_Email_QC__c: string | null;
  Hire_Date__c: DateString | null;
  Candidate_Status__c: string | null;
  Last_Activity_Date__c: DateString | null;
  Number_of_Messages_Sent__c: number | null;
  Number_of_Messages_Received__c: number | null;
  Last_Compensation_Policy_Date__c: DateString | null;
  Candidate__c: string | null;
  Last_Login_Date__c: DateString | null;
  Last_Login_over_2_weeks__c: boolean;
  Active_JP_Count__c: number | null;
  Is_User_Active__c: boolean;
  Last_Email_or_Meeting_Date__c: DateString | null;
  Relationship_Status__c: string | null;
  Smoothstack_Email__c: string | null;
  Hubspot_Account__c: string | null;
};

type ParentReferences$Contact = {
  //
  MasterRecord: SObjectDefinition$Contact | null;
  Account: SObjectDefinition$Account | null;
  RecordType: SObjectDefinition$RecordType | null;
  ReportsTo: SObjectDefinition$Contact | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Individual: SObjectDefinition$Individual | null;
  ActivityMetric: SObjectDefinition$ActivityMetric | null;
  ActivityMetricRollup: SObjectDefinition$ActivityMetricRollup | null;
  DSCORGPKG__Conflict__r: SObjectDefinition$DSCORGPKG__Conflict__c | null;
  DSCORGPKG__Locked_By_User__r: SObjectDefinition$User | null;
  Other_supervisor__r: SObjectDefinition$Contact | null;
  User__r: SObjectDefinition$User | null;
  Opportunity__r: SObjectDefinition$Opportunity | null;
  Client_Name__r: SObjectDefinition$Account | null;
  Opportunity_1__r: SObjectDefinition$Opportunity | null;
  Opportunity_2__r: SObjectDefinition$Opportunity | null;
  Interview_Client__r: SObjectDefinition$Account | null;
  Submitted_Client__r: SObjectDefinition$Account | null;
  Opportunity_3__r: SObjectDefinition$Opportunity | null;
  Opportunity_4__r: SObjectDefinition$Opportunity | null;
  Candidate__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Contact = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  AccountContactRelations: SObjectDefinition$AccountContactRelation;
  AccountContactRoles: SObjectDefinition$AccountContactRole;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Assets: SObjectDefinition$Asset;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  CampaignMembers: SObjectDefinition$CampaignMember;
  Cases: SObjectDefinition$Case;
  CaseContactRoles: SObjectDefinition$CaseContactRole;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  Feeds: SObjectDefinition$ContactFeed;
  Histories: SObjectDefinition$ContactHistory;
  ContactRequests: SObjectDefinition$ContactRequest;
  Shares: SObjectDefinition$ContactShare;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractsSigned: SObjectDefinition$Contract;
  ContractContactRoles: SObjectDefinition$ContractContactRole;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  EmailMessageRelations: SObjectDefinition$EmailMessageRelation;
  EmailStatuses: SObjectDefinition$EmailStatus;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  EventWhoRelations: SObjectDefinition$EventWhoRelation;
  ListEmailIndividualRecipients: SObjectDefinition$ListEmailIndividualRecipient;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Opportunities: SObjectDefinition$Opportunity;
  OpportunityContactRoles: SObjectDefinition$OpportunityContactRole;
  OutgoingEmailRelations: SObjectDefinition$OutgoingEmailRelation;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Quotes: SObjectDefinition$Quote;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Personas: SObjectDefinition$SocialPersona;
  Posts: SObjectDefinition$SocialPost;
  LeadSurveyInvitations: SObjectDefinition$SurveyInvitation;
  SurveyInvitations: SObjectDefinition$SurveyInvitation;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TaskWhoRelations: SObjectDefinition$TaskWhoRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
  Users: SObjectDefinition$User;
  PersonRecord: SObjectDefinition$UserEmailPreferredPerson;
};

interface SObjectDefinition$Contact extends SObjectDefinition<'Contact'> {
    Name: 'Contact';
    Fields: Fields$Contact;
    ParentReferences: ParentReferences$Contact;
    ChildRelationships: ChildRelationships$Contact;
  }

type Fields$ContactChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  AccountId: string | null;
  LastName: string | null;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  OtherStreet: string | null;
  OtherCity: string | null;
  OtherState: string | null;
  OtherPostalCode: string | null;
  OtherCountry: string | null;
  OtherStateCode: string | null;
  OtherCountryCode: string | null;
  OtherLatitude: number | null;
  OtherLongitude: number | null;
  OtherGeocodeAccuracy: string | null;
  OtherAddress: Address | null;
  MailingStreet: string | null;
  MailingCity: string | null;
  MailingState: string | null;
  MailingPostalCode: string | null;
  MailingCountry: string | null;
  MailingStateCode: string | null;
  MailingCountryCode: string | null;
  MailingLatitude: number | null;
  MailingLongitude: number | null;
  MailingGeocodeAccuracy: string | null;
  MailingAddress: Address | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  HomePhone: string | null;
  OtherPhone: string | null;
  AssistantPhone: string | null;
  ReportsToId: string | null;
  Email: string | null;
  Title: string | null;
  Department: string | null;
  AssistantName: string | null;
  LeadSource: string | null;
  Birthdate: DateString | null;
  Description: string | null;
  OwnerId: string | null;
  HasOptedOutOfEmail: boolean;
  HasOptedOutOfFax: boolean;
  DoNotCall: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  LastCURequestDate: DateString | null;
  LastCUUpdateDate: DateString | null;
  EmailBouncedReason: string | null;
  EmailBouncedDate: DateString | null;
  Jigsaw: string | null;
  JigsawContactId: string | null;
  IndividualId: string | null;
  Linkedin__c: string | null;
  Is_Migrated__c: boolean;
  Type__c: string | null;
  Internal_Advocate__c: boolean;
  DSCORGPKG__Company_HQ_Address__c: string | null;
  DSCORGPKG__Company_HQ_City__c: string | null;
  DSCORGPKG__Company_HQ_Country_Code__c: string | null;
  DSCORGPKG__Company_HQ_Country_Full_Name__c: string | null;
  DSCORGPKG__Company_HQ_Postal_Code__c: string | null;
  DSCORGPKG__Company_HQ_State_Full_Name__c: string | null;
  DSCORGPKG__Company_HQ_State__c: string | null;
  DSCORGPKG__Conflict__c: string | null;
  DSCORGPKG__DeletedFromDiscoverOrg__c: string | null;
  DSCORGPKG__DiscoverOrg_Company_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_Created_On__c: DateString | null;
  DSCORGPKG__DiscoverOrg_First_Update__c: DateString | null;
  DSCORGPKG__DiscoverOrg_FullCountryName__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_LastUpdate__c: DateString | null;
  DSCORGPKG__DiscoverOrg_State_Full_Name__c: string | null;
  DSCORGPKG__DiscoverOrg_Technologies__c: string | null;
  DSCORGPKG__Email_Invalid__c: boolean;
  DSCORGPKG__Exclude_Update__c: boolean;
  DSCORGPKG__External_DiscoverOrg_Id__c: string | null;
  DSCORGPKG__ITOrgChart__c: string | null;
  DSCORGPKG__Job_Function__c: string | null;
  DSCORGPKG__LinkedIn_URL__c: string | null;
  DSCORGPKG__Locked_By_User__c: string | null;
  DSCORGPKG__Management_Level__c: string | null;
  DSCORGPKG__MiddleName__c: string | null;
  DSCORGPKG__NickName__c: string | null;
  DSCORGPKG__REMOVELinkedinURL__c: string | null;
  DSCORGPKG__ReportsTo__c: string | null;
  DSCORGPKG__Twitter_URL__c: string | null;
  DSCORGPKG__department__c: string | null;
  DSCORGPKG__title_Custom__c: string | null;
  Leave_Without_Pay_Total_Hours__c: number | null;
  ADP_Associate_Id__c: string | null;
  Approval_Frequency__c: string | null;
  Interview_date__c: DateString | null;
  Status__c: string | null;
  Authorization__c: string | null;
  LCAT_years_of_experience__c: string | null;
  Company_Phone__c: string | null;
  Sstack_CC__T_P_Actual_Start_Date__c: DateString | null;
  Interview_4__c: string | null;
  Military_experience__c: boolean;
  Other_supervisor__c: string | null;
  Client__c: string | null;
  Inactive_Status__c: string | null;
  Candidate_Primary_Status__c: string | null;
  rcsfl__SMS_Number__c: string | null;
  Active_Security_Clearance__c: boolean;
  User__c: string | null;
  County__c: string | null;
  Non_Citizen__c: boolean;
  Offshore_Total_Hours__c: number | null;
  Hometown__c: string | null;
  Geographic_Preference__c: string | null;
  Months_of_Experience__c: string | null;
  Highest_level_of_degree_completed__c: string | null;
  Year_of_Graduation__c: DateString | null;
  School_Where_Degree_was_Earned__c: string | null;
  Degree_Achieved__c: string | null;
  Years_Of_Experience__c: string | null;
  Tech_Stack_Preference__c: string | null;
  Additional_Credentials__c: string | null;
  Personal_GitHub__c: string | null;
  Linkedin_Account__c: string | null;
  Expected_Degree__c: string | null;
  Expected_Graduation_Date__c: DateString | null;
  Client_Feedback__c: string | null;
  Tech_Screen_Result__c: string | null;
  Communication_Skills_Recruiter__c: string | null;
  Communication_Skills_Tech_Screener__c: string | null;
  Tech_Screener__c: string | null;
  Linkedin_Profile_Approved__c: boolean;
  Interview_1__c: string | null;
  Interview_2__c: string | null;
  Interview_3__c: string | null;
  rcsfl__SendSMS__c: string | null;
  Challenge_Name__c: string | null;
  Personal_email__c: string | null;
  Challenge_Link__c: string | null;
  Codility__c: number | null;
  Special_event__c: string | null;
  Joined_from_DSS__c: boolean;
  Opportunity__c: string | null;
  Staff_Aug_Total_Hours__c: number | null;
  Post_placement_feedback_del__c: string | null;
  Opportunity_Rank__c: string | null;
  Coding_Self_Rank__c: string | null;
  Department_1__c: string | null;
  Military_Service_Type__c: string | null;
  Military_Job_Code__c: string | null;
  Military_Status__c: string | null;
  Military_Service_Start_Date__c: DateString | null;
  Military_Service_End_Date__c: DateString | null;
  Military_Separation_Date_5Y__c: boolean;
  DD_214_Uploaded__c: boolean;
  Signature__c: string | null;
  Contact_Type__c: string | null;
  Train_Place_Total_Hours__c: number | null;
  Technical_Result__c: string | null;
  Client_Email__c: string | null;
  Corp_Github__c: string | null;
  Recruiter_1_Email__c: string | null;
  Recruiter_2_Email__c: string | null;
  Recruiter_1__c: string | null;
  Recruiter_2__c: string | null;
  Github_Set_to_Private__c: boolean;
  Behavioral_Result__c: string | null;
  Project_Score_Result__c: string | null;
  Recruiter_1_Commission_Percentage__c: number | null;
  Recruiter_2_Commission_Percentage__c: number | null;
  Screener_Determination__c: string | null;
  BH_Candidate_ID__c: string | null;
  Temp_MS_Password__c: string | null;
  MS_Subscription_ID__c: string | null;
  Application_Date__c: DateString | null;
  Willing_to_Relocate_BH__c: string | null;
  Target_Start_Date__c: DateString | null;
  Referrer_BH__c: string | null;
  Instagram_Handle__c: string | null;
  Source__c: string | null;
  Lead_Source__c: string | null;
  VIP__c: boolean;
  Medium__c: string | null;
  Internal_Memberships__c: string | null;
  Contact_Stage__c: string | null;
  Campaign__c: string | null;
  Clearance_Status__c: string | null;
  Candidate_Rank_Recruiter__c: string | null;
  Paid_Sick_Leave_Federal_Total_Hours__c: number | null;
  Client_Name__c: string | null;
  Mocha_Test_Taken_On__c: DateString | null;
  Pass_Fail__c: string | null;
  Willing_to_Relocate__c: boolean;
  Opportunity_1__c: string | null;
  Opportunity_2__c: string | null;
  Submitted_Date__c: DateString | null;
  Interview_Client__c: string | null;
  Submitted_Client__c: string | null;
  Opportunity_3__c: string | null;
  Opportunity_4__c: string | null;
  Interview_Date1__c: DateString | null;
  Paid_Sick_Leave_Total_Hours__c: number | null;
  Training_Bench_Override_Total_Hours__c: number | null;
  Training_Bench_Total_Hours__c: number | null;
  sansancard__CreatedByScanToSalesforce__c: boolean;
  Unexcused_LWP_Total_Hours__c: number | null;
  Vaccination_Status__c: string | null;
  Sstack_CC__Offshore_Total_Hours__c: number | null;
  Sstack_CC__Staff_Aug_Total_Hours__c: number | null;
  Sstack_CC__Train_Place_Total_Hours__c: number | null;
  Nickname__c: string | null;
  Major__c: string | null;
  Agency__c: string | null;
  Rapids__c: string | null;
  Registration_Date__c: DateString | null;
  Digital_Badge_Issue_Date__c: DateString | null;
  Certificate_of_Completion_Date__c: DateString | null;
  Apprenticeship_Agreement_Uploaded__c: string | null;
  PTO_Total_Hours__c: number | null;
  Apprenticeship_Cancellation__c: DateString | null;
  X1st_Pay_Increase_Evaluated_Processed__c: string | null;
  X2nd_Pay_Increase_Evaluated_Processed__c: string | null;
  Potential_Smoothstack_Email__c: string | null;
  Potential_Smoothstack_Email_QC__c: string | null;
  Hire_Date__c: DateString | null;
  Candidate_Status__c: string | null;
  Last_Activity_Date__c: DateString | null;
  Number_of_Messages_Sent__c: number | null;
  Number_of_Messages_Received__c: number | null;
  Last_Compensation_Policy_Date__c: DateString | null;
  Candidate__c: string | null;
  Last_Login_Date__c: DateString | null;
  Last_Login_over_2_weeks__c: boolean;
  Active_JP_Count__c: number | null;
  Is_User_Active__c: boolean;
  Last_Email_or_Meeting_Date__c: DateString | null;
  Relationship_Status__c: string | null;
  Smoothstack_Email__c: string | null;
  Hubspot_Account__c: string | null;
};

type ParentReferences$ContactChangeEvent = {
  //
};

type ChildRelationships$ContactChangeEvent = {
  //
};

interface SObjectDefinition$ContactChangeEvent extends SObjectDefinition<'ContactChangeEvent'> {
    Name: 'ContactChangeEvent';
    Fields: Fields$ContactChangeEvent;
    ParentReferences: ParentReferences$ContactChangeEvent;
    ChildRelationships: ChildRelationships$ContactChangeEvent;
  }

type Fields$ContactFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ContactFeed = {
  //
  Parent: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ContactFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ContactFeed extends SObjectDefinition<'ContactFeed'> {
    Name: 'ContactFeed';
    Fields: Fields$ContactFeed;
    ParentReferences: ParentReferences$ContactFeed;
    ChildRelationships: ChildRelationships$ContactFeed;
  }

type Fields$ContactHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactHistory = {
  //
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactHistory = {
  //
};

interface SObjectDefinition$ContactHistory extends SObjectDefinition<'ContactHistory'> {
    Name: 'ContactHistory';
    Fields: Fields$ContactHistory;
    ParentReferences: ParentReferences$ContactHistory;
    ChildRelationships: ChildRelationships$ContactHistory;
  }

type Fields$ContactPointAddress = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  ContactPointPhoneId: string | null;
  AddressType: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  StateCode: string | null;
  CountryCode: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  IsDefault: boolean;
};

type ParentReferences$ContactPointAddress = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name | null;
  ContactPointPhone: SObjectDefinition$ContactPointPhone | null;
};

type ChildRelationships$ContactPointAddress = {
  //
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  Histories: SObjectDefinition$ContactPointAddressHistory;
  Shares: SObjectDefinition$ContactPointAddressShare;
  ContactPointConsents: SObjectDefinition$ContactPointConsent;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointAddress extends SObjectDefinition<'ContactPointAddress'> {
    Name: 'ContactPointAddress';
    Fields: Fields$ContactPointAddress;
    ParentReferences: ParentReferences$ContactPointAddress;
    ChildRelationships: ChildRelationships$ContactPointAddress;
  }

type Fields$ContactPointAddressChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  ContactPointPhoneId: string | null;
  AddressType: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  StateCode: string | null;
  CountryCode: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  IsDefault: boolean;
};

type ParentReferences$ContactPointAddressChangeEvent = {
  //
};

type ChildRelationships$ContactPointAddressChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointAddressChangeEvent extends SObjectDefinition<'ContactPointAddressChangeEvent'> {
    Name: 'ContactPointAddressChangeEvent';
    Fields: Fields$ContactPointAddressChangeEvent;
    ParentReferences: ParentReferences$ContactPointAddressChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointAddressChangeEvent;
  }

type Fields$ContactPointAddressHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointAddressId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointAddressHistory = {
  //
  ContactPointAddress: SObjectDefinition$ContactPointAddress;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointAddressHistory = {
  //
};

interface SObjectDefinition$ContactPointAddressHistory extends SObjectDefinition<'ContactPointAddressHistory'> {
    Name: 'ContactPointAddressHistory';
    Fields: Fields$ContactPointAddressHistory;
    ParentReferences: ParentReferences$ContactPointAddressHistory;
    ChildRelationships: ChildRelationships$ContactPointAddressHistory;
  }

type Fields$ContactPointAddressShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointAddressShare = {
  //
  Parent: SObjectDefinition$ContactPointAddress;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointAddressShare = {
  //
};

interface SObjectDefinition$ContactPointAddressShare extends SObjectDefinition<'ContactPointAddressShare'> {
    Name: 'ContactPointAddressShare';
    Fields: Fields$ContactPointAddressShare;
    ParentReferences: ParentReferences$ContactPointAddressShare;
    ChildRelationships: ChildRelationships$ContactPointAddressShare;
  }

type Fields$ContactPointConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ContactPointId: string;
  DataUsePurposeId: string | null;
  PrivacyConsentStatus: string;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$ContactPointConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ContactPoint: SObjectDefinition$Name;
  DataUsePurpose: SObjectDefinition$DataUsePurpose | null;
};

type ChildRelationships$ContactPointConsent = {
  //
  Histories: SObjectDefinition$ContactPointConsentHistory;
  Shares: SObjectDefinition$ContactPointConsentShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointConsent extends SObjectDefinition<'ContactPointConsent'> {
    Name: 'ContactPointConsent';
    Fields: Fields$ContactPointConsent;
    ParentReferences: ParentReferences$ContactPointConsent;
    ChildRelationships: ChildRelationships$ContactPointConsent;
  }

type Fields$ContactPointConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ContactPointId: string | null;
  DataUsePurposeId: string | null;
  PrivacyConsentStatus: string | null;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$ContactPointConsentChangeEvent = {
  //
};

type ChildRelationships$ContactPointConsentChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointConsentChangeEvent extends SObjectDefinition<'ContactPointConsentChangeEvent'> {
    Name: 'ContactPointConsentChangeEvent';
    Fields: Fields$ContactPointConsentChangeEvent;
    ParentReferences: ParentReferences$ContactPointConsentChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointConsentChangeEvent;
  }

type Fields$ContactPointConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointConsentHistory = {
  //
  ContactPointConsent: SObjectDefinition$ContactPointConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointConsentHistory = {
  //
};

interface SObjectDefinition$ContactPointConsentHistory extends SObjectDefinition<'ContactPointConsentHistory'> {
    Name: 'ContactPointConsentHistory';
    Fields: Fields$ContactPointConsentHistory;
    ParentReferences: ParentReferences$ContactPointConsentHistory;
    ChildRelationships: ChildRelationships$ContactPointConsentHistory;
  }

type Fields$ContactPointConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointConsentShare = {
  //
  Parent: SObjectDefinition$ContactPointConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointConsentShare = {
  //
};

interface SObjectDefinition$ContactPointConsentShare extends SObjectDefinition<'ContactPointConsentShare'> {
    Name: 'ContactPointConsentShare';
    Fields: Fields$ContactPointConsentShare;
    ParentReferences: ParentReferences$ContactPointConsentShare;
    ChildRelationships: ChildRelationships$ContactPointConsentShare;
  }

type Fields$ContactPointEmail = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  EmailAddress: string;
  EmailMailBox: string | null;
  EmailDomain: string | null;
  EmailLatestBounceDateTime: DateString | null;
  EmailLatestBounceReasonText: string | null;
};

type ParentReferences$ContactPointEmail = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name | null;
};

type ChildRelationships$ContactPointEmail = {
  //
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  ContactPointConsents: SObjectDefinition$ContactPointConsent;
  Histories: SObjectDefinition$ContactPointEmailHistory;
  Shares: SObjectDefinition$ContactPointEmailShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointEmail extends SObjectDefinition<'ContactPointEmail'> {
    Name: 'ContactPointEmail';
    Fields: Fields$ContactPointEmail;
    ParentReferences: ParentReferences$ContactPointEmail;
    ChildRelationships: ChildRelationships$ContactPointEmail;
  }

type Fields$ContactPointEmailChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  EmailAddress: string | null;
  EmailMailBox: string | null;
  EmailDomain: string | null;
  EmailLatestBounceDateTime: DateString | null;
  EmailLatestBounceReasonText: string | null;
};

type ParentReferences$ContactPointEmailChangeEvent = {
  //
};

type ChildRelationships$ContactPointEmailChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointEmailChangeEvent extends SObjectDefinition<'ContactPointEmailChangeEvent'> {
    Name: 'ContactPointEmailChangeEvent';
    Fields: Fields$ContactPointEmailChangeEvent;
    ParentReferences: ParentReferences$ContactPointEmailChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointEmailChangeEvent;
  }

type Fields$ContactPointEmailHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointEmailId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointEmailHistory = {
  //
  ContactPointEmail: SObjectDefinition$ContactPointEmail;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointEmailHistory = {
  //
};

interface SObjectDefinition$ContactPointEmailHistory extends SObjectDefinition<'ContactPointEmailHistory'> {
    Name: 'ContactPointEmailHistory';
    Fields: Fields$ContactPointEmailHistory;
    ParentReferences: ParentReferences$ContactPointEmailHistory;
    ChildRelationships: ChildRelationships$ContactPointEmailHistory;
  }

type Fields$ContactPointEmailShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointEmailShare = {
  //
  Parent: SObjectDefinition$ContactPointEmail;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointEmailShare = {
  //
};

interface SObjectDefinition$ContactPointEmailShare extends SObjectDefinition<'ContactPointEmailShare'> {
    Name: 'ContactPointEmailShare';
    Fields: Fields$ContactPointEmailShare;
    ParentReferences: ParentReferences$ContactPointEmailShare;
    ChildRelationships: ChildRelationships$ContactPointEmailShare;
  }

type Fields$ContactPointPhone = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  AreaCode: string | null;
  TelephoneNumber: string;
  ExtensionNumber: string | null;
  PhoneType: string | null;
  IsSmsCapable: boolean;
  FormattedInternationalPhoneNumber: string | null;
  FormattedNationalPhoneNumber: string | null;
  IsFaxCapable: boolean;
  IsPersonalPhone: boolean;
  IsBusinessPhone: boolean;
};

type ParentReferences$ContactPointPhone = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name | null;
};

type ChildRelationships$ContactPointPhone = {
  //
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  ContactPointAddresses: SObjectDefinition$ContactPointAddress;
  ContactPointConsents: SObjectDefinition$ContactPointConsent;
  Histories: SObjectDefinition$ContactPointPhoneHistory;
  Shares: SObjectDefinition$ContactPointPhoneShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointPhone extends SObjectDefinition<'ContactPointPhone'> {
    Name: 'ContactPointPhone';
    Fields: Fields$ContactPointPhone;
    ParentReferences: ParentReferences$ContactPointPhone;
    ChildRelationships: ChildRelationships$ContactPointPhone;
  }

type Fields$ContactPointPhoneChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ParentId: string | null;
  ActiveFromDate: DateString | null;
  ActiveToDate: DateString | null;
  BestTimeToContactEndTime: DateString | null;
  BestTimeToContactStartTime: DateString | null;
  BestTimeToContactTimezone: string | null;
  IsPrimary: boolean;
  AreaCode: string | null;
  TelephoneNumber: string | null;
  ExtensionNumber: string | null;
  PhoneType: string | null;
  IsSmsCapable: boolean;
  FormattedInternationalPhoneNumber: string | null;
  FormattedNationalPhoneNumber: string | null;
  IsFaxCapable: boolean;
  IsPersonalPhone: boolean;
  IsBusinessPhone: boolean;
};

type ParentReferences$ContactPointPhoneChangeEvent = {
  //
};

type ChildRelationships$ContactPointPhoneChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointPhoneChangeEvent extends SObjectDefinition<'ContactPointPhoneChangeEvent'> {
    Name: 'ContactPointPhoneChangeEvent';
    Fields: Fields$ContactPointPhoneChangeEvent;
    ParentReferences: ParentReferences$ContactPointPhoneChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointPhoneChangeEvent;
  }

type Fields$ContactPointPhoneHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointPhoneId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointPhoneHistory = {
  //
  ContactPointPhone: SObjectDefinition$ContactPointPhone;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointPhoneHistory = {
  //
};

interface SObjectDefinition$ContactPointPhoneHistory extends SObjectDefinition<'ContactPointPhoneHistory'> {
    Name: 'ContactPointPhoneHistory';
    Fields: Fields$ContactPointPhoneHistory;
    ParentReferences: ParentReferences$ContactPointPhoneHistory;
    ChildRelationships: ChildRelationships$ContactPointPhoneHistory;
  }

type Fields$ContactPointPhoneShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointPhoneShare = {
  //
  Parent: SObjectDefinition$ContactPointPhone;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointPhoneShare = {
  //
};

interface SObjectDefinition$ContactPointPhoneShare extends SObjectDefinition<'ContactPointPhoneShare'> {
    Name: 'ContactPointPhoneShare';
    Fields: Fields$ContactPointPhoneShare;
    ParentReferences: ParentReferences$ContactPointPhoneShare;
    ChildRelationships: ChildRelationships$ContactPointPhoneShare;
  }

type Fields$ContactPointTypeConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  PartyId: string;
  ContactPointType: string | null;
  DataUsePurposeId: string | null;
  PrivacyConsentStatus: string;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$ContactPointTypeConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Party: SObjectDefinition$Individual;
  DataUsePurpose: SObjectDefinition$DataUsePurpose | null;
};

type ChildRelationships$ContactPointTypeConsent = {
  //
  Histories: SObjectDefinition$ContactPointTypeConsentHistory;
  Shares: SObjectDefinition$ContactPointTypeConsentShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ContactPointTypeConsent extends SObjectDefinition<'ContactPointTypeConsent'> {
    Name: 'ContactPointTypeConsent';
    Fields: Fields$ContactPointTypeConsent;
    ParentReferences: ParentReferences$ContactPointTypeConsent;
    ChildRelationships: ChildRelationships$ContactPointTypeConsent;
  }

type Fields$ContactPointTypeConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  PartyId: string | null;
  ContactPointType: string | null;
  DataUsePurposeId: string | null;
  PrivacyConsentStatus: string | null;
  EffectiveFrom: DateString | null;
  EffectiveTo: DateString | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
  DoubleConsentCaptureDate: DateString | null;
};

type ParentReferences$ContactPointTypeConsentChangeEvent = {
  //
};

type ChildRelationships$ContactPointTypeConsentChangeEvent = {
  //
};

interface SObjectDefinition$ContactPointTypeConsentChangeEvent extends SObjectDefinition<'ContactPointTypeConsentChangeEvent'> {
    Name: 'ContactPointTypeConsentChangeEvent';
    Fields: Fields$ContactPointTypeConsentChangeEvent;
    ParentReferences: ParentReferences$ContactPointTypeConsentChangeEvent;
    ChildRelationships: ChildRelationships$ContactPointTypeConsentChangeEvent;
  }

type Fields$ContactPointTypeConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContactPointTypeConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContactPointTypeConsentHistory = {
  //
  ContactPointTypeConsent: SObjectDefinition$ContactPointTypeConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointTypeConsentHistory = {
  //
};

interface SObjectDefinition$ContactPointTypeConsentHistory extends SObjectDefinition<'ContactPointTypeConsentHistory'> {
    Name: 'ContactPointTypeConsentHistory';
    Fields: Fields$ContactPointTypeConsentHistory;
    ParentReferences: ParentReferences$ContactPointTypeConsentHistory;
    ChildRelationships: ChildRelationships$ContactPointTypeConsentHistory;
  }

type Fields$ContactPointTypeConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactPointTypeConsentShare = {
  //
  Parent: SObjectDefinition$ContactPointTypeConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactPointTypeConsentShare = {
  //
};

interface SObjectDefinition$ContactPointTypeConsentShare extends SObjectDefinition<'ContactPointTypeConsentShare'> {
    Name: 'ContactPointTypeConsentShare';
    Fields: Fields$ContactPointTypeConsentShare;
    ParentReferences: ParentReferences$ContactPointTypeConsentShare;
    ChildRelationships: ChildRelationships$ContactPointTypeConsentShare;
  }

type Fields$ContactRequest = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  WhatId: string | null;
  WhoId: string | null;
  PreferredPhone: string | null;
  PreferredChannel: string;
  Status: string;
  RequestReason: string | null;
  RequestDescription: string | null;
};

type ParentReferences$ContactRequest = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  What: SObjectDefinition$Name | null;
  Who: SObjectDefinition$Name | null;
};

type ChildRelationships$ContactRequest = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Shares: SObjectDefinition$ContactRequestShare;
  Emails: SObjectDefinition$EmailMessage;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$ContactRequest extends SObjectDefinition<'ContactRequest'> {
    Name: 'ContactRequest';
    Fields: Fields$ContactRequest;
    ParentReferences: ParentReferences$ContactRequest;
    ChildRelationships: ChildRelationships$ContactRequest;
  }

type Fields$ContactRequestShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactRequestShare = {
  //
  Parent: SObjectDefinition$ContactRequest;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactRequestShare = {
  //
};

interface SObjectDefinition$ContactRequestShare extends SObjectDefinition<'ContactRequestShare'> {
    Name: 'ContactRequestShare';
    Fields: Fields$ContactRequestShare;
    ParentReferences: ParentReferences$ContactRequestShare;
    ChildRelationships: ChildRelationships$ContactRequestShare;
  }

type Fields$ContactShare = {
  //
  Id: string;
  ContactId: string;
  UserOrGroupId: string;
  ContactAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ContactShare = {
  //
  Contact: SObjectDefinition$Contact;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContactShare = {
  //
};

interface SObjectDefinition$ContactShare extends SObjectDefinition<'ContactShare'> {
    Name: 'ContactShare';
    Fields: Fields$ContactShare;
    ParentReferences: ParentReferences$ContactShare;
    ChildRelationships: ChildRelationships$ContactShare;
  }

type Fields$ContentAsset = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ContentDocumentId: string | null;
  IsVisibleByExternalUsers: boolean;
};

type ParentReferences$ContentAsset = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ContentDocument: SObjectDefinition$ContentDocument | null;
};

type ChildRelationships$ContentAsset = {
  //
};

interface SObjectDefinition$ContentAsset extends SObjectDefinition<'ContentAsset'> {
    Name: 'ContentAsset';
    Fields: Fields$ContentAsset;
    ParentReferences: ParentReferences$ContentAsset;
    ChildRelationships: ChildRelationships$ContentAsset;
  }

type Fields$ContentBody = {
  //
  Id: string;
};

type ParentReferences$ContentBody = {
  //
};

type ChildRelationships$ContentBody = {
  //
};

interface SObjectDefinition$ContentBody extends SObjectDefinition<'ContentBody'> {
    Name: 'ContentBody';
    Fields: Fields$ContentBody;
    ParentReferences: ParentReferences$ContentBody;
    ChildRelationships: ChildRelationships$ContentBody;
  }

type Fields$ContentDistribution = {
  //
  Id: string;
  CreatedDate: DateString;
  CreatedById: string;
  OwnerId: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Name: string;
  IsDeleted: boolean;
  ContentVersionId: string;
  ContentDocumentId: string | null;
  RelatedRecordId: string | null;
  PreferencesAllowPDFDownload: boolean;
  PreferencesAllowOriginalDownload: boolean;
  PreferencesPasswordRequired: boolean;
  PreferencesNotifyOnVisit: boolean;
  PreferencesLinkLatestVersion: boolean;
  PreferencesAllowViewInBrowser: boolean;
  PreferencesExpires: boolean;
  PreferencesNotifyRndtnComplete: boolean;
  ExpiryDate: DateString | null;
  Password: string | null;
  ViewCount: number | null;
  FirstViewDate: DateString | null;
  LastViewDate: DateString | null;
  DistributionPublicUrl: string | null;
  ContentDownloadUrl: string | null;
  PdfDownloadUrl: string | null;
};

type ParentReferences$ContentDistribution = {
  //
  CreatedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ContentVersion: SObjectDefinition$ContentVersion;
  RelatedRecord: SObjectDefinition$Name | null;
};

type ChildRelationships$ContentDistribution = {
  //
  ContentDistributionViews: SObjectDefinition$ContentDistributionView;
};

interface SObjectDefinition$ContentDistribution extends SObjectDefinition<'ContentDistribution'> {
    Name: 'ContentDistribution';
    Fields: Fields$ContentDistribution;
    ParentReferences: ParentReferences$ContentDistribution;
    ChildRelationships: ChildRelationships$ContentDistribution;
  }

type Fields$ContentDistributionView = {
  //
  Id: string;
  DistributionId: string;
  ParentViewId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  IsInternal: boolean;
  IsDownload: boolean;
};

type ParentReferences$ContentDistributionView = {
  //
  Distribution: SObjectDefinition$ContentDistribution;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentDistributionView = {
  //
};

interface SObjectDefinition$ContentDistributionView extends SObjectDefinition<'ContentDistributionView'> {
    Name: 'ContentDistributionView';
    Fields: Fields$ContentDistributionView;
    ParentReferences: ParentReferences$ContentDistributionView;
    ChildRelationships: ChildRelationships$ContentDistributionView;
  }

type Fields$ContentDocument = {
  //
  Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  IsArchived: boolean;
  ArchivedById: string | null;
  ArchivedDate: DateString | null;
  IsDeleted: boolean;
  OwnerId: string;
  SystemModstamp: DateString;
  Title: string;
  PublishStatus: string;
  LatestPublishedVersionId: string | null;
  ParentId: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  ContentSize: number | null;
  FileType: string | null;
  FileExtension: string | null;
  SharingOption: string | null;
  SharingPrivacy: string | null;
  ContentModifiedDate: DateString | null;
  ContentAssetId: string | null;
};

type ParentReferences$ContentDocument = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$User;
  LatestPublishedVersion: SObjectDefinition$ContentVersion | null;
  ContentAsset: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$ContentDocument = {
  //
  AuthorizationFormTexts: SObjectDefinition$AuthorizationFormText;
  ContentDistributions: SObjectDefinition$ContentDistribution;
  Feeds: SObjectDefinition$ContentDocumentFeed;
  Histories: SObjectDefinition$ContentDocumentHistory;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContentVersions: SObjectDefinition$ContentVersion;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$ContentDocument extends SObjectDefinition<'ContentDocument'> {
    Name: 'ContentDocument';
    Fields: Fields$ContentDocument;
    ParentReferences: ParentReferences$ContentDocument;
    ChildRelationships: ChildRelationships$ContentDocument;
  }

type Fields$ContentDocumentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ContentDocumentFeed = {
  //
  Parent: SObjectDefinition$ContentDocument;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ContentDocumentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ContentDocumentFeed extends SObjectDefinition<'ContentDocumentFeed'> {
    Name: 'ContentDocumentFeed';
    Fields: Fields$ContentDocumentFeed;
    ParentReferences: ParentReferences$ContentDocumentFeed;
    ChildRelationships: ChildRelationships$ContentDocumentFeed;
  }

type Fields$ContentDocumentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContentDocumentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContentDocumentHistory = {
  //
  ContentDocument: SObjectDefinition$ContentDocument;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentDocumentHistory = {
  //
};

interface SObjectDefinition$ContentDocumentHistory extends SObjectDefinition<'ContentDocumentHistory'> {
    Name: 'ContentDocumentHistory';
    Fields: Fields$ContentDocumentHistory;
    ParentReferences: ParentReferences$ContentDocumentHistory;
    ChildRelationships: ChildRelationships$ContentDocumentHistory;
  }

type Fields$ContentDocumentLink = {
  //
  Id: string;
  LinkedEntityId: string;
  ContentDocumentId: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
  ShareType: string | null;
  Visibility: string | null;
};

type ParentReferences$ContentDocumentLink = {
  //
  LinkedEntity: SObjectDefinition$Name;
  ContentDocument: SObjectDefinition$ContentDocument;
};

type ChildRelationships$ContentDocumentLink = {
  //
};

interface SObjectDefinition$ContentDocumentLink extends SObjectDefinition<'ContentDocumentLink'> {
    Name: 'ContentDocumentLink';
    Fields: Fields$ContentDocumentLink;
    ParentReferences: ParentReferences$ContentDocumentLink;
    ChildRelationships: ChildRelationships$ContentDocumentLink;
  }

type Fields$ContentDocumentSubscription = {
  //
  Id: string;
  UserId: string;
  ContentDocumentId: string;
  IsCommentSub: boolean;
  IsDocumentSub: boolean;
};

type ParentReferences$ContentDocumentSubscription = {
  //
  User: SObjectDefinition$User;
  ContentDocument: SObjectDefinition$ContentDocument;
};

type ChildRelationships$ContentDocumentSubscription = {
  //
};

interface SObjectDefinition$ContentDocumentSubscription extends SObjectDefinition<'ContentDocumentSubscription'> {
    Name: 'ContentDocumentSubscription';
    Fields: Fields$ContentDocumentSubscription;
    ParentReferences: ParentReferences$ContentDocumentSubscription;
    ChildRelationships: ChildRelationships$ContentDocumentSubscription;
  }

type Fields$ContentFolder = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentContentFolderId: string | null;
};

type ParentReferences$ContentFolder = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentContentFolder: SObjectDefinition$ContentFolder | null;
};

type ChildRelationships$ContentFolder = {
  //
  ContentFolderLinks: SObjectDefinition$ContentFolderLink;
};

interface SObjectDefinition$ContentFolder extends SObjectDefinition<'ContentFolder'> {
    Name: 'ContentFolder';
    Fields: Fields$ContentFolder;
    ParentReferences: ParentReferences$ContentFolder;
    ChildRelationships: ChildRelationships$ContentFolder;
  }

type Fields$ContentFolderItem = {
  //
  Id: string;
  IsDeleted: boolean;
  IsFolder: boolean;
  ParentContentFolderId: string | null;
  Title: string;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ContentFolderItem = {
  //
  ParentContentFolder: SObjectDefinition$ContentFolder | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentFolderItem = {
  //
};

interface SObjectDefinition$ContentFolderItem extends SObjectDefinition<'ContentFolderItem'> {
    Name: 'ContentFolderItem';
    Fields: Fields$ContentFolderItem;
    ParentReferences: ParentReferences$ContentFolderItem;
    ChildRelationships: ChildRelationships$ContentFolderItem;
  }

type Fields$ContentFolderLink = {
  //
  Id: string;
  ParentEntityId: string;
  ContentFolderId: string;
  IsDeleted: boolean;
  EnableFolderStatus: string | null;
};

type ParentReferences$ContentFolderLink = {
  //
  ContentFolder: SObjectDefinition$ContentFolder;
};

type ChildRelationships$ContentFolderLink = {
  //
};

interface SObjectDefinition$ContentFolderLink extends SObjectDefinition<'ContentFolderLink'> {
    Name: 'ContentFolderLink';
    Fields: Fields$ContentFolderLink;
    ParentReferences: ParentReferences$ContentFolderLink;
    ChildRelationships: ChildRelationships$ContentFolderLink;
  }

type Fields$ContentFolderMember = {
  //
  Id: string;
  ParentContentFolderId: string;
  ChildRecordId: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
};

type ParentReferences$ContentFolderMember = {
  //
  ParentContentFolder: SObjectDefinition$ContentFolder;
  ChildRecord: SObjectDefinition$ContentDocument;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentFolderMember = {
  //
};

interface SObjectDefinition$ContentFolderMember extends SObjectDefinition<'ContentFolderMember'> {
    Name: 'ContentFolderMember';
    Fields: Fields$ContentFolderMember;
    ParentReferences: ParentReferences$ContentFolderMember;
    ChildRelationships: ChildRelationships$ContentFolderMember;
  }

type Fields$ContentNote = {
  //
  Id: string;
  Title: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  ContentModifiedDate: DateString | null;
  LastViewedDate: DateString | null;
  FileType: string | null;
  TextPreview: string | null;
  ContentSize: number | null;
  IsDeleted: boolean;
  FileExtension: string | null;
  LatestPublishedVersionId: string | null;
  OwnerId: string;
  Content: BlobString | null;
  IsReadOnly: boolean;
  SharingPrivacy: string | null;
};

type ParentReferences$ContentNote = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LatestPublishedVersion: SObjectDefinition$ContentVersion | null;
  Owner: SObjectDefinition$User;
};

type ChildRelationships$ContentNote = {
  //
};

interface SObjectDefinition$ContentNote extends SObjectDefinition<'ContentNote'> {
    Name: 'ContentNote';
    Fields: Fields$ContentNote;
    ParentReferences: ParentReferences$ContentNote;
    ChildRelationships: ChildRelationships$ContentNote;
  }

type Fields$ContentNotification = {
  //
  Id: string;
  Nature: string | null;
  UsersId: string;
  CreatedDate: DateString;
  EntityType: string | null;
  EntityIdentifierId: string | null;
  Subject: string | null;
  Text: string | null;
};

type ParentReferences$ContentNotification = {
  //
  Users: SObjectDefinition$User;
};

type ChildRelationships$ContentNotification = {
  //
};

interface SObjectDefinition$ContentNotification extends SObjectDefinition<'ContentNotification'> {
    Name: 'ContentNotification';
    Fields: Fields$ContentNotification;
    ParentReferences: ParentReferences$ContentNotification;
    ChildRelationships: ChildRelationships$ContentNotification;
  }

type Fields$ContentTagSubscription = {
  //
  Id: string;
  UserId: string | null;
};

type ParentReferences$ContentTagSubscription = {
  //
  User: SObjectDefinition$User | null;
};

type ChildRelationships$ContentTagSubscription = {
  //
};

interface SObjectDefinition$ContentTagSubscription extends SObjectDefinition<'ContentTagSubscription'> {
    Name: 'ContentTagSubscription';
    Fields: Fields$ContentTagSubscription;
    ParentReferences: ParentReferences$ContentTagSubscription;
    ChildRelationships: ChildRelationships$ContentTagSubscription;
  }

type Fields$ContentUserSubscription = {
  //
  Id: string;
  SubscriberUserId: string;
  SubscribedToUserId: string;
};

type ParentReferences$ContentUserSubscription = {
  //
  SubscriberUser: SObjectDefinition$User;
  SubscribedToUser: SObjectDefinition$User;
};

type ChildRelationships$ContentUserSubscription = {
  //
};

interface SObjectDefinition$ContentUserSubscription extends SObjectDefinition<'ContentUserSubscription'> {
    Name: 'ContentUserSubscription';
    Fields: Fields$ContentUserSubscription;
    ParentReferences: ParentReferences$ContentUserSubscription;
    ChildRelationships: ChildRelationships$ContentUserSubscription;
  }

type Fields$ContentVersion = {
  //
  Id: string;
  ContentDocumentId: string;
  IsLatest: boolean;
  ContentUrl: string | null;
  ContentBodyId: string | null;
  VersionNumber: string | null;
  Title: string;
  Description: string | null;
  ReasonForChange: string | null;
  SharingOption: string;
  SharingPrivacy: string;
  PathOnClient: string | null;
  RatingCount: number | null;
  IsDeleted: boolean;
  ContentModifiedDate: DateString | null;
  ContentModifiedById: string | null;
  PositiveRatingCount: number | null;
  NegativeRatingCount: number | null;
  FeaturedContentBoost: number | null;
  FeaturedContentDate: DateString | null;
  OwnerId: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  TagCsv: string | null;
  FileType: string;
  PublishStatus: string;
  VersionData: BlobString | null;
  ContentSize: number | null;
  FileExtension: string | null;
  FirstPublishLocationId: string | null;
  Origin: string;
  ContentLocation: string;
  TextPreview: string | null;
  ExternalDocumentInfo1: string | null;
  ExternalDocumentInfo2: string | null;
  ExternalDataSourceId: string | null;
  Checksum: string | null;
  IsMajorVersion: boolean;
  IsAssetEnabled: boolean;
  Type__c: string | null;
  Bullhorn_ID__c: string | null;
};

type ParentReferences$ContentVersion = {
  //
  ContentDocument: SObjectDefinition$ContentDocument;
  ContentBody: SObjectDefinition$ContentBody | null;
  ContentModifiedBy: SObjectDefinition$User | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  FirstPublishLocation: SObjectDefinition$Name | null;
  ExternalDataSource: SObjectDefinition$ExternalDataSource | null;
};

type ChildRelationships$ContentVersion = {
  //
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  Histories: SObjectDefinition$ContentVersionHistory;
};

interface SObjectDefinition$ContentVersion extends SObjectDefinition<'ContentVersion'> {
    Name: 'ContentVersion';
    Fields: Fields$ContentVersion;
    ParentReferences: ParentReferences$ContentVersion;
    ChildRelationships: ChildRelationships$ContentVersion;
  }

type Fields$ContentVersionComment = {
  //
  Id: string;
  ContentDocumentId: string;
  ContentVersionId: string;
  UserComment: string | null;
  CreatedDate: DateString;
};

type ParentReferences$ContentVersionComment = {
  //
  ContentDocument: SObjectDefinition$ContentDocument;
  ContentVersion: SObjectDefinition$ContentVersion;
};

type ChildRelationships$ContentVersionComment = {
  //
};

interface SObjectDefinition$ContentVersionComment extends SObjectDefinition<'ContentVersionComment'> {
    Name: 'ContentVersionComment';
    Fields: Fields$ContentVersionComment;
    ParentReferences: ParentReferences$ContentVersionComment;
    ChildRelationships: ChildRelationships$ContentVersionComment;
  }

type Fields$ContentVersionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContentVersionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContentVersionHistory = {
  //
  ContentVersion: SObjectDefinition$ContentVersion;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentVersionHistory = {
  //
};

interface SObjectDefinition$ContentVersionHistory extends SObjectDefinition<'ContentVersionHistory'> {
    Name: 'ContentVersionHistory';
    Fields: Fields$ContentVersionHistory;
    ParentReferences: ParentReferences$ContentVersionHistory;
    ChildRelationships: ChildRelationships$ContentVersionHistory;
  }

type Fields$ContentVersionRating = {
  //
  Id: string;
  UserId: string;
  ContentVersionId: string;
  Rating: number | null;
  UserComment: string | null;
  LastModifiedDate: DateString;
};

type ParentReferences$ContentVersionRating = {
  //
  User: SObjectDefinition$User;
  ContentVersion: SObjectDefinition$ContentVersion;
};

type ChildRelationships$ContentVersionRating = {
  //
};

interface SObjectDefinition$ContentVersionRating extends SObjectDefinition<'ContentVersionRating'> {
    Name: 'ContentVersionRating';
    Fields: Fields$ContentVersionRating;
    ParentReferences: ParentReferences$ContentVersionRating;
    ChildRelationships: ChildRelationships$ContentVersionRating;
  }

type Fields$ContentWorkspace = {
  //
  Id: string;
  Name: string;
  Description: string | null;
  TagModel: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastModifiedDate: DateString;
  DefaultRecordTypeId: string | null;
  IsRestrictContentTypes: boolean;
  IsRestrictLinkedContentTypes: boolean;
  WorkspaceType: string | null;
  ShouldAddCreatorMembership: boolean;
  LastWorkspaceActivityDate: DateString | null;
  RootContentFolderId: string | null;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  WorkspaceImageId: string | null;
};

type ParentReferences$ContentWorkspace = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  WorkspaceImage: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$ContentWorkspace = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContentFolderLinks: SObjectDefinition$ContentFolderLink;
  ContentWorkspaceMembers: SObjectDefinition$ContentWorkspaceMember;
};

interface SObjectDefinition$ContentWorkspace extends SObjectDefinition<'ContentWorkspace'> {
    Name: 'ContentWorkspace';
    Fields: Fields$ContentWorkspace;
    ParentReferences: ParentReferences$ContentWorkspace;
    ChildRelationships: ChildRelationships$ContentWorkspace;
  }

type Fields$ContentWorkspaceDoc = {
  //
  Id: string;
  ContentWorkspaceId: string;
  ContentDocumentId: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  IsOwner: boolean;
  IsDeleted: boolean;
};

type ParentReferences$ContentWorkspaceDoc = {
  //
  ContentWorkspace: SObjectDefinition$ContentWorkspace;
  ContentDocument: SObjectDefinition$ContentDocument;
};

type ChildRelationships$ContentWorkspaceDoc = {
  //
};

interface SObjectDefinition$ContentWorkspaceDoc extends SObjectDefinition<'ContentWorkspaceDoc'> {
    Name: 'ContentWorkspaceDoc';
    Fields: Fields$ContentWorkspaceDoc;
    ParentReferences: ParentReferences$ContentWorkspaceDoc;
    ChildRelationships: ChildRelationships$ContentWorkspaceDoc;
  }

type Fields$ContentWorkspaceMember = {
  //
  Id: string;
  ContentWorkspaceId: string;
  ContentWorkspacePermissionId: string | null;
  MemberId: string;
  MemberType: string | null;
  CreatedById: string;
  CreatedDate: DateString;
};

type ParentReferences$ContentWorkspaceMember = {
  //
  ContentWorkspace: SObjectDefinition$ContentWorkspace;
  ContentWorkspacePermission: SObjectDefinition$ContentWorkspacePermission | null;
  Member: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentWorkspaceMember = {
  //
};

interface SObjectDefinition$ContentWorkspaceMember extends SObjectDefinition<'ContentWorkspaceMember'> {
    Name: 'ContentWorkspaceMember';
    Fields: Fields$ContentWorkspaceMember;
    ParentReferences: ParentReferences$ContentWorkspaceMember;
    ChildRelationships: ChildRelationships$ContentWorkspaceMember;
  }

type Fields$ContentWorkspacePermission = {
  //
  Id: string;
  Name: string;
  Type: string | null;
  PermissionsManageWorkspace: boolean;
  PermissionsAddContent: boolean;
  PermissionsAddContentOBO: boolean;
  PermissionsArchiveContent: boolean;
  PermissionsDeleteContent: boolean;
  PermissionsFeatureContent: boolean;
  PermissionsViewComments: boolean;
  PermissionsAddComment: boolean;
  PermissionsModifyComments: boolean;
  PermissionsTagContent: boolean;
  PermissionsDeliverContent: boolean;
  PermissionsChatterSharing: boolean;
  PermissionsOrganizeFileAndFolder: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  LastModifiedById: string;
  Description: string | null;
};

type ParentReferences$ContentWorkspacePermission = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContentWorkspacePermission = {
  //
};

interface SObjectDefinition$ContentWorkspacePermission extends SObjectDefinition<'ContentWorkspacePermission'> {
    Name: 'ContentWorkspacePermission';
    Fields: Fields$ContentWorkspacePermission;
    ParentReferences: ParentReferences$ContentWorkspacePermission;
    ChildRelationships: ChildRelationships$ContentWorkspacePermission;
  }

type Fields$ContentWorkspaceSubscription = {
  //
  Id: string;
  UserId: string;
  ContentWorkspaceId: string;
};

type ParentReferences$ContentWorkspaceSubscription = {
  //
  User: SObjectDefinition$User;
  ContentWorkspace: SObjectDefinition$ContentWorkspace;
};

type ChildRelationships$ContentWorkspaceSubscription = {
  //
};

interface SObjectDefinition$ContentWorkspaceSubscription extends SObjectDefinition<'ContentWorkspaceSubscription'> {
    Name: 'ContentWorkspaceSubscription';
    Fields: Fields$ContentWorkspaceSubscription;
    ParentReferences: ParentReferences$ContentWorkspaceSubscription;
    ChildRelationships: ChildRelationships$ContentWorkspaceSubscription;
  }

type Fields$Contract = {
  //
  Id: string;
  AccountId: string;
  Pricebook2Id: string | null;
  OwnerExpirationNotice: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingStateCode: string | null;
  BillingCountryCode: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingStateCode: string | null;
  ShippingCountryCode: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  ContractTerm: number | null;
  OwnerId: string;
  Status: string;
  CompanySignedId: string | null;
  CompanySignedDate: DateString | null;
  CustomerSignedId: string | null;
  CustomerSignedTitle: string | null;
  CustomerSignedDate: DateString | null;
  SpecialTerms: string | null;
  ActivatedById: string | null;
  ActivatedDate: DateString | null;
  StatusCode: string;
  Description: string | null;
  IsDeleted: boolean;
  ContractNumber: string;
  LastApprovedDate: DateString | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  ActivityMetricId: string | null;
  ActivityMetricRollupId: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Contract_Type__c: string | null;
};

type ParentReferences$Contract = {
  //
  Account: SObjectDefinition$Account;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  Owner: SObjectDefinition$User;
  CompanySigned: SObjectDefinition$User | null;
  CustomerSigned: SObjectDefinition$Contact | null;
  ActivatedBy: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ActivityMetric: SObjectDefinition$ActivityMetric | null;
  ActivityMetricRollup: SObjectDefinition$ActivityMetricRollup | null;
};

type ChildRelationships$Contract = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Approvals: SObjectDefinition$Approval;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractContactRoles: SObjectDefinition$ContractContactRole;
  Feeds: SObjectDefinition$ContractFeed;
  Histories: SObjectDefinition$ContractHistory;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Opportunities: SObjectDefinition$Opportunity;
  Orders: SObjectDefinition$Order;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Quotes: SObjectDefinition$Quote;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Contract extends SObjectDefinition<'Contract'> {
    Name: 'Contract';
    Fields: Fields$Contract;
    ParentReferences: ParentReferences$Contract;
    ChildRelationships: ChildRelationships$Contract;
  }

type Fields$ContractChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  AccountId: string | null;
  Pricebook2Id: string | null;
  OwnerExpirationNotice: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingStateCode: string | null;
  BillingCountryCode: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingStateCode: string | null;
  ShippingCountryCode: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  ContractTerm: number | null;
  OwnerId: string | null;
  Status: string | null;
  CompanySignedId: string | null;
  CompanySignedDate: DateString | null;
  CustomerSignedId: string | null;
  CustomerSignedTitle: string | null;
  CustomerSignedDate: DateString | null;
  SpecialTerms: string | null;
  ActivatedById: string | null;
  ActivatedDate: DateString | null;
  StatusCode: string | null;
  Description: string | null;
  ContractNumber: string;
  LastApprovedDate: DateString | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Contract_Type__c: string | null;
};

type ParentReferences$ContractChangeEvent = {
  //
};

type ChildRelationships$ContractChangeEvent = {
  //
};

interface SObjectDefinition$ContractChangeEvent extends SObjectDefinition<'ContractChangeEvent'> {
    Name: 'ContractChangeEvent';
    Fields: Fields$ContractChangeEvent;
    ParentReferences: ParentReferences$ContractChangeEvent;
    ChildRelationships: ChildRelationships$ContractChangeEvent;
  }

type Fields$ContractContactRole = {
  //
  Id: string;
  ContractId: string;
  ContactId: string;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$ContractContactRole = {
  //
  Contract: SObjectDefinition$Contract;
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContractContactRole = {
  //
};

interface SObjectDefinition$ContractContactRole extends SObjectDefinition<'ContractContactRole'> {
    Name: 'ContractContactRole';
    Fields: Fields$ContractContactRole;
    ParentReferences: ParentReferences$ContractContactRole;
    ChildRelationships: ChildRelationships$ContractContactRole;
  }

type Fields$ContractFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ContractFeed = {
  //
  Parent: SObjectDefinition$Contract;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ContractFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ContractFeed extends SObjectDefinition<'ContractFeed'> {
    Name: 'ContractFeed';
    Fields: Fields$ContractFeed;
    ParentReferences: ParentReferences$ContractFeed;
    ChildRelationships: ChildRelationships$ContractFeed;
  }

type Fields$ContractHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ContractId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ContractHistory = {
  //
  Contract: SObjectDefinition$Contract;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ContractHistory = {
  //
};

interface SObjectDefinition$ContractHistory extends SObjectDefinition<'ContractHistory'> {
    Name: 'ContractHistory';
    Fields: Fields$ContractHistory;
    ParentReferences: ParentReferences$ContractHistory;
    ChildRelationships: ChildRelationships$ContractHistory;
  }

type Fields$ContractStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  StatusCode: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$ContractStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ContractStatus = {
  //
};

interface SObjectDefinition$ContractStatus extends SObjectDefinition<'ContractStatus'> {
    Name: 'ContractStatus';
    Fields: Fields$ContractStatus;
    ParentReferences: ParentReferences$ContractStatus;
    ChildRelationships: ChildRelationships$ContractStatus;
  }

type Fields$Contractor_Xchange_Portal_Settings__mdt = {
  //
  Id: string;
  DeveloperName: string;
  MasterLabel: string;
  Language: string;
  NamespacePrefix: string | null;
  Label: string | null;
  QualifiedApiName: string | null;
  Allowed_Domains__c: string | null;
  Request_Interview_Emails__c: string | null;
  Technologies__c: string | null;
  Google_Auth_Key__c: string | null;
  MS_Client_Id__c: string | null;
  Recaptcha_Site_Key__c: string | null;
  From_Email__c: string | null;
};

type ParentReferences$Contractor_Xchange_Portal_Settings__mdt = {
  //
};

type ChildRelationships$Contractor_Xchange_Portal_Settings__mdt = {
  //
};

interface SObjectDefinition$Contractor_Xchange_Portal_Settings__mdt extends SObjectDefinition<'Contractor_Xchange_Portal_Settings__mdt'> {
    Name: 'Contractor_Xchange_Portal_Settings__mdt';
    Fields: Fields$Contractor_Xchange_Portal_Settings__mdt;
    ParentReferences: ParentReferences$Contractor_Xchange_Portal_Settings__mdt;
    ChildRelationships: ChildRelationships$Contractor_Xchange_Portal_Settings__mdt;
  }

type Fields$CorsWhitelistEntry = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UrlPattern: string;
};

type ParentReferences$CorsWhitelistEntry = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CorsWhitelistEntry = {
  //
};

interface SObjectDefinition$CorsWhitelistEntry extends SObjectDefinition<'CorsWhitelistEntry'> {
    Name: 'CorsWhitelistEntry';
    Fields: Fields$CorsWhitelistEntry;
    ParentReferences: ParentReferences$CorsWhitelistEntry;
    ChildRelationships: ChildRelationships$CorsWhitelistEntry;
  }

type Fields$CronJobDetail = {
  //
  Id: string;
  Name: string;
  JobType: string | null;
};

type ParentReferences$CronJobDetail = {
  //
};

type ChildRelationships$CronJobDetail = {
  //
};

interface SObjectDefinition$CronJobDetail extends SObjectDefinition<'CronJobDetail'> {
    Name: 'CronJobDetail';
    Fields: Fields$CronJobDetail;
    ParentReferences: ParentReferences$CronJobDetail;
    ChildRelationships: ChildRelationships$CronJobDetail;
  }

type Fields$CronTrigger = {
  //
  Id: string;
  CronJobDetailId: string | null;
  NextFireTime: DateString | null;
  PreviousFireTime: DateString | null;
  State: string | null;
  StartTime: DateString | null;
  EndTime: DateString | null;
  CronExpression: string | null;
  TimeZoneSidKey: string | null;
  OwnerId: string | null;
  LastModifiedById: string;
  CreatedById: string;
  CreatedDate: DateString;
  TimesTriggered: number | null;
};

type ParentReferences$CronTrigger = {
  //
  CronJobDetail: SObjectDefinition$CronJobDetail | null;
  LastModifiedBy: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$CronTrigger = {
  //
};

interface SObjectDefinition$CronTrigger extends SObjectDefinition<'CronTrigger'> {
    Name: 'CronTrigger';
    Fields: Fields$CronTrigger;
    ParentReferences: ParentReferences$CronTrigger;
    ChildRelationships: ChildRelationships$CronTrigger;
  }

type Fields$CspTrustedSite = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  EndpointUrl: string;
  Description: string | null;
  IsActive: boolean;
  Context: string;
  IsApplicableToConnectSrc: boolean;
  IsApplicableToFrameSrc: boolean;
  IsApplicableToImgSrc: boolean;
  IsApplicableToStyleSrc: boolean;
  IsApplicableToFontSrc: boolean;
  IsApplicableToMediaSrc: boolean;
};

type ParentReferences$CspTrustedSite = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CspTrustedSite = {
  //
};

interface SObjectDefinition$CspTrustedSite extends SObjectDefinition<'CspTrustedSite'> {
    Name: 'CspTrustedSite';
    Fields: Fields$CspTrustedSite;
    ParentReferences: ParentReferences$CspTrustedSite;
    ChildRelationships: ChildRelationships$CspTrustedSite;
  }

type Fields$CustomBrand = {
  //
  Id: string;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$CustomBrand = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CustomBrand = {
  //
  CustomBrandAssets: SObjectDefinition$CustomBrandAsset;
};

interface SObjectDefinition$CustomBrand extends SObjectDefinition<'CustomBrand'> {
    Name: 'CustomBrand';
    Fields: Fields$CustomBrand;
    ParentReferences: ParentReferences$CustomBrand;
    ChildRelationships: ChildRelationships$CustomBrand;
  }

type Fields$CustomBrandAsset = {
  //
  Id: string;
  CustomBrandId: string;
  AssetCategory: string;
  TextAsset: string | null;
  AssetSourceId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$CustomBrandAsset = {
  //
  CustomBrand: SObjectDefinition$CustomBrand;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CustomBrandAsset = {
  //
};

interface SObjectDefinition$CustomBrandAsset extends SObjectDefinition<'CustomBrandAsset'> {
    Name: 'CustomBrandAsset';
    Fields: Fields$CustomBrandAsset;
    ParentReferences: ParentReferences$CustomBrandAsset;
    ChildRelationships: ChildRelationships$CustomBrandAsset;
  }

type Fields$CustomHelpMenuItem = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  MasterLabel: string;
  LinkUrl: string;
  SortOrder: number;
};

type ParentReferences$CustomHelpMenuItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$CustomHelpMenuSection;
};

type ChildRelationships$CustomHelpMenuItem = {
  //
};

interface SObjectDefinition$CustomHelpMenuItem extends SObjectDefinition<'CustomHelpMenuItem'> {
    Name: 'CustomHelpMenuItem';
    Fields: Fields$CustomHelpMenuItem;
    ParentReferences: ParentReferences$CustomHelpMenuItem;
    ChildRelationships: ChildRelationships$CustomHelpMenuItem;
  }

type Fields$CustomHelpMenuSection = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$CustomHelpMenuSection = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CustomHelpMenuSection = {
  //
};

interface SObjectDefinition$CustomHelpMenuSection extends SObjectDefinition<'CustomHelpMenuSection'> {
    Name: 'CustomHelpMenuSection';
    Fields: Fields$CustomHelpMenuSection;
    ParentReferences: ParentReferences$CustomHelpMenuSection;
    ChildRelationships: ChildRelationships$CustomHelpMenuSection;
  }

type Fields$CustomHttpHeader = {
  //
  Id: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  HeaderFieldName: string;
  HeaderFieldValue: string;
  IsActive: boolean;
  Description: string | null;
};

type ParentReferences$CustomHttpHeader = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name;
};

type ChildRelationships$CustomHttpHeader = {
  //
};

interface SObjectDefinition$CustomHttpHeader extends SObjectDefinition<'CustomHttpHeader'> {
    Name: 'CustomHttpHeader';
    Fields: Fields$CustomHttpHeader;
    ParentReferences: ParentReferences$CustomHttpHeader;
    ChildRelationships: ChildRelationships$CustomHttpHeader;
  }

type Fields$CustomNotificationType = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CustomNotifTypeName: string;
  Description: string | null;
  Desktop: boolean;
  Mobile: boolean;
};

type ParentReferences$CustomNotificationType = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CustomNotificationType = {
  //
};

interface SObjectDefinition$CustomNotificationType extends SObjectDefinition<'CustomNotificationType'> {
    Name: 'CustomNotificationType';
    Fields: Fields$CustomNotificationType;
    ParentReferences: ParentReferences$CustomNotificationType;
    ChildRelationships: ChildRelationships$CustomNotificationType;
  }

type Fields$CustomObjectUserLicenseMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserLicenseId: string;
  CustomObjectId: string | null;
  SystemModstamp: DateString;
  CustomObjectType: string | null;
  CustomObjectName: string | null;
  ObjectCount: number | null;
};

type ParentReferences$CustomObjectUserLicenseMetrics = {
  //
  UserLicense: SObjectDefinition$UserLicense;
};

type ChildRelationships$CustomObjectUserLicenseMetrics = {
  //
};

interface SObjectDefinition$CustomObjectUserLicenseMetrics extends SObjectDefinition<'CustomObjectUserLicenseMetrics'> {
    Name: 'CustomObjectUserLicenseMetrics';
    Fields: Fields$CustomObjectUserLicenseMetrics;
    ParentReferences: ParentReferences$CustomObjectUserLicenseMetrics;
    ChildRelationships: ChildRelationships$CustomObjectUserLicenseMetrics;
  }

type Fields$CustomPermission = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  IsProtected: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
  IsLicensed: boolean;
};

type ParentReferences$CustomPermission = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$CustomPermission = {
  //
  CustomPermissionItem: SObjectDefinition$CustomPermissionDependency;
  CustomPermissionDependencyItem: SObjectDefinition$CustomPermissionDependency;
  GrantedByLicenses: SObjectDefinition$GrantedByLicense;
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$CustomPermission extends SObjectDefinition<'CustomPermission'> {
    Name: 'CustomPermission';
    Fields: Fields$CustomPermission;
    ParentReferences: ParentReferences$CustomPermission;
    ChildRelationships: ChildRelationships$CustomPermission;
  }

type Fields$CustomPermissionDependency = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CustomPermissionId: string;
  RequiredCustomPermissionId: string;
};

type ParentReferences$CustomPermissionDependency = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CustomPermission: SObjectDefinition$CustomPermission;
  RequiredCustomPermission: SObjectDefinition$CustomPermission;
};

type ChildRelationships$CustomPermissionDependency = {
  //
};

interface SObjectDefinition$CustomPermissionDependency extends SObjectDefinition<'CustomPermissionDependency'> {
    Name: 'CustomPermissionDependency';
    Fields: Fields$CustomPermissionDependency;
    ParentReferences: ParentReferences$CustomPermissionDependency;
    ChildRelationships: ChildRelationships$CustomPermissionDependency;
  }

type Fields$DSCORGPKG__AutoUpdateSettings__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__AccountBatchUpdate__c: boolean;
  DSCORGPKG__AlwaysDisplayAccountIntermediatePage__c: boolean;
  DSCORGPKG__Append_And_Clean_Last_Run_Account__c: string | null;
  DSCORGPKG__Append_And_Clean_Last_Run_Contact__c: string | null;
  DSCORGPKG__Append_And_Clean_Last_Run_Lead__c: string | null;
  DSCORGPKG__ContactBatchUpdate__c: boolean;
  DSCORGPKG__CreateNewLeads__c: boolean;
  DSCORGPKG__Do_not_Allow_Contacts_without_Accounts__c: boolean;
  DSCORGPKG__Enable_Automatic_Weekly_Update__c: boolean;
  DSCORGPKG__Enable_Technology_Imports__c: boolean;
  DSCORGPKG__LeadBatchUpdate__c: boolean;
  DSCORGPKG__Legacy_Triggers_Category__c: string | null;
  DSCORGPKG__OppAlertDeleteDate__c: string | null;
  DSCORGPKG__OppAlert_ContributoryTopics__c: string | null;
  DSCORGPKG__OppAlert_OpportunityType__c: string | null;
  DSCORGPKG__Remove_Inactive_Technologies__c: boolean;
  DSCORGPKG__Search_By_Website__c: boolean;
  DSCORGPKG__Search_Type__c: string | null;
  DSCORGPKG__Selected_Technology__c: string | null;
  DSCORGPKG__Tiggers_Category__c: string | null;
  DSCORGPKG__Tiggers_Department__c: string | null;
  DSCORGPKG__TriggerDeleteDate__c: string | null;
  DSCORGPKG__Trigger_Type__c: string | null;
  DSCORGPKG__Triggers_Topics_Category__c: string | null;
  DSCORGPKG__UpdateAccountFieldsifNULL__c: boolean;
  DSCORGPKG__UpdateContactFieldsIfNULL__c: boolean;
  DSCORGPKG__UpdateLeadFieldsifNULL__c: boolean;
  DSCORGPKG__customAccountField__c: string | null;
  DSCORGPKG__customContactField__c: string | null;
  DSCORGPKG__customLeadField__c: string | null;
  DSCORGPKG__disableAccountObjectInsert__c: boolean;
  DSCORGPKG__disableAccountObject__c: boolean;
  DSCORGPKG__disableContactObjectInsert__c: boolean;
  DSCORGPKG__disableContactObject__c: boolean;
  DSCORGPKG__disableLeadObjectInsert__c: boolean;
  DSCORGPKG__disableLeadObject__c: boolean;
  DSCORGPKG__isAccountTriggerRecImport__c: boolean;
  DSCORGPKG__isAppendnCleanSchedule__c: boolean;
  DSCORGPKG__isCheckAddUpdateAllCompsAndContacts__c: boolean;
  DSCORGPKG__isCheckAddUpdateAll__c: boolean;
  DSCORGPKG__isCheckAddUpdateCompanyandContacts__c: boolean;
  DSCORGPKG__isContactTriggerRecImport__c: boolean;
  DSCORGPKG__isCustomFieldAccount__c: boolean;
  DSCORGPKG__isCustomFieldContact__c: boolean;
  DSCORGPKG__isCustomFieldLead__c: boolean;
  DSCORGPKG__isDeleteOppAlerts__c: boolean;
  DSCORGPKG__isDeleteTriggers__c: boolean;
  DSCORGPKG__isDuplicateCheckContacts__c: boolean;
  DSCORGPKG__isDuplicateCheckLeads__c: boolean;
  DSCORGPKG__isExportCSVCheck__c: boolean;
  DSCORGPKG__isLeadTriggerRecImport__c: boolean;
  DSCORGPKG__isOppAlertsRecImport__c: boolean;
  DSCORGPKG__isOwnerChange__c: boolean;
  DSCORGPKG__isPersonnelTrigger__c: boolean;
  DSCORGPKG__isPreventConflict__c: boolean;
  DSCORGPKG__isProjectTrigger__c: boolean;
  DSCORGPKG__scheduleDeleteConflict__c: string | null;
  DSCORGPKG__scheduleDeleteHistory__c: string | null;
};

type ParentReferences$DSCORGPKG__AutoUpdateSettings__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__AutoUpdateSettings__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__AutoUpdateSettings__ChangeEvent extends SObjectDefinition<'DSCORGPKG__AutoUpdateSettings__ChangeEvent'> {
    Name: 'DSCORGPKG__AutoUpdateSettings__ChangeEvent';
    Fields: Fields$DSCORGPKG__AutoUpdateSettings__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__AutoUpdateSettings__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__AutoUpdateSettings__ChangeEvent;
  }

type Fields$DSCORGPKG__AutoUpdateSettings__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__AccountBatchUpdate__c: boolean;
  DSCORGPKG__AlwaysDisplayAccountIntermediatePage__c: boolean;
  DSCORGPKG__Append_And_Clean_Last_Run_Account__c: string | null;
  DSCORGPKG__Append_And_Clean_Last_Run_Contact__c: string | null;
  DSCORGPKG__Append_And_Clean_Last_Run_Lead__c: string | null;
  DSCORGPKG__ContactBatchUpdate__c: boolean;
  DSCORGPKG__CreateNewLeads__c: boolean;
  DSCORGPKG__Do_not_Allow_Contacts_without_Accounts__c: boolean;
  DSCORGPKG__Enable_Automatic_Weekly_Update__c: boolean;
  DSCORGPKG__Enable_Technology_Imports__c: boolean;
  DSCORGPKG__LeadBatchUpdate__c: boolean;
  DSCORGPKG__Legacy_Triggers_Category__c: string | null;
  DSCORGPKG__OppAlertDeleteDate__c: string | null;
  DSCORGPKG__OppAlert_ContributoryTopics__c: string | null;
  DSCORGPKG__OppAlert_OpportunityType__c: string | null;
  DSCORGPKG__Remove_Inactive_Technologies__c: boolean;
  DSCORGPKG__Search_By_Website__c: boolean;
  DSCORGPKG__Search_Type__c: string | null;
  DSCORGPKG__Selected_Technology__c: string | null;
  DSCORGPKG__Tiggers_Category__c: string | null;
  DSCORGPKG__Tiggers_Department__c: string | null;
  DSCORGPKG__TriggerDeleteDate__c: string | null;
  DSCORGPKG__Trigger_Type__c: string | null;
  DSCORGPKG__Triggers_Topics_Category__c: string | null;
  DSCORGPKG__UpdateAccountFieldsifNULL__c: boolean;
  DSCORGPKG__UpdateContactFieldsIfNULL__c: boolean;
  DSCORGPKG__UpdateLeadFieldsifNULL__c: boolean;
  DSCORGPKG__customAccountField__c: string | null;
  DSCORGPKG__customContactField__c: string | null;
  DSCORGPKG__customLeadField__c: string | null;
  DSCORGPKG__disableAccountObjectInsert__c: boolean;
  DSCORGPKG__disableAccountObject__c: boolean;
  DSCORGPKG__disableContactObjectInsert__c: boolean;
  DSCORGPKG__disableContactObject__c: boolean;
  DSCORGPKG__disableLeadObjectInsert__c: boolean;
  DSCORGPKG__disableLeadObject__c: boolean;
  DSCORGPKG__isAccountTriggerRecImport__c: boolean;
  DSCORGPKG__isAppendnCleanSchedule__c: boolean;
  DSCORGPKG__isCheckAddUpdateAllCompsAndContacts__c: boolean;
  DSCORGPKG__isCheckAddUpdateAll__c: boolean;
  DSCORGPKG__isCheckAddUpdateCompanyandContacts__c: boolean;
  DSCORGPKG__isContactTriggerRecImport__c: boolean;
  DSCORGPKG__isCustomFieldAccount__c: boolean;
  DSCORGPKG__isCustomFieldContact__c: boolean;
  DSCORGPKG__isCustomFieldLead__c: boolean;
  DSCORGPKG__isDeleteOppAlerts__c: boolean;
  DSCORGPKG__isDeleteTriggers__c: boolean;
  DSCORGPKG__isDuplicateCheckContacts__c: boolean;
  DSCORGPKG__isDuplicateCheckLeads__c: boolean;
  DSCORGPKG__isExportCSVCheck__c: boolean;
  DSCORGPKG__isLeadTriggerRecImport__c: boolean;
  DSCORGPKG__isOppAlertsRecImport__c: boolean;
  DSCORGPKG__isOwnerChange__c: boolean;
  DSCORGPKG__isPersonnelTrigger__c: boolean;
  DSCORGPKG__isPreventConflict__c: boolean;
  DSCORGPKG__isProjectTrigger__c: boolean;
  DSCORGPKG__scheduleDeleteConflict__c: string | null;
  DSCORGPKG__scheduleDeleteHistory__c: string | null;
};

type ParentReferences$DSCORGPKG__AutoUpdateSettings__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__AutoUpdateSettings__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__AutoUpdateSettings__c extends SObjectDefinition<'DSCORGPKG__AutoUpdateSettings__c'> {
    Name: 'DSCORGPKG__AutoUpdateSettings__c';
    Fields: Fields$DSCORGPKG__AutoUpdateSettings__c;
    ParentReferences: ParentReferences$DSCORGPKG__AutoUpdateSettings__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__AutoUpdateSettings__c;
  }

type Fields$DSCORGPKG__ConflictField__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Conflict__c: string | null;
  DSCORGPKG__Name__c: string | null;
  DSCORGPKG__NumericalValue__c: number | null;
  DSCORGPKG__TextValue__c: string | null;
  DSCORGPKG__Type__c: string | null;
  DSCORGPKG__Value__c: string | null;
};

type ParentReferences$DSCORGPKG__ConflictField__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__ConflictField__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__ConflictField__ChangeEvent extends SObjectDefinition<'DSCORGPKG__ConflictField__ChangeEvent'> {
    Name: 'DSCORGPKG__ConflictField__ChangeEvent';
    Fields: Fields$DSCORGPKG__ConflictField__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__ConflictField__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__ConflictField__ChangeEvent;
  }

type Fields$DSCORGPKG__ConflictField__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Conflict__c: string | null;
  DSCORGPKG__Name__c: string | null;
  DSCORGPKG__NumericalValue__c: number | null;
  DSCORGPKG__TextValue__c: string | null;
  DSCORGPKG__Type__c: string | null;
  DSCORGPKG__Value__c: string | null;
};

type ParentReferences$DSCORGPKG__ConflictField__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DSCORGPKG__Conflict__r: SObjectDefinition$DSCORGPKG__Conflict__c | null;
};

type ChildRelationships$DSCORGPKG__ConflictField__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__ConflictField__c extends SObjectDefinition<'DSCORGPKG__ConflictField__c'> {
    Name: 'DSCORGPKG__ConflictField__c';
    Fields: Fields$DSCORGPKG__ConflictField__c;
    ParentReferences: ParentReferences$DSCORGPKG__ConflictField__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__ConflictField__c;
  }

type Fields$DSCORGPKG__Conflict__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Contact__c: string | null;
  DSCORGPKG__DiscoverOrg_Operation__c: string | null;
  DSCORGPKG__Lead__c: string | null;
  DSCORGPKG__SalesForceAccount__c: string | null;
};

type ParentReferences$DSCORGPKG__Conflict__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__Conflict__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__Conflict__ChangeEvent extends SObjectDefinition<'DSCORGPKG__Conflict__ChangeEvent'> {
    Name: 'DSCORGPKG__Conflict__ChangeEvent';
    Fields: Fields$DSCORGPKG__Conflict__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__Conflict__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__Conflict__ChangeEvent;
  }

type Fields$DSCORGPKG__Conflict__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DSCORGPKG__Contact__c: string | null;
  DSCORGPKG__DiscoverOrg_Operation__c: string | null;
  DSCORGPKG__Lead__c: string | null;
  DSCORGPKG__SalesForceAccount__c: string | null;
};

type ParentReferences$DSCORGPKG__Conflict__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DSCORGPKG__Contact__r: SObjectDefinition$Contact | null;
  DSCORGPKG__DiscoverOrg_Operation__r: SObjectDefinition$DSCORGPKG__DiscoverOrg_Operation__c | null;
  DSCORGPKG__Lead__r: SObjectDefinition$Lead | null;
  DSCORGPKG__SalesForceAccount__r: SObjectDefinition$Account | null;
};

type ChildRelationships$DSCORGPKG__Conflict__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__Conflict__c extends SObjectDefinition<'DSCORGPKG__Conflict__c'> {
    Name: 'DSCORGPKG__Conflict__c';
    Fields: Fields$DSCORGPKG__Conflict__c;
    ParentReferences: ParentReferences$DSCORGPKG__Conflict__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__Conflict__c;
  }

type Fields$DSCORGPKG__DiscoverOrgResults__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Address__c: string | null;
  DSCORGPKG__Employees__c: number | null;
  DSCORGPKG__Name__c: string | null;
  DSCORGPKG__Revenue__c: number | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrgResults__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__DiscoverOrgResults__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrgResults__ChangeEvent extends SObjectDefinition<'DSCORGPKG__DiscoverOrgResults__ChangeEvent'> {
    Name: 'DSCORGPKG__DiscoverOrgResults__ChangeEvent';
    Fields: Fields$DSCORGPKG__DiscoverOrgResults__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrgResults__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrgResults__ChangeEvent;
  }

type Fields$DSCORGPKG__DiscoverOrgResults__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Address__c: string | null;
  DSCORGPKG__Employees__c: number | null;
  DSCORGPKG__Name__c: string;
  DSCORGPKG__Revenue__c: number | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrgResults__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__DiscoverOrgResults__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrgResults__c extends SObjectDefinition<'DSCORGPKG__DiscoverOrgResults__c'> {
    Name: 'DSCORGPKG__DiscoverOrgResults__c';
    Fields: Fields$DSCORGPKG__DiscoverOrgResults__c;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrgResults__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrgResults__c;
  }

type Fields$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Error_Messages__c: string | null;
  DSCORGPKG__Object__c: string | null;
  DSCORGPKG__Records_Failed__c: number | null;
  DSCORGPKG__Records_Submitted__c: number | null;
  DSCORGPKG__Records_Updated__c: number | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent'> {
    Name: 'DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent';
    Fields: Fields$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent;
  }

type Fields$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Error_Messages__c: string | null;
  DSCORGPKG__Object__c: string | null;
  DSCORGPKG__Records_Failed__c: number | null;
  DSCORGPKG__Records_Submitted__c: number | null;
  DSCORGPKG__Records_Updated__c: number | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c'> {
    Name: 'DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c';
    Fields: Fields$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c;
  }

type Fields$DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Add__c: boolean;
  DSCORGPKG__BlankOnly__c: boolean;
  DSCORGPKG__Default_Salesforce_Field__c: string | null;
  DSCORGPKG__DiscoverOrg_Field__c: string | null;
  DSCORGPKG__NightlyJob__c: boolean;
  DSCORGPKG__Object_Name__c: string | null;
  DSCORGPKG__Salesforce_Field__c: string | null;
  DSCORGPKG__Update__c: boolean;
  DSCORGPKG__isConflict__c: boolean;
  DSCORGPKG__isEditable__c: boolean;
  DSCORGPKG__isVisible__c: boolean;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent'> {
    Name: 'DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent;
  }

type Fields$DSCORGPKG__DiscoverOrg_Custom_Mapping__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Add__c: boolean;
  DSCORGPKG__BlankOnly__c: boolean;
  DSCORGPKG__Default_Salesforce_Field__c: string | null;
  DSCORGPKG__DiscoverOrg_Field__c: string;
  DSCORGPKG__NightlyJob__c: boolean;
  DSCORGPKG__Object_Name__c: string | null;
  DSCORGPKG__Salesforce_Field__c: string | null;
  DSCORGPKG__Update__c: boolean;
  DSCORGPKG__isConflict__c: boolean;
  DSCORGPKG__isEditable__c: boolean;
  DSCORGPKG__isVisible__c: boolean;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Custom_Mapping__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Custom_Mapping__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Custom_Mapping__c extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Custom_Mapping__c'> {
    Name: 'DSCORGPKG__DiscoverOrg_Custom_Mapping__c';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Custom_Mapping__c;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Custom_Mapping__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Custom_Mapping__c;
  }

type Fields$DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Id__c: string | null;
  DSCORGPKG__Name__c: string | null;
  DSCORGPKG__Type__c: string | null;
  DSCORGPKG__groupId__c: number | null;
  DSCORGPKG__group__c: string | null;
  DSCORGPKG__isLegacy__c: boolean;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent'> {
    Name: 'DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent;
  }

type Fields$DSCORGPKG__DiscoverOrg_Metadata__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Id__c: string | null;
  DSCORGPKG__Name__c: string | null;
  DSCORGPKG__Type__c: string;
  DSCORGPKG__groupId__c: number | null;
  DSCORGPKG__group__c: string | null;
  DSCORGPKG__isLegacy__c: boolean;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Metadata__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Metadata__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Metadata__c extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Metadata__c'> {
    Name: 'DSCORGPKG__DiscoverOrg_Metadata__c';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Metadata__c;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Metadata__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Metadata__c;
  }

type Fields$DSCORGPKG__DiscoverOrg_Operation__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__AccountIdInline__c: string | null;
  DSCORGPKG__AccountIdsUnchange__c: string | null;
  DSCORGPKG__Account_Added_DO_ID__c: string | null;
  DSCORGPKG__Account_Added__c: number | null;
  DSCORGPKG__Account_Contact__c: string | null;
  DSCORGPKG__Account_Unchanged_DO_ID__c: string | null;
  DSCORGPKG__Account_Unchanged__c: number | null;
  DSCORGPKG__Account_Updated_DO_ID__c: string | null;
  DSCORGPKG__Account_Updated__c: number | null;
  DSCORGPKG__Account_s_Contact_DOIds__c: string | null;
  DSCORGPKG__Contact_Account_Duplicat__c: string | null;
  DSCORGPKG__Contact_Added_DO_ID__c: string | null;
  DSCORGPKG__Contact_Unchanged_DO_ID__c: string | null;
  DSCORGPKG__Contact_Unchanged__c: number | null;
  DSCORGPKG__Contact_Updated_DO_ID__c: string | null;
  DSCORGPKG__Contacts_Added__c: number | null;
  DSCORGPKG__Contacts_Updated__c: number | null;
  DSCORGPKG__Duplicates_DO_ID_Account__c: string | null;
  DSCORGPKG__Duplicates_DO_ID_Lead__c: string | null;
  DSCORGPKG__Duplicates_DO_ID__c: string | null;
  DSCORGPKG__Operation_Type__c: string | null;
  DSCORGPKG__Pages_Completed__c: number | null;
  DSCORGPKG__Search_For__c: string | null;
  DSCORGPKG__Search_Query__c: string | null;
  DSCORGPKG__Selected_Campaign__c: string | null;
  DSCORGPKG__Selected_Trigger_IDs__c: string | null;
  DSCORGPKG__Total_Batches_Completed__c: number | null;
  DSCORGPKG__Total_Batches__c: number | null;
  DSCORGPKG__Total_Records__c: number | null;
  DSCORGPKG__User__c: string | null;
  DSCORGPKG__customFieldAccount__c: string | null;
  DSCORGPKG__customFieldContact__c: string | null;
  DSCORGPKG__customFieldLead__c: string | null;
  DSCORGPKG__customValueForAccount__c: string | null;
  DSCORGPKG__customValueForContact__c: string | null;
  DSCORGPKG__customValueForLead__c: string | null;
  DSCORGPKG__isBatchesCompleted__c: boolean;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Operation__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Operation__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Operation__ChangeEvent extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Operation__ChangeEvent'> {
    Name: 'DSCORGPKG__DiscoverOrg_Operation__ChangeEvent';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Operation__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Operation__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Operation__ChangeEvent;
  }

type Fields$DSCORGPKG__DiscoverOrg_Operation__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__AccountIdInline__c: string | null;
  DSCORGPKG__AccountIdsUnchange__c: string | null;
  DSCORGPKG__Account_Added_DO_ID__c: string | null;
  DSCORGPKG__Account_Added__c: number | null;
  DSCORGPKG__Account_Contact__c: string | null;
  DSCORGPKG__Account_Unchanged_DO_ID__c: string | null;
  DSCORGPKG__Account_Unchanged__c: number | null;
  DSCORGPKG__Account_Updated_DO_ID__c: string | null;
  DSCORGPKG__Account_Updated__c: number | null;
  DSCORGPKG__Account_s_Contact_DOIds__c: string | null;
  DSCORGPKG__Contact_Account_Duplicat__c: string | null;
  DSCORGPKG__Contact_Added_DO_ID__c: string | null;
  DSCORGPKG__Contact_Unchanged_DO_ID__c: string | null;
  DSCORGPKG__Contact_Unchanged__c: number | null;
  DSCORGPKG__Contact_Updated_DO_ID__c: string | null;
  DSCORGPKG__Contacts_Added__c: number | null;
  DSCORGPKG__Contacts_Updated__c: number | null;
  DSCORGPKG__Duplicates_DO_ID_Account__c: string | null;
  DSCORGPKG__Duplicates_DO_ID_Lead__c: string | null;
  DSCORGPKG__Duplicates_DO_ID__c: string | null;
  DSCORGPKG__Operation_Type__c: string | null;
  DSCORGPKG__Pages_Completed__c: number | null;
  DSCORGPKG__Search_For__c: string | null;
  DSCORGPKG__Search_Query__c: string | null;
  DSCORGPKG__Selected_Campaign__c: string | null;
  DSCORGPKG__Selected_Trigger_IDs__c: string | null;
  DSCORGPKG__Total_Batches_Completed__c: number | null;
  DSCORGPKG__Total_Batches__c: number | null;
  DSCORGPKG__Total_Records__c: number | null;
  DSCORGPKG__User__c: string | null;
  DSCORGPKG__customFieldAccount__c: string | null;
  DSCORGPKG__customFieldContact__c: string | null;
  DSCORGPKG__customFieldLead__c: string | null;
  DSCORGPKG__customValueForAccount__c: string | null;
  DSCORGPKG__customValueForContact__c: string | null;
  DSCORGPKG__customValueForLead__c: string | null;
  DSCORGPKG__isBatchesCompleted__c: boolean;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Operation__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DSCORGPKG__User__r: SObjectDefinition$User | null;
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Operation__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Operation__c extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Operation__c'> {
    Name: 'DSCORGPKG__DiscoverOrg_Operation__c';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Operation__c;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Operation__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Operation__c;
  }

type Fields$DSCORGPKG__DiscoverOrg_Search__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Parameters__c: string | null;
  DSCORGPKG__SearchType__c: string | null;
  DSCORGPKG__Search_JSON__c: string | null;
  DSCORGPKG__ShowOnHover__c: string | null;
  DSCORGPKG__favSearchName__c: string | null;
  DSCORGPKG__isConverted__c: boolean;
  DSCORGPKG__recSearchName__c: string | null;
  DSCORGPKG__userid__c: string | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Search__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Search__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Search__ChangeEvent extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Search__ChangeEvent'> {
    Name: 'DSCORGPKG__DiscoverOrg_Search__ChangeEvent';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Search__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Search__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Search__ChangeEvent;
  }

type Fields$DSCORGPKG__DiscoverOrg_Search__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Parameters__c: string | null;
  DSCORGPKG__SearchType__c: string | null;
  DSCORGPKG__Search_JSON__c: string | null;
  DSCORGPKG__ShowOnHover__c: string | null;
  DSCORGPKG__favSearchName__c: string | null;
  DSCORGPKG__isConverted__c: boolean;
  DSCORGPKG__recSearchName__c: string | null;
  DSCORGPKG__userid__c: string | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Search__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Search__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Search__c extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Search__c'> {
    Name: 'DSCORGPKG__DiscoverOrg_Search__c';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Search__c;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Search__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Search__c;
  }

type Fields$DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Account__c: string | null;
  DSCORGPKG__Contact__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__Lead__c: string | null;
  DSCORGPKG__Technology_Category__c: string | null;
  DSCORGPKG__Technology_Status__c: string | null;
  DSCORGPKG__Technology_Vendor__c: string | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent'> {
    Name: 'DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent;
  }

type Fields$DSCORGPKG__DiscoverOrg_Technologies__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Account__c: string | null;
  DSCORGPKG__Contact__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__Lead__c: string | null;
  DSCORGPKG__Technology_Category__c: string | null;
  DSCORGPKG__Technology_Status__c: string | null;
  DSCORGPKG__Technology_Vendor__c: string | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Technologies__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DSCORGPKG__Account__r: SObjectDefinition$Account | null;
  DSCORGPKG__Contact__r: SObjectDefinition$Contact | null;
  DSCORGPKG__Lead__r: SObjectDefinition$Lead | null;
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Technologies__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Technologies__c extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Technologies__c'> {
    Name: 'DSCORGPKG__DiscoverOrg_Technologies__c';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Technologies__c;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Technologies__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Technologies__c;
  }

type Fields$DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Account__c: string | null;
  DSCORGPKG__Contact__c: string | null;
  DSCORGPKG__FieldName__c: string | null;
  DSCORGPKG__Lead__c: string | null;
  DSCORGPKG__New_Value__c: string | null;
  DSCORGPKG__Old_Value__c: string | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent'> {
    Name: 'DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent;
  }

type Fields$DSCORGPKG__DiscoverOrg_Update_History__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DSCORGPKG__Account__c: string | null;
  DSCORGPKG__Contact__c: string | null;
  DSCORGPKG__FieldName__c: string | null;
  DSCORGPKG__Lead__c: string | null;
  DSCORGPKG__New_Value__c: string | null;
  DSCORGPKG__Old_Value__c: string | null;
};

type ParentReferences$DSCORGPKG__DiscoverOrg_Update_History__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DSCORGPKG__Account__r: SObjectDefinition$Account | null;
  DSCORGPKG__Contact__r: SObjectDefinition$Contact | null;
  DSCORGPKG__Lead__r: SObjectDefinition$Lead | null;
};

type ChildRelationships$DSCORGPKG__DiscoverOrg_Update_History__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__DiscoverOrg_Update_History__c extends SObjectDefinition<'DSCORGPKG__DiscoverOrg_Update_History__c'> {
    Name: 'DSCORGPKG__DiscoverOrg_Update_History__c';
    Fields: Fields$DSCORGPKG__DiscoverOrg_Update_History__c;
    ParentReferences: ParentReferences$DSCORGPKG__DiscoverOrg_Update_History__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__DiscoverOrg_Update_History__c;
  }

type Fields$DSCORGPKG__FieldMapping__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__CriteriaField1APIName__c: string | null;
  DSCORGPKG__CriteriaField1Value__c: string | null;
  DSCORGPKG__CriteriaField2APIName__c: string | null;
  DSCORGPKG__CriteriaField2Value__c: string | null;
  DSCORGPKG__FieldName__c: string | null;
  DSCORGPKG__NewFieldValue__c: string | null;
  DSCORGPKG__Object__c: string | null;
};

type ParentReferences$DSCORGPKG__FieldMapping__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__FieldMapping__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__FieldMapping__ChangeEvent extends SObjectDefinition<'DSCORGPKG__FieldMapping__ChangeEvent'> {
    Name: 'DSCORGPKG__FieldMapping__ChangeEvent';
    Fields: Fields$DSCORGPKG__FieldMapping__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__FieldMapping__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__FieldMapping__ChangeEvent;
  }

type Fields$DSCORGPKG__FieldMapping__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__CriteriaField1APIName__c: string;
  DSCORGPKG__CriteriaField1Value__c: string | null;
  DSCORGPKG__CriteriaField2APIName__c: string | null;
  DSCORGPKG__CriteriaField2Value__c: string | null;
  DSCORGPKG__FieldName__c: string;
  DSCORGPKG__NewFieldValue__c: string;
  DSCORGPKG__Object__c: string | null;
};

type ParentReferences$DSCORGPKG__FieldMapping__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__FieldMapping__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__FieldMapping__c extends SObjectDefinition<'DSCORGPKG__FieldMapping__c'> {
    Name: 'DSCORGPKG__FieldMapping__c';
    Fields: Fields$DSCORGPKG__FieldMapping__c;
    ParentReferences: ParentReferences$DSCORGPKG__FieldMapping__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__FieldMapping__c;
  }

type Fields$DSCORGPKG__MaintainOperation__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__ObjectName__c: string | null;
  DSCORGPKG__Operation_Type__c: string | null;
  DSCORGPKG__Status__c: string | null;
  DSCORGPKG__Time__c: DateString | null;
  DSCORGPKG__UniqueId__c: string | null;
  DSCORGPKG__parameterBody__c: string | null;
};

type ParentReferences$DSCORGPKG__MaintainOperation__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__MaintainOperation__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__MaintainOperation__ChangeEvent extends SObjectDefinition<'DSCORGPKG__MaintainOperation__ChangeEvent'> {
    Name: 'DSCORGPKG__MaintainOperation__ChangeEvent';
    Fields: Fields$DSCORGPKG__MaintainOperation__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__MaintainOperation__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__MaintainOperation__ChangeEvent;
  }

type Fields$DSCORGPKG__MaintainOperation__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__ObjectName__c: string | null;
  DSCORGPKG__Operation_Type__c: string | null;
  DSCORGPKG__Status__c: string | null;
  DSCORGPKG__Time__c: DateString | null;
  DSCORGPKG__UniqueId__c: string | null;
  DSCORGPKG__parameterBody__c: string | null;
};

type ParentReferences$DSCORGPKG__MaintainOperation__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__MaintainOperation__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__MaintainOperation__c extends SObjectDefinition<'DSCORGPKG__MaintainOperation__c'> {
    Name: 'DSCORGPKG__MaintainOperation__c';
    Fields: Fields$DSCORGPKG__MaintainOperation__c;
    ParentReferences: ParentReferences$DSCORGPKG__MaintainOperation__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__MaintainOperation__c;
  }

type Fields$DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Object_Type__c: string | null;
  DSCORGPKG__Record_Ids__c: string | null;
  DSCORGPKG__Status__c: string | null;
};

type ParentReferences$DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent extends SObjectDefinition<'DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent'> {
    Name: 'DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent';
    Fields: Fields$DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent;
  }

type Fields$DSCORGPKG__Maintain_Triggered_Append_Clean__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Object_Type__c: string;
  DSCORGPKG__Record_Ids__c: string | null;
  DSCORGPKG__Status__c: string;
};

type ParentReferences$DSCORGPKG__Maintain_Triggered_Append_Clean__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__Maintain_Triggered_Append_Clean__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__Maintain_Triggered_Append_Clean__c extends SObjectDefinition<'DSCORGPKG__Maintain_Triggered_Append_Clean__c'> {
    Name: 'DSCORGPKG__Maintain_Triggered_Append_Clean__c';
    Fields: Fields$DSCORGPKG__Maintain_Triggered_Append_Clean__c;
    ParentReferences: ParentReferences$DSCORGPKG__Maintain_Triggered_Append_Clean__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__Maintain_Triggered_Append_Clean__c;
  }

type Fields$DSCORGPKG__Nightly_Debug__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Error__c: string | null;
  DSCORGPKG__Record_Id__c: string | null;
};

type ParentReferences$DSCORGPKG__Nightly_Debug__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__Nightly_Debug__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__Nightly_Debug__ChangeEvent extends SObjectDefinition<'DSCORGPKG__Nightly_Debug__ChangeEvent'> {
    Name: 'DSCORGPKG__Nightly_Debug__ChangeEvent';
    Fields: Fields$DSCORGPKG__Nightly_Debug__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__Nightly_Debug__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__Nightly_Debug__ChangeEvent;
  }

type Fields$DSCORGPKG__Nightly_Debug__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DSCORGPKG__Error__c: string | null;
  DSCORGPKG__Record_Id__c: string | null;
};

type ParentReferences$DSCORGPKG__Nightly_Debug__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__Nightly_Debug__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__Nightly_Debug__c extends SObjectDefinition<'DSCORGPKG__Nightly_Debug__c'> {
    Name: 'DSCORGPKG__Nightly_Debug__c';
    Fields: Fields$DSCORGPKG__Nightly_Debug__c;
    ParentReferences: ParentReferences$DSCORGPKG__Nightly_Debug__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__Nightly_Debug__c;
  }

type Fields$DSCORGPKG__OppAlert__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Account__c: string | null;
  DSCORGPKG__Change_in_Surge_Score__c: number | null;
  DSCORGPKG__Contributory_Topics__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__Location__c: string | null;
  DSCORGPKG__Opportunity_Type__c: string | null;
  DSCORGPKG__Rank__c: string | null;
  DSCORGPKG__Surge_Score__c: number | null;
  DSCORGPKG__Top_Metro_Areas__c: string | null;
  DSCORGPKG__Week_Ending__c: DateString | null;
};

type ParentReferences$DSCORGPKG__OppAlert__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__OppAlert__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__OppAlert__ChangeEvent extends SObjectDefinition<'DSCORGPKG__OppAlert__ChangeEvent'> {
    Name: 'DSCORGPKG__OppAlert__ChangeEvent';
    Fields: Fields$DSCORGPKG__OppAlert__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__OppAlert__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__OppAlert__ChangeEvent;
  }

type Fields$DSCORGPKG__OppAlert__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Account__c: string | null;
  DSCORGPKG__Change_in_Surge_Score__c: number | null;
  DSCORGPKG__Contributory_Topics__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__Location__c: string | null;
  DSCORGPKG__Opportunity_Type__c: string | null;
  DSCORGPKG__Rank__c: string | null;
  DSCORGPKG__Surge_Score__c: number | null;
  DSCORGPKG__Top_Metro_Areas__c: string | null;
  DSCORGPKG__Week_Ending__c: DateString | null;
};

type ParentReferences$DSCORGPKG__OppAlert__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DSCORGPKG__Account__r: SObjectDefinition$Account | null;
};

type ChildRelationships$DSCORGPKG__OppAlert__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__OppAlert__c extends SObjectDefinition<'DSCORGPKG__OppAlert__c'> {
    Name: 'DSCORGPKG__OppAlert__c';
    Fields: Fields$DSCORGPKG__OppAlert__c;
    ParentReferences: ParentReferences$DSCORGPKG__OppAlert__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__OppAlert__c;
  }

type Fields$DSCORGPKG__Trigger__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Account__c: string | null;
  DSCORGPKG__Categories__c: string | null;
  DSCORGPKG__Contact__c: string | null;
  DSCORGPKG__Date_Published__c: DateString | null;
  DSCORGPKG__Description__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__Lead__c: string | null;
  DSCORGPKG__Scoop_Type__c: string | null;
  DSCORGPKG__Type__c: string | null;
};

type ParentReferences$DSCORGPKG__Trigger__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__Trigger__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__Trigger__ChangeEvent extends SObjectDefinition<'DSCORGPKG__Trigger__ChangeEvent'> {
    Name: 'DSCORGPKG__Trigger__ChangeEvent';
    Fields: Fields$DSCORGPKG__Trigger__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__Trigger__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__Trigger__ChangeEvent;
  }

type Fields$DSCORGPKG__Trigger__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Account__c: string | null;
  DSCORGPKG__Categories__c: string | null;
  DSCORGPKG__Contact__c: string | null;
  DSCORGPKG__Date_Published__c: DateString | null;
  DSCORGPKG__Description__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__Lead__c: string | null;
  DSCORGPKG__Scoop_Type__c: string | null;
  DSCORGPKG__Type__c: string | null;
};

type ParentReferences$DSCORGPKG__Trigger__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DSCORGPKG__Account__r: SObjectDefinition$Account | null;
  DSCORGPKG__Contact__r: SObjectDefinition$Contact | null;
  DSCORGPKG__Lead__r: SObjectDefinition$Lead | null;
};

type ChildRelationships$DSCORGPKG__Trigger__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__Trigger__c extends SObjectDefinition<'DSCORGPKG__Trigger__c'> {
    Name: 'DSCORGPKG__Trigger__c';
    Fields: Fields$DSCORGPKG__Trigger__c;
    ParentReferences: ParentReferences$DSCORGPKG__Trigger__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__Trigger__c;
  }

type Fields$DSCORGPKG__Triggered_Append_Clean__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  DSCORGPKG__Filter_Logic__c: string | null;
  DSCORGPKG__Matching_Method_Chosen__c: boolean;
  DSCORGPKG__SObject_Type__c: string | null;
  DSCORGPKG__Search_Filter_JSON__c: string | null;
  DSCORGPKG__Where_Condition__c: string | null;
  DSCORGPKG__isEnabled__c: boolean;
};

type ParentReferences$DSCORGPKG__Triggered_Append_Clean__ChangeEvent = {
  //
};

type ChildRelationships$DSCORGPKG__Triggered_Append_Clean__ChangeEvent = {
  //
};

interface SObjectDefinition$DSCORGPKG__Triggered_Append_Clean__ChangeEvent extends SObjectDefinition<'DSCORGPKG__Triggered_Append_Clean__ChangeEvent'> {
    Name: 'DSCORGPKG__Triggered_Append_Clean__ChangeEvent';
    Fields: Fields$DSCORGPKG__Triggered_Append_Clean__ChangeEvent;
    ParentReferences: ParentReferences$DSCORGPKG__Triggered_Append_Clean__ChangeEvent;
    ChildRelationships: ChildRelationships$DSCORGPKG__Triggered_Append_Clean__ChangeEvent;
  }

type Fields$DSCORGPKG__Triggered_Append_Clean__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DSCORGPKG__Filter_Logic__c: string | null;
  DSCORGPKG__Matching_Method_Chosen__c: boolean;
  DSCORGPKG__SObject_Type__c: string | null;
  DSCORGPKG__Search_Filter_JSON__c: string | null;
  DSCORGPKG__Where_Condition__c: string | null;
  DSCORGPKG__isEnabled__c: boolean;
};

type ParentReferences$DSCORGPKG__Triggered_Append_Clean__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DSCORGPKG__Triggered_Append_Clean__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$DSCORGPKG__Triggered_Append_Clean__c extends SObjectDefinition<'DSCORGPKG__Triggered_Append_Clean__c'> {
    Name: 'DSCORGPKG__Triggered_Append_Clean__c';
    Fields: Fields$DSCORGPKG__Triggered_Append_Clean__c;
    ParentReferences: ParentReferences$DSCORGPKG__Triggered_Append_Clean__c;
    ChildRelationships: ChildRelationships$DSCORGPKG__Triggered_Append_Clean__c;
  }

type Fields$Dashboard = {
  //
  Id: string;
  IsDeleted: boolean;
  FolderId: string;
  FolderName: string | null;
  Title: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  Description: string | null;
  LeftSize: string;
  MiddleSize: string | null;
  RightSize: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  RunningUserId: string;
  TitleColor: number;
  TitleSize: number;
  TextColor: number;
  BackgroundStart: number;
  BackgroundEnd: number;
  BackgroundDirection: string;
  Type: string;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DashboardResultRefreshedDate: string | null;
  DashboardResultRunningUser: string | null;
  ColorPalette: string | null;
  ChartTheme: string | null;
};

type ParentReferences$Dashboard = {
  //
  Folder: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  RunningUser: SObjectDefinition$User;
};

type ChildRelationships$Dashboard = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DashboardComponents: SObjectDefinition$DashboardComponent;
  Feeds: SObjectDefinition$DashboardFeed;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
};

interface SObjectDefinition$Dashboard extends SObjectDefinition<'Dashboard'> {
    Name: 'Dashboard';
    Fields: Fields$Dashboard;
    ParentReferences: ParentReferences$Dashboard;
    ChildRelationships: ChildRelationships$Dashboard;
  }

type Fields$DashboardComponent = {
  //
  Id: string;
  Name: string | null;
  DashboardId: string;
  CustomReportId: string | null;
};

type ParentReferences$DashboardComponent = {
  //
  Dashboard: SObjectDefinition$Dashboard;
};

type ChildRelationships$DashboardComponent = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$DashboardComponentFeed;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
};

interface SObjectDefinition$DashboardComponent extends SObjectDefinition<'DashboardComponent'> {
    Name: 'DashboardComponent';
    Fields: Fields$DashboardComponent;
    ParentReferences: ParentReferences$DashboardComponent;
    ChildRelationships: ChildRelationships$DashboardComponent;
  }

type Fields$DashboardComponentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$DashboardComponentFeed = {
  //
  Parent: SObjectDefinition$DashboardComponent;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$DashboardComponentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$DashboardComponentFeed extends SObjectDefinition<'DashboardComponentFeed'> {
    Name: 'DashboardComponentFeed';
    Fields: Fields$DashboardComponentFeed;
    ParentReferences: ParentReferences$DashboardComponentFeed;
    ChildRelationships: ChildRelationships$DashboardComponentFeed;
  }

type Fields$DashboardFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$DashboardFeed = {
  //
  Parent: SObjectDefinition$Dashboard;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$DashboardFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$DashboardFeed extends SObjectDefinition<'DashboardFeed'> {
    Name: 'DashboardFeed';
    Fields: Fields$DashboardFeed;
    ParentReferences: ParentReferences$DashboardFeed;
    ChildRelationships: ChildRelationships$DashboardFeed;
  }

type Fields$DataAssessmentFieldMetric = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DataAssessmentMetricId: string;
  FieldName: string | null;
  NumMatchedInSync: number | null;
  NumMatchedDifferent: number | null;
  NumMatchedBlanks: number | null;
  NumUnmatchedBlanks: number | null;
};

type ParentReferences$DataAssessmentFieldMetric = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DataAssessmentMetric: SObjectDefinition$DataAssessmentMetric;
};

type ChildRelationships$DataAssessmentFieldMetric = {
  //
  DataAssessmentValueMetrics: SObjectDefinition$DataAssessmentValueMetric;
};

interface SObjectDefinition$DataAssessmentFieldMetric extends SObjectDefinition<'DataAssessmentFieldMetric'> {
    Name: 'DataAssessmentFieldMetric';
    Fields: Fields$DataAssessmentFieldMetric;
    ParentReferences: ParentReferences$DataAssessmentFieldMetric;
    ChildRelationships: ChildRelationships$DataAssessmentFieldMetric;
  }

type Fields$DataAssessmentMetric = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  NumTotal: number | null;
  NumProcessed: number | null;
  NumMatched: number | null;
  NumMatchedDifferent: number | null;
  NumUnmatched: number | null;
  NumDuplicates: number | null;
};

type ParentReferences$DataAssessmentMetric = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DataAssessmentMetric = {
  //
  DataAssessmentMetrics: SObjectDefinition$DataAssessmentFieldMetric;
};

interface SObjectDefinition$DataAssessmentMetric extends SObjectDefinition<'DataAssessmentMetric'> {
    Name: 'DataAssessmentMetric';
    Fields: Fields$DataAssessmentMetric;
    ParentReferences: ParentReferences$DataAssessmentMetric;
    ChildRelationships: ChildRelationships$DataAssessmentMetric;
  }

type Fields$DataAssessmentValueMetric = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DataAssessmentFieldMetricId: string;
  FieldValue: string | null;
  ValueCount: number | null;
};

type ParentReferences$DataAssessmentValueMetric = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DataAssessmentFieldMetric: SObjectDefinition$DataAssessmentFieldMetric;
};

type ChildRelationships$DataAssessmentValueMetric = {
  //
};

interface SObjectDefinition$DataAssessmentValueMetric extends SObjectDefinition<'DataAssessmentValueMetric'> {
    Name: 'DataAssessmentValueMetric';
    Fields: Fields$DataAssessmentValueMetric;
    ParentReferences: ParentReferences$DataAssessmentValueMetric;
    ChildRelationships: ChildRelationships$DataAssessmentValueMetric;
  }

type Fields$DataIntegrationRecordPurchasePermission = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  ExternalObject: string | null;
  UserRecordPurchaseLimit: number | null;
};

type ParentReferences$DataIntegrationRecordPurchasePermission = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
};

type ChildRelationships$DataIntegrationRecordPurchasePermission = {
  //
};

interface SObjectDefinition$DataIntegrationRecordPurchasePermission extends SObjectDefinition<'DataIntegrationRecordPurchasePermission'> {
    Name: 'DataIntegrationRecordPurchasePermission';
    Fields: Fields$DataIntegrationRecordPurchasePermission;
    ParentReferences: ParentReferences$DataIntegrationRecordPurchasePermission;
    ChildRelationships: ChildRelationships$DataIntegrationRecordPurchasePermission;
  }

type Fields$DataStatistics = {
  //
  Id: string;
  ExternalId: string | null;
  StatType: string | null;
  UserId: string | null;
  Type: string | null;
  StatValue: number | null;
};

type ParentReferences$DataStatistics = {
  //
  User: SObjectDefinition$User | null;
};

type ChildRelationships$DataStatistics = {
  //
};

interface SObjectDefinition$DataStatistics extends SObjectDefinition<'DataStatistics'> {
    Name: 'DataStatistics';
    Fields: Fields$DataStatistics;
    ParentReferences: ParentReferences$DataStatistics;
    ChildRelationships: ChildRelationships$DataStatistics;
  }

type Fields$DataType = {
  //
  Id: string;
  DurableId: string | null;
  DeveloperName: string | null;
  IsComplex: boolean;
  ContextServiceDataTypeId: string | null;
  ContextWsdlDataTypeId: string | null;
};

type ParentReferences$DataType = {
  //
};

type ChildRelationships$DataType = {
  //
};

interface SObjectDefinition$DataType extends SObjectDefinition<'DataType'> {
    Name: 'DataType';
    Fields: Fields$DataType;
    ParentReferences: ParentReferences$DataType;
    ChildRelationships: ChildRelationships$DataType;
  }

type Fields$DataUseLegalBasis = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Source: string | null;
  Description: string | null;
};

type ParentReferences$DataUseLegalBasis = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUseLegalBasis = {
  //
  Histories: SObjectDefinition$DataUseLegalBasisHistory;
  Shares: SObjectDefinition$DataUseLegalBasisShare;
  DataUsePurposes: SObjectDefinition$DataUsePurpose;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DataUseLegalBasis extends SObjectDefinition<'DataUseLegalBasis'> {
    Name: 'DataUseLegalBasis';
    Fields: Fields$DataUseLegalBasis;
    ParentReferences: ParentReferences$DataUseLegalBasis;
    ChildRelationships: ChildRelationships$DataUseLegalBasis;
  }

type Fields$DataUseLegalBasisHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  DataUseLegalBasisId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$DataUseLegalBasisHistory = {
  //
  DataUseLegalBasis: SObjectDefinition$DataUseLegalBasis;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUseLegalBasisHistory = {
  //
};

interface SObjectDefinition$DataUseLegalBasisHistory extends SObjectDefinition<'DataUseLegalBasisHistory'> {
    Name: 'DataUseLegalBasisHistory';
    Fields: Fields$DataUseLegalBasisHistory;
    ParentReferences: ParentReferences$DataUseLegalBasisHistory;
    ChildRelationships: ChildRelationships$DataUseLegalBasisHistory;
  }

type Fields$DataUseLegalBasisShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$DataUseLegalBasisShare = {
  //
  Parent: SObjectDefinition$DataUseLegalBasis;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUseLegalBasisShare = {
  //
};

interface SObjectDefinition$DataUseLegalBasisShare extends SObjectDefinition<'DataUseLegalBasisShare'> {
    Name: 'DataUseLegalBasisShare';
    Fields: Fields$DataUseLegalBasisShare;
    ParentReferences: ParentReferences$DataUseLegalBasisShare;
    ChildRelationships: ChildRelationships$DataUseLegalBasisShare;
  }

type Fields$DataUsePurpose = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LegalBasisId: string | null;
  Description: string | null;
  CanDataSubjectOptOut: boolean;
};

type ParentReferences$DataUsePurpose = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LegalBasis: SObjectDefinition$DataUseLegalBasis | null;
};

type ChildRelationships$DataUsePurpose = {
  //
  AuthorizationFormDataUses: SObjectDefinition$AuthorizationFormDataUse;
  Histories: SObjectDefinition$DataUsePurposeHistory;
  Shares: SObjectDefinition$DataUsePurposeShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DataUsePurpose extends SObjectDefinition<'DataUsePurpose'> {
    Name: 'DataUsePurpose';
    Fields: Fields$DataUsePurpose;
    ParentReferences: ParentReferences$DataUsePurpose;
    ChildRelationships: ChildRelationships$DataUsePurpose;
  }

type Fields$DataUsePurposeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  DataUsePurposeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$DataUsePurposeHistory = {
  //
  DataUsePurpose: SObjectDefinition$DataUsePurpose;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUsePurposeHistory = {
  //
};

interface SObjectDefinition$DataUsePurposeHistory extends SObjectDefinition<'DataUsePurposeHistory'> {
    Name: 'DataUsePurposeHistory';
    Fields: Fields$DataUsePurposeHistory;
    ParentReferences: ParentReferences$DataUsePurposeHistory;
    ChildRelationships: ChildRelationships$DataUsePurposeHistory;
  }

type Fields$DataUsePurposeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$DataUsePurposeShare = {
  //
  Parent: SObjectDefinition$DataUsePurpose;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DataUsePurposeShare = {
  //
};

interface SObjectDefinition$DataUsePurposeShare extends SObjectDefinition<'DataUsePurposeShare'> {
    Name: 'DataUsePurposeShare';
    Fields: Fields$DataUsePurposeShare;
    ParentReferences: ParentReferences$DataUsePurposeShare;
    ChildRelationships: ChildRelationships$DataUsePurposeShare;
  }

type Fields$DatacloudAddress = {
  //
  Id: string;
  ExternalId: string | null;
  AddressLine1: string | null;
  AddressLine2: string | null;
  City: string | null;
  State: string | null;
  Country: string | null;
  PostalCode: string | null;
  Latitude: string | null;
  Longitude: string | null;
  GeoAccuracyCode: string | null;
  GeoAccuracyNum: string | null;
};

type ParentReferences$DatacloudAddress = {
  //
};

type ChildRelationships$DatacloudAddress = {
  //
};

interface SObjectDefinition$DatacloudAddress extends SObjectDefinition<'DatacloudAddress'> {
    Name: 'DatacloudAddress';
    Fields: Fields$DatacloudAddress;
    ParentReferences: ParentReferences$DatacloudAddress;
    ChildRelationships: ChildRelationships$DatacloudAddress;
  }

type Fields$Debug_Log__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Details__c: string | null;
  Issuer__c: string | null;
  Stacktrace__c: string | null;
  Type__c: string | null;
};

type ParentReferences$Debug_Log__ChangeEvent = {
  //
};

type ChildRelationships$Debug_Log__ChangeEvent = {
  //
};

interface SObjectDefinition$Debug_Log__ChangeEvent extends SObjectDefinition<'Debug_Log__ChangeEvent'> {
    Name: 'Debug_Log__ChangeEvent';
    Fields: Fields$Debug_Log__ChangeEvent;
    ParentReferences: ParentReferences$Debug_Log__ChangeEvent;
    ChildRelationships: ChildRelationships$Debug_Log__ChangeEvent;
  }

type Fields$Debug_Log__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Details__c: string | null;
  Issuer__c: string | null;
  Stacktrace__c: string | null;
  Type__c: string | null;
};

type ParentReferences$Debug_Log__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Debug_Log__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Debug_Log__c extends SObjectDefinition<'Debug_Log__c'> {
    Name: 'Debug_Log__c';
    Fields: Fields$Debug_Log__c;
    ParentReferences: ParentReferences$Debug_Log__c;
    ChildRelationships: ChildRelationships$Debug_Log__c;
  }

type Fields$DeclinedEventRelation = {
  //
  Id: string;
  RelationId: string | null;
  EventId: string | null;
  AccountId: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$DeclinedEventRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Event: SObjectDefinition$Event | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DeclinedEventRelation = {
  //
};

interface SObjectDefinition$DeclinedEventRelation extends SObjectDefinition<'DeclinedEventRelation'> {
    Name: 'DeclinedEventRelation';
    Fields: Fields$DeclinedEventRelation;
    ParentReferences: ParentReferences$DeclinedEventRelation;
    ChildRelationships: ChildRelationships$DeclinedEventRelation;
  }

type Fields$DeleteEvent = {
  //
  Id: string;
  Record: string | null;
  RecordName: string | null;
  DeletedById: string;
  DeletedDate: DateString | null;
  SobjectName: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$DeleteEvent = {
  //
  DeletedBy: SObjectDefinition$User;
};

type ChildRelationships$DeleteEvent = {
  //
};

interface SObjectDefinition$DeleteEvent extends SObjectDefinition<'DeleteEvent'> {
    Name: 'DeleteEvent';
    Fields: Fields$DeleteEvent;
    ParentReferences: ParentReferences$DeleteEvent;
    ChildRelationships: ChildRelationships$DeleteEvent;
  }

type Fields$Document = {
  //
  Id: string;
  FolderId: string;
  IsDeleted: boolean;
  Name: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  ContentType: string | null;
  Type: string | null;
  IsPublic: boolean;
  BodyLength: number;
  Body: BlobString | null;
  Url: string | null;
  Description: string | null;
  Keywords: string | null;
  IsInternalUseOnly: boolean;
  AuthorId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsBodySearchable: boolean;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Document = {
  //
  Folder: SObjectDefinition$Name;
  Author: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Document = {
  //
};

interface SObjectDefinition$Document extends SObjectDefinition<'Document'> {
    Name: 'Document';
    Fields: Fields$Document;
    ParentReferences: ParentReferences$Document;
    ChildRelationships: ChildRelationships$Document;
  }

type Fields$DocumentAttachmentMap = {
  //
  Id: string;
  ParentId: string;
  DocumentId: string;
  DocumentSequence: number;
  CreatedDate: DateString;
  CreatedById: string;
};

type ParentReferences$DocumentAttachmentMap = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$DocumentAttachmentMap = {
  //
};

interface SObjectDefinition$DocumentAttachmentMap extends SObjectDefinition<'DocumentAttachmentMap'> {
    Name: 'DocumentAttachmentMap';
    Fields: Fields$DocumentAttachmentMap;
    ParentReferences: ParentReferences$DocumentAttachmentMap;
    ChildRelationships: ChildRelationships$DocumentAttachmentMap;
  }

type Fields$Domain = {
  //
  Id: string;
  DomainType: string;
  Domain: string;
  OptionsHstsHeaders: boolean;
  CnameTarget: string | null;
  HttpsOption: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Domain = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Domain = {
  //
  DomainSites: SObjectDefinition$DomainSite;
};

interface SObjectDefinition$Domain extends SObjectDefinition<'Domain'> {
    Name: 'Domain';
    Fields: Fields$Domain;
    ParentReferences: ParentReferences$Domain;
    ChildRelationships: ChildRelationships$Domain;
  }

type Fields$DomainSite = {
  //
  Id: string;
  DomainId: string;
  SiteId: string;
  PathPrefix: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$DomainSite = {
  //
  Domain: SObjectDefinition$Domain;
  Site: SObjectDefinition$Site;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DomainSite = {
  //
};

interface SObjectDefinition$DomainSite extends SObjectDefinition<'DomainSite'> {
    Name: 'DomainSite';
    Fields: Fields$DomainSite;
    ParentReferences: ParentReferences$DomainSite;
    ChildRelationships: ChildRelationships$DomainSite;
  }

type Fields$DuplicateRecordItem = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DuplicateRecordSetId: string;
  RecordId: string;
};

type ParentReferences$DuplicateRecordItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DuplicateRecordSet: SObjectDefinition$DuplicateRecordSet;
  Record: SObjectDefinition$Name;
};

type ChildRelationships$DuplicateRecordItem = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DuplicateRecordItem extends SObjectDefinition<'DuplicateRecordItem'> {
    Name: 'DuplicateRecordItem';
    Fields: Fields$DuplicateRecordItem;
    ParentReferences: ParentReferences$DuplicateRecordItem;
    ChildRelationships: ChildRelationships$DuplicateRecordItem;
  }

type Fields$DuplicateRecordSet = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  DuplicateRuleId: string | null;
  RecordCount: number | null;
};

type ParentReferences$DuplicateRecordSet = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DuplicateRule: SObjectDefinition$DuplicateRule | null;
};

type ChildRelationships$DuplicateRecordSet = {
  //
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$DuplicateRecordSet extends SObjectDefinition<'DuplicateRecordSet'> {
    Name: 'DuplicateRecordSet';
    Fields: Fields$DuplicateRecordSet;
    ParentReferences: ParentReferences$DuplicateRecordSet;
    ChildRelationships: ChildRelationships$DuplicateRecordSet;
  }

type Fields$DuplicateRule = {
  //
  Id: string;
  IsDeleted: boolean;
  SobjectType: string;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsActive: boolean;
  SobjectSubtype: string | null;
  LastViewedDate: DateString | null;
};

type ParentReferences$DuplicateRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$DuplicateRule = {
  //
  DuplicateRecordSets: SObjectDefinition$DuplicateRecordSet;
};

interface SObjectDefinition$DuplicateRule extends SObjectDefinition<'DuplicateRule'> {
    Name: 'DuplicateRule';
    Fields: Fields$DuplicateRule;
    ParentReferences: ParentReferences$DuplicateRule;
    ChildRelationships: ChildRelationships$DuplicateRule;
  }

type Fields$EmailCapture = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsActive: boolean;
  ToPattern: string;
  FromPattern: string | null;
  Sender: string | null;
  Recipient: string | null;
  CaptureDate: DateString | null;
  RawMessageLength: number | null;
  RawMessage: BlobString | null;
};

type ParentReferences$EmailCapture = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailCapture = {
  //
};

interface SObjectDefinition$EmailCapture extends SObjectDefinition<'EmailCapture'> {
    Name: 'EmailCapture';
    Fields: Fields$EmailCapture;
    ParentReferences: ParentReferences$EmailCapture;
    ChildRelationships: ChildRelationships$EmailCapture;
  }

type Fields$EmailDomainFilter = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PriorityNumber: number | null;
  EmailRelayId: string;
  ToDomain: string | null;
  FromDomain: string | null;
  IsActive: boolean;
};

type ParentReferences$EmailDomainFilter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  EmailRelay: SObjectDefinition$EmailRelay;
};

type ChildRelationships$EmailDomainFilter = {
  //
};

interface SObjectDefinition$EmailDomainFilter extends SObjectDefinition<'EmailDomainFilter'> {
    Name: 'EmailDomainFilter';
    Fields: Fields$EmailDomainFilter;
    ParentReferences: ParentReferences$EmailDomainFilter;
    ChildRelationships: ChildRelationships$EmailDomainFilter;
  }

type Fields$EmailDomainKey = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Selector: string;
  Domain: string;
  DomainMatch: string;
  IsActive: boolean;
  AlternateSelector: string | null;
  TxtRecordName: string | null;
  AlternateTxtRecordName: string | null;
  TxtRecordsPublishState: string | null;
  KeySize: number | null;
  PublicKey: string | null;
  AlternatePublicKey: string | null;
};

type ParentReferences$EmailDomainKey = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailDomainKey = {
  //
};

interface SObjectDefinition$EmailDomainKey extends SObjectDefinition<'EmailDomainKey'> {
    Name: 'EmailDomainKey';
    Fields: Fields$EmailDomainKey;
    ParentReferences: ParentReferences$EmailDomainKey;
    ChildRelationships: ChildRelationships$EmailDomainKey;
  }

type Fields$EmailMessage = {
  //
  Id: string;
  ParentId: string | null;
  ActivityId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TextBody: string | null;
  HtmlBody: string | null;
  Headers: string | null;
  Subject: string | null;
  FromName: string | null;
  FromAddress: string | null;
  ValidatedFromAddress: string | null;
  ToAddress: string | null;
  CcAddress: string | null;
  BccAddress: string | null;
  Incoming: boolean;
  HasAttachment: boolean;
  Status: string;
  MessageDate: DateString | null;
  IsDeleted: boolean;
  ReplyToEmailMessageId: string | null;
  IsExternallyVisible: boolean;
  MessageIdentifier: string | null;
  ThreadIdentifier: string | null;
  IsClientManaged: boolean;
  RelatedToId: string | null;
  IsTracked: boolean;
  IsOpened: boolean;
  FirstOpenedDate: DateString | null;
  LastOpenedDate: DateString | null;
  IsBounced: boolean;
  EmailTemplateId: string | null;
};

type ParentReferences$EmailMessage = {
  //
  Parent: SObjectDefinition$Case | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ReplyToEmailMessage: SObjectDefinition$EmailMessage | null;
  RelatedTo: SObjectDefinition$Name | null;
  EmailTemplate: SObjectDefinition$EmailTemplate | null;
};

type ChildRelationships$EmailMessage = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  EmailMessageRelations: SObjectDefinition$EmailMessageRelation;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$EmailMessage extends SObjectDefinition<'EmailMessage'> {
    Name: 'EmailMessage';
    Fields: Fields$EmailMessage;
    ParentReferences: ParentReferences$EmailMessage;
    ChildRelationships: ChildRelationships$EmailMessage;
  }

type Fields$EmailMessageChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  ParentId: string | null;
  ActivityId: string | null;
  CreatedById: string | null;
  CreatedDate: DateString | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  TextBody: string | null;
  HtmlBody: string | null;
  Headers: string | null;
  Subject: string | null;
  FromName: string | null;
  FromAddress: string | null;
  ToAddress: string | null;
  CcAddress: string | null;
  BccAddress: string | null;
  Incoming: boolean;
  HasAttachment: boolean;
  Status: string | null;
  MessageDate: DateString | null;
  ReplyToEmailMessageId: string | null;
  IsExternallyVisible: boolean;
  MessageIdentifier: string | null;
  ThreadIdentifier: string | null;
  IsClientManaged: boolean;
  RelatedToId: string | null;
  IsTracked: boolean;
  FirstOpenedDate: DateString | null;
  LastOpenedDate: DateString | null;
  IsBounced: boolean;
  EmailTemplateId: string | null;
};

type ParentReferences$EmailMessageChangeEvent = {
  //
};

type ChildRelationships$EmailMessageChangeEvent = {
  //
};

interface SObjectDefinition$EmailMessageChangeEvent extends SObjectDefinition<'EmailMessageChangeEvent'> {
    Name: 'EmailMessageChangeEvent';
    Fields: Fields$EmailMessageChangeEvent;
    ParentReferences: ParentReferences$EmailMessageChangeEvent;
    ChildRelationships: ChildRelationships$EmailMessageChangeEvent;
  }

type Fields$EmailMessageRelation = {
  //
  Id: string;
  EmailMessageId: string;
  RelationId: string | null;
  RelationType: string;
  RelationAddress: string | null;
  RelationObjectType: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$EmailMessageRelation = {
  //
  EmailMessage: SObjectDefinition$EmailMessage;
  Relation: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailMessageRelation = {
  //
};

interface SObjectDefinition$EmailMessageRelation extends SObjectDefinition<'EmailMessageRelation'> {
    Name: 'EmailMessageRelation';
    Fields: Fields$EmailMessageRelation;
    ParentReferences: ParentReferences$EmailMessageRelation;
    ChildRelationships: ChildRelationships$EmailMessageRelation;
  }

type Fields$EmailRelay = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Host: string;
  Port: string;
  TlsSetting: string;
  IsRequireAuth: boolean;
  Username: string | null;
  Password: string | null;
};

type ParentReferences$EmailRelay = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailRelay = {
  //
  Filters: SObjectDefinition$EmailDomainFilter;
};

interface SObjectDefinition$EmailRelay extends SObjectDefinition<'EmailRelay'> {
    Name: 'EmailRelay';
    Fields: Fields$EmailRelay;
    ParentReferences: ParentReferences$EmailRelay;
    ChildRelationships: ChildRelationships$EmailRelay;
  }

type Fields$EmailServicesAddress = {
  //
  Id: string;
  IsActive: boolean;
  LocalPart: string;
  EmailDomainName: string | null;
  AuthorizedSenders: string | null;
  RunAsUserId: string;
  FunctionId: string;
  DeveloperName: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$EmailServicesAddress = {
  //
  Function: SObjectDefinition$EmailServicesFunction;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailServicesAddress = {
  //
};

interface SObjectDefinition$EmailServicesAddress extends SObjectDefinition<'EmailServicesAddress'> {
    Name: 'EmailServicesAddress';
    Fields: Fields$EmailServicesAddress;
    ParentReferences: ParentReferences$EmailServicesAddress;
    ChildRelationships: ChildRelationships$EmailServicesAddress;
  }

type Fields$EmailServicesFunction = {
  //
  Id: string;
  IsActive: boolean;
  FunctionName: string;
  AuthorizedSenders: string | null;
  IsAuthenticationRequired: boolean;
  IsTlsRequired: boolean;
  AttachmentOption: string;
  ApexClassId: string | null;
  OverLimitAction: string | null;
  FunctionInactiveAction: string | null;
  AddressInactiveAction: string | null;
  AuthenticationFailureAction: string | null;
  AuthorizationFailureAction: string | null;
  IsErrorRoutingEnabled: boolean;
  ErrorRoutingAddress: string | null;
  IsTextAttachmentsAsBinary: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$EmailServicesFunction = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailServicesFunction = {
  //
  Addresses: SObjectDefinition$EmailServicesAddress;
};

interface SObjectDefinition$EmailServicesFunction extends SObjectDefinition<'EmailServicesFunction'> {
    Name: 'EmailServicesFunction';
    Fields: Fields$EmailServicesFunction;
    ParentReferences: ParentReferences$EmailServicesFunction;
    ChildRelationships: ChildRelationships$EmailServicesFunction;
  }

type Fields$EmailStatus = {
  //
  Id: string;
  TaskId: string;
  WhoId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  TimesOpened: number;
  FirstOpenDate: DateString | null;
  LastOpenDate: DateString | null;
  EmailTemplateName: string | null;
};

type ParentReferences$EmailStatus = {
  //
  Task: SObjectDefinition$Task;
  Who: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailStatus = {
  //
};

interface SObjectDefinition$EmailStatus extends SObjectDefinition<'EmailStatus'> {
    Name: 'EmailStatus';
    Fields: Fields$EmailStatus;
    ParentReferences: ParentReferences$EmailStatus;
    ChildRelationships: ChildRelationships$EmailStatus;
  }

type Fields$EmailTemplate = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  OwnerId: string;
  FolderId: string;
  FolderName: string | null;
  BrandTemplateId: string | null;
  EnhancedLetterheadId: string | null;
  TemplateStyle: string;
  IsActive: boolean;
  TemplateType: string;
  Encoding: string | null;
  Description: string | null;
  Subject: string | null;
  HtmlValue: string | null;
  Body: string | null;
  TimesUsed: number | null;
  LastUsedDate: DateString | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ApiVersion: number | null;
  Markup: string | null;
  UiType: string | null;
  RelatedEntityType: string | null;
  IsBuilderContent: boolean;
};

type ParentReferences$EmailTemplate = {
  //
  Owner: SObjectDefinition$User;
  Folder: SObjectDefinition$Name;
  EnhancedLetterhead: SObjectDefinition$EnhancedLetterhead | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EmailTemplate = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
};

interface SObjectDefinition$EmailTemplate extends SObjectDefinition<'EmailTemplate'> {
    Name: 'EmailTemplate';
    Fields: Fields$EmailTemplate;
    ParentReferences: ParentReferences$EmailTemplate;
    ChildRelationships: ChildRelationships$EmailTemplate;
  }

type Fields$EmailTemplateChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  DeveloperName: string | null;
  NamespacePrefix: string | null;
  OwnerId: string | null;
  FolderId: string | null;
  BrandTemplateId: string | null;
  EnhancedLetterheadId: string | null;
  TemplateStyle: string | null;
  IsActive: boolean;
  TemplateType: string | null;
  Encoding: string | null;
  Description: string | null;
  Subject: string | null;
  HtmlValue: string | null;
  Body: string | null;
  TimesUsed: number | null;
  LastUsedDate: DateString | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ApiVersion: number | null;
  Markup: string | null;
  UiType: string | null;
  RelatedEntityType: string | null;
};

type ParentReferences$EmailTemplateChangeEvent = {
  //
};

type ChildRelationships$EmailTemplateChangeEvent = {
  //
};

interface SObjectDefinition$EmailTemplateChangeEvent extends SObjectDefinition<'EmailTemplateChangeEvent'> {
    Name: 'EmailTemplateChangeEvent';
    Fields: Fields$EmailTemplateChangeEvent;
    ParentReferences: ParentReferences$EmailTemplateChangeEvent;
    ChildRelationships: ChildRelationships$EmailTemplateChangeEvent;
  }

type Fields$EmbeddedServiceDetail = {
  //
  Id: string;
  DurableId: string | null;
  Site: string | null;
  PrimaryColor: string | null;
  SecondaryColor: string | null;
  ContrastPrimaryColor: string | null;
  ContrastInvertedColor: string | null;
  NavBarColor: string | null;
  NavBarTextColor: string | null;
  SecondaryNavBarColor: string | null;
  Font: string | null;
  IsLiveAgentEnabled: boolean;
  IsFieldServiceEnabled: boolean;
  Width: number | null;
  Height: number | null;
  IsPrechatEnabled: boolean;
  CustomPrechatComponent: string | null;
  AvatarImg: string | null;
  SmallCompanyLogoImg: string | null;
  PrechatBackgroundImg: string | null;
  WaitingStateBackgroundImg: string | null;
  FontSize: string | null;
  OfflineCaseBackgroundImg: string | null;
  IsOfflineCaseEnabled: boolean;
  IsQueuePositionEnabled: boolean;
  ShouldShowNewAppointment: boolean;
  ShouldShowExistingAppointment: boolean;
  FieldServiceHomeImg: string | null;
  FieldServiceLogoImg: string | null;
  FieldServiceConfirmCardImg: string | null;
  ShouldHideAuthDialog: boolean;
  CustomMinimizedComponent: string | null;
};

type ParentReferences$EmbeddedServiceDetail = {
  //
};

type ChildRelationships$EmbeddedServiceDetail = {
  //
};

interface SObjectDefinition$EmbeddedServiceDetail extends SObjectDefinition<'EmbeddedServiceDetail'> {
    Name: 'EmbeddedServiceDetail';
    Fields: Fields$EmbeddedServiceDetail;
    ParentReferences: ParentReferences$EmbeddedServiceDetail;
    ChildRelationships: ChildRelationships$EmbeddedServiceDetail;
  }

type Fields$EmbeddedServiceLabel = {
  //
  Id: string;
  DurableId: string | null;
  EmbeddedServiceConfigDeveloperName: string | null;
  LabelKey: string | null;
  CustomLabelName: string | null;
};

type ParentReferences$EmbeddedServiceLabel = {
  //
};

type ChildRelationships$EmbeddedServiceLabel = {
  //
};

interface SObjectDefinition$EmbeddedServiceLabel extends SObjectDefinition<'EmbeddedServiceLabel'> {
    Name: 'EmbeddedServiceLabel';
    Fields: Fields$EmbeddedServiceLabel;
    ParentReferences: ParentReferences$EmbeddedServiceLabel;
    ChildRelationships: ChildRelationships$EmbeddedServiceLabel;
  }

type Fields$EngagementChannelType = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ContactPointType: string | null;
};

type ParentReferences$EngagementChannelType = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EngagementChannelType = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionChannelTypes: SObjectDefinition$CommSubscriptionChannelType;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$EngagementChannelTypeFeed;
  Histories: SObjectDefinition$EngagementChannelTypeHistory;
  Shares: SObjectDefinition$EngagementChannelTypeShare;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$EngagementChannelType extends SObjectDefinition<'EngagementChannelType'> {
    Name: 'EngagementChannelType';
    Fields: Fields$EngagementChannelType;
    ParentReferences: ParentReferences$EngagementChannelType;
    ChildRelationships: ChildRelationships$EngagementChannelType;
  }

type Fields$EngagementChannelTypeFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$EngagementChannelTypeFeed = {
  //
  Parent: SObjectDefinition$EngagementChannelType;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$EngagementChannelTypeFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$EngagementChannelTypeFeed extends SObjectDefinition<'EngagementChannelTypeFeed'> {
    Name: 'EngagementChannelTypeFeed';
    Fields: Fields$EngagementChannelTypeFeed;
    ParentReferences: ParentReferences$EngagementChannelTypeFeed;
    ChildRelationships: ChildRelationships$EngagementChannelTypeFeed;
  }

type Fields$EngagementChannelTypeHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  EngagementChannelTypeId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$EngagementChannelTypeHistory = {
  //
  EngagementChannelType: SObjectDefinition$EngagementChannelType;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$EngagementChannelTypeHistory = {
  //
};

interface SObjectDefinition$EngagementChannelTypeHistory extends SObjectDefinition<'EngagementChannelTypeHistory'> {
    Name: 'EngagementChannelTypeHistory';
    Fields: Fields$EngagementChannelTypeHistory;
    ParentReferences: ParentReferences$EngagementChannelTypeHistory;
    ChildRelationships: ChildRelationships$EngagementChannelTypeHistory;
  }

type Fields$EngagementChannelTypeShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$EngagementChannelTypeShare = {
  //
  Parent: SObjectDefinition$EngagementChannelType;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EngagementChannelTypeShare = {
  //
};

interface SObjectDefinition$EngagementChannelTypeShare extends SObjectDefinition<'EngagementChannelTypeShare'> {
    Name: 'EngagementChannelTypeShare';
    Fields: Fields$EngagementChannelTypeShare;
    ParentReferences: ParentReferences$EngagementChannelTypeShare;
    ChildRelationships: ChildRelationships$EngagementChannelTypeShare;
  }

type Fields$EnhancedLetterhead = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  LetterheadHeader: string | null;
  LetterheadFooter: string | null;
};

type ParentReferences$EnhancedLetterhead = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EnhancedLetterhead = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Feeds: SObjectDefinition$EnhancedLetterheadFeed;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$EnhancedLetterhead extends SObjectDefinition<'EnhancedLetterhead'> {
    Name: 'EnhancedLetterhead';
    Fields: Fields$EnhancedLetterhead;
    ParentReferences: ParentReferences$EnhancedLetterhead;
    ChildRelationships: ChildRelationships$EnhancedLetterhead;
  }

type Fields$EnhancedLetterheadFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$EnhancedLetterheadFeed = {
  //
  Parent: SObjectDefinition$EnhancedLetterhead;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$EnhancedLetterheadFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$EnhancedLetterheadFeed extends SObjectDefinition<'EnhancedLetterheadFeed'> {
    Name: 'EnhancedLetterheadFeed';
    Fields: Fields$EnhancedLetterheadFeed;
    ParentReferences: ParentReferences$EnhancedLetterheadFeed;
    ChildRelationships: ChildRelationships$EnhancedLetterheadFeed;
  }

type Fields$EntityDefinition = {
  //
  Id: string;
  DurableId: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  QualifiedApiName: string;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  MasterLabel: string;
  Label: string | null;
  PluralLabel: string | null;
  DefaultCompactLayoutId: string | null;
  IsCustomizable: boolean;
  IsApexTriggerable: boolean;
  IsWorkflowEnabled: boolean;
  IsProcessEnabled: boolean;
  IsCompactLayoutable: boolean;
  KeyPrefix: string | null;
  IsCustomSetting: boolean;
  IsDeprecatedAndHidden: boolean;
  IsReplicateable: boolean;
  IsRetrieveable: boolean;
  IsSearchLayoutable: boolean;
  IsSearchable: boolean;
  IsTriggerable: boolean;
  IsIdEnabled: boolean;
  IsEverCreatable: boolean;
  IsEverUpdatable: boolean;
  IsEverDeletable: boolean;
  IsFeedEnabled: boolean;
  IsQueryable: boolean;
  IsMruEnabled: boolean;
  DetailUrl: string | null;
  EditUrl: string | null;
  NewUrl: string | null;
  EditDefinitionUrl: string | null;
  HelpSettingPageName: string | null;
  HelpSettingPageUrl: string | null;
  RunningUserEntityAccessId: string | null;
  PublisherId: string | null;
  IsLayoutable: boolean;
  RecordTypesSupported: any | null;
  InternalSharingModel: string;
  ExternalSharingModel: string;
  HasSubtypes: boolean;
  IsSubtype: boolean;
  IsAutoActivityCaptureEnabled: boolean;
  IsInterface: boolean;
  ImplementsInterfaces: string | null;
  ImplementedBy: string | null;
  ExtendsInterfaces: string | null;
  ExtendedBy: string | null;
  DefaultImplementation: string | null;
};

type ParentReferences$EntityDefinition = {
  //
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EntityDefinition = {
  //
  Particles: SObjectDefinition$EntityParticle;
  Fields: SObjectDefinition$FieldDefinition;
  OwnerChangeOptions: SObjectDefinition$OwnerChangeOptionInfo;
  RelationshipDomains: SObjectDefinition$RelationshipDomain;
  ChildRelationships: SObjectDefinition$RelationshipInfo;
  SearchLayouts: SObjectDefinition$SearchLayout;
};

interface SObjectDefinition$EntityDefinition extends SObjectDefinition<'EntityDefinition'> {
    Name: 'EntityDefinition';
    Fields: Fields$EntityDefinition;
    ParentReferences: ParentReferences$EntityDefinition;
    ChildRelationships: ChildRelationships$EntityDefinition;
  }

type Fields$EntityParticle = {
  //
  Id: string;
  DurableId: string | null;
  QualifiedApiName: string;
  EntityDefinitionId: string | null;
  FieldDefinitionId: string | null;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  MasterLabel: string;
  Label: string | null;
  Length: number | null;
  DataType: string | null;
  ServiceDataTypeId: string | null;
  ValueTypeId: string | null;
  ExtraTypeInfo: string | null;
  IsAutonumber: boolean;
  ByteLength: number | null;
  IsCaseSensitive: boolean;
  IsUnique: boolean;
  IsCreatable: boolean;
  IsUpdatable: boolean;
  IsDefaultedOnCreate: boolean;
  IsWriteRequiresMasterRead: boolean;
  IsCalculated: boolean;
  IsHighScaleNumber: boolean;
  IsHtmlFormatted: boolean;
  IsNameField: boolean;
  IsNillable: boolean;
  IsPermissionable: boolean;
  IsEncrypted: boolean;
  Digits: number | null;
  InlineHelpText: string | null;
  RelationshipName: string | null;
  ReferenceTargetField: string | null;
  Name: string | null;
  Mask: string | null;
  MaskType: string | null;
  IsWorkflowFilterable: boolean;
  IsCompactLayoutable: boolean;
  Precision: number | null;
  Scale: number | null;
  IsFieldHistoryTracked: boolean;
  IsApiFilterable: boolean;
  IsApiSortable: boolean;
  IsApiGroupable: boolean;
  IsListVisible: boolean;
  IsLayoutable: boolean;
  IsDependentPicklist: boolean;
  IsDeprecatedAndHidden: boolean;
  IsDisplayLocationInDecimal: boolean;
  DefaultValueFormula: string | null;
  IsIdLookup: boolean;
  IsNamePointing: boolean;
  RelationshipOrder: number | null;
  ReferenceTo: any | null;
  IsComponent: boolean;
  IsCompound: boolean;
};

type ParentReferences$EntityParticle = {
  //
};

type ChildRelationships$EntityParticle = {
  //
  PicklistValues: SObjectDefinition$PicklistValueInfo;
};

interface SObjectDefinition$EntityParticle extends SObjectDefinition<'EntityParticle'> {
    Name: 'EntityParticle';
    Fields: Fields$EntityParticle;
    ParentReferences: ParentReferences$EntityParticle;
    ChildRelationships: ChildRelationships$EntityParticle;
  }

type Fields$EntitySubscription = {
  //
  Id: string;
  ParentId: string;
  SubscriberId: string;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
};

type ParentReferences$EntitySubscription = {
  //
  Parent: SObjectDefinition$Name;
  Subscriber: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$EntitySubscription = {
  //
};

interface SObjectDefinition$EntitySubscription extends SObjectDefinition<'EntitySubscription'> {
    Name: 'EntitySubscription';
    Fields: Fields$EntitySubscription;
    ParentReferences: ParentReferences$EntitySubscription;
    ChildRelationships: ChildRelationships$EntitySubscription;
  }

type Fields$Event = {
  //
  Id: string;
  RecordTypeId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  WhoCount: number | null;
  WhatCount: number | null;
  Subject: string | null;
  Location: string | null;
  IsAllDayEvent: boolean;
  ActivityDateTime: DateString | null;
  ActivityDate: DateString | null;
  DurationInMinutes: number | null;
  StartDateTime: DateString | null;
  EndDateTime: DateString | null;
  EndDate: DateString | null;
  Description: string | null;
  AccountId: string | null;
  OwnerId: string;
  Type: string | null;
  IsPrivate: boolean;
  ShowAs: string | null;
  IsDeleted: boolean;
  IsChild: boolean;
  IsGroupEvent: boolean;
  GroupEventType: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsArchived: boolean;
  RecurrenceActivityId: string | null;
  IsRecurrence: boolean;
  RecurrenceStartDateTime: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceTimeZoneSidKey: string | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  EventSubtype: string | null;
  IsRecurrence2Exclusion: boolean;
  Recurrence2PatternText: string | null;
  Recurrence2PatternVersion: string | null;
  IsRecurrence2: boolean;
  IsRecurrence2Exception: boolean;
  Recurrence2PatternStartDate: DateString | null;
  Recurrence2PatternTimeZone: string | null;
  rcsfl__CALL_UNIQUE_ID__c: string | null;
  rcsfl__CALL_UUID__c: string | null;
  rcsfl__Call_Recording__c: string | null;
  rcsfl__RC_Logging_Type__c: string | null;
  rcsfl__Recording_Information__c: string | null;
  rcsfl__external_whoid__c: string | null;
  rcsfl__hvs_disposition__c: string | null;
  rcsfl__key__c: string | null;
  DB_Activity_Type__c: string | null;
  task_type__c: string | null;
  Outreach_Task_Type__c: string | null;
};

type ParentReferences$Event = {
  //
  RecordType: SObjectDefinition$RecordType | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Account: SObjectDefinition$Account | null;
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Event = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  RecurringEvents: SObjectDefinition$Event;
  Feeds: SObjectDefinition$EventFeed;
  EventRelations: SObjectDefinition$EventRelation;
  EventWhoRelations: SObjectDefinition$EventWhoRelation;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
};

interface SObjectDefinition$Event extends SObjectDefinition<'Event'> {
    Name: 'Event';
    Fields: Fields$Event;
    ParentReferences: ParentReferences$Event;
    ChildRelationships: ChildRelationships$Event;
  }

type Fields$EventBusSubscriber = {
  //
  Id: string;
  ExternalId: string | null;
  Name: string | null;
  Type: string | null;
  Topic: string | null;
  Position: number | null;
  Tip: number | null;
  Retries: number | null;
  LastError: string | null;
  Status: string | null;
};

type ParentReferences$EventBusSubscriber = {
  //
};

type ChildRelationships$EventBusSubscriber = {
  //
};

interface SObjectDefinition$EventBusSubscriber extends SObjectDefinition<'EventBusSubscriber'> {
    Name: 'EventBusSubscriber';
    Fields: Fields$EventBusSubscriber;
    ParentReferences: ParentReferences$EventBusSubscriber;
    ChildRelationships: ChildRelationships$EventBusSubscriber;
  }

type Fields$EventChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  RecordTypeId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  WhoCount: number | null;
  WhatCount: number | null;
  Subject: string | null;
  Location: string | null;
  IsAllDayEvent: boolean;
  ActivityDateTime: DateString | null;
  ActivityDate: DateString | null;
  DurationInMinutes: number | null;
  Description: string | null;
  AccountId: string | null;
  OwnerId: string | null;
  Type: string | null;
  IsPrivate: boolean;
  ShowAs: string | null;
  IsChild: boolean;
  IsGroupEvent: boolean;
  GroupEventType: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  RecurrenceActivityId: string | null;
  IsRecurrence: boolean;
  RecurrenceStartDateTime: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceTimeZoneSidKey: string | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  IsRecurrence2Exclusion: boolean;
  Recurrence2PatternText: string | null;
  Recurrence2PatternVersion: string | null;
  rcsfl__CALL_UNIQUE_ID__c: string | null;
  rcsfl__CALL_UUID__c: string | null;
  rcsfl__Call_Recording__c: string | null;
  rcsfl__RC_Logging_Type__c: string | null;
  rcsfl__Recording_Information__c: string | null;
  rcsfl__external_whoid__c: string | null;
  rcsfl__hvs_disposition__c: string | null;
  rcsfl__key__c: string | null;
  DB_Activity_Type__c: string | null;
  task_type__c: string | null;
  Outreach_Task_Type__c: string | null;
};

type ParentReferences$EventChangeEvent = {
  //
};

type ChildRelationships$EventChangeEvent = {
  //
};

interface SObjectDefinition$EventChangeEvent extends SObjectDefinition<'EventChangeEvent'> {
    Name: 'EventChangeEvent';
    Fields: Fields$EventChangeEvent;
    ParentReferences: ParentReferences$EventChangeEvent;
    ChildRelationships: ChildRelationships$EventChangeEvent;
  }

type Fields$EventFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$EventFeed = {
  //
  Parent: SObjectDefinition$Event;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$EventFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$EventFeed extends SObjectDefinition<'EventFeed'> {
    Name: 'EventFeed';
    Fields: Fields$EventFeed;
    ParentReferences: ParentReferences$EventFeed;
    ChildRelationships: ChildRelationships$EventFeed;
  }

type Fields$EventLogFile = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  EventType: string;
  LogDate: DateString;
  LogFileLength: number;
  LogFileContentType: string;
  ApiVersion: number;
  LogFileFieldNames: string | null;
  LogFileFieldTypes: string | null;
  LogFile: BlobString;
};

type ParentReferences$EventLogFile = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EventLogFile = {
  //
};

interface SObjectDefinition$EventLogFile extends SObjectDefinition<'EventLogFile'> {
    Name: 'EventLogFile';
    Fields: Fields$EventLogFile;
    ParentReferences: ParentReferences$EventLogFile;
    ChildRelationships: ChildRelationships$EventLogFile;
  }

type Fields$EventRelation = {
  //
  Id: string;
  RelationId: string;
  EventId: string;
  IsWhat: boolean;
  IsParent: boolean;
  IsInvitee: boolean;
  AccountId: string | null;
  Status: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$EventRelation = {
  //
  Relation: SObjectDefinition$Name;
  Event: SObjectDefinition$Event;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EventRelation = {
  //
};

interface SObjectDefinition$EventRelation extends SObjectDefinition<'EventRelation'> {
    Name: 'EventRelation';
    Fields: Fields$EventRelation;
    ParentReferences: ParentReferences$EventRelation;
    ChildRelationships: ChildRelationships$EventRelation;
  }

type Fields$EventRelationChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  RelationId: string | null;
  EventId: string | null;
  IsWhat: boolean;
  IsParent: boolean;
  IsInvitee: boolean;
  AccountId: string | null;
  Status: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$EventRelationChangeEvent = {
  //
};

type ChildRelationships$EventRelationChangeEvent = {
  //
};

interface SObjectDefinition$EventRelationChangeEvent extends SObjectDefinition<'EventRelationChangeEvent'> {
    Name: 'EventRelationChangeEvent';
    Fields: Fields$EventRelationChangeEvent;
    ParentReferences: ParentReferences$EventRelationChangeEvent;
    ChildRelationships: ChildRelationships$EventRelationChangeEvent;
  }

type Fields$EventWhoRelation = {
  //
  Id: string;
  RelationId: string | null;
  EventId: string | null;
  AccountId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$EventWhoRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Event: SObjectDefinition$Event | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$EventWhoRelation = {
  //
};

interface SObjectDefinition$EventWhoRelation extends SObjectDefinition<'EventWhoRelation'> {
    Name: 'EventWhoRelation';
    Fields: Fields$EventWhoRelation;
    ParentReferences: ParentReferences$EventWhoRelation;
    ChildRelationships: ChildRelationships$EventWhoRelation;
  }

type Fields$Expense__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Amount__c: number | null;
  Date__c: DateString | null;
  Expense_Category__c: string | null;
  Is_Billable__c: boolean;
  Job_Placement__c: string | null;
  Notes__c: string | null;
  Resource__c: string | null;
};

type ParentReferences$Expense__ChangeEvent = {
  //
};

type ChildRelationships$Expense__ChangeEvent = {
  //
};

interface SObjectDefinition$Expense__ChangeEvent extends SObjectDefinition<'Expense__ChangeEvent'> {
    Name: 'Expense__ChangeEvent';
    Fields: Fields$Expense__ChangeEvent;
    ParentReferences: ParentReferences$Expense__ChangeEvent;
    ChildRelationships: ChildRelationships$Expense__ChangeEvent;
  }

type Fields$Expense__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Amount__c: number;
  Date__c: DateString;
  Expense_Category__c: string | null;
  Is_Billable__c: boolean;
  Job_Placement__c: string | null;
  Notes__c: string | null;
  Resource__c: string;
};

type ParentReferences$Expense__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c | null;
  Resource__r: SObjectDefinition$Contact;
};

type ChildRelationships$Expense__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Expense__c extends SObjectDefinition<'Expense__c'> {
    Name: 'Expense__c';
    Fields: Fields$Expense__c;
    ParentReferences: ParentReferences$Expense__c;
    ChildRelationships: ChildRelationships$Expense__c;
  }

type Fields$ExpressionFilter = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FilterConditionLogic: string | null;
  ContextId: string;
  FilterDescription: string | null;
};

type ParentReferences$ExpressionFilter = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Context: SObjectDefinition$MacroInstruction;
};

type ChildRelationships$ExpressionFilter = {
  //
};

interface SObjectDefinition$ExpressionFilter extends SObjectDefinition<'ExpressionFilter'> {
    Name: 'ExpressionFilter';
    Fields: Fields$ExpressionFilter;
    ParentReferences: ParentReferences$ExpressionFilter;
    ChildRelationships: ChildRelationships$ExpressionFilter;
  }

type Fields$ExpressionFilterCriteria = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FilterTarget: string | null;
  FilterTargetValue: string | null;
  Operation: string;
  SortOrder: number | null;
  ExpressionFilterId: string;
};

type ParentReferences$ExpressionFilterCriteria = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ExpressionFilter: SObjectDefinition$ExpressionFilter;
};

type ChildRelationships$ExpressionFilterCriteria = {
  //
};

interface SObjectDefinition$ExpressionFilterCriteria extends SObjectDefinition<'ExpressionFilterCriteria'> {
    Name: 'ExpressionFilterCriteria';
    Fields: Fields$ExpressionFilterCriteria;
    ParentReferences: ParentReferences$ExpressionFilterCriteria;
    ChildRelationships: ChildRelationships$ExpressionFilterCriteria;
  }

type Fields$ExternalDataSource = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Type: string;
  Endpoint: string | null;
  Repository: string | null;
  IsWritable: boolean;
  PrincipalType: string;
  Protocol: string;
  AuthProviderId: string | null;
  LargeIconId: string | null;
  SmallIconId: string | null;
  CustomConfiguration: string | null;
};

type ParentReferences$ExternalDataSource = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthProvider: SObjectDefinition$AuthProvider | null;
  LargeIcon: SObjectDefinition$StaticResource | null;
  SmallIcon: SObjectDefinition$StaticResource | null;
};

type ChildRelationships$ExternalDataSource = {
  //
  CustomHttpHeaders: SObjectDefinition$CustomHttpHeader;
  UserAuths: SObjectDefinition$ExternalDataUserAuth;
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$ExternalDataSource extends SObjectDefinition<'ExternalDataSource'> {
    Name: 'ExternalDataSource';
    Fields: Fields$ExternalDataSource;
    ParentReferences: ParentReferences$ExternalDataSource;
    ChildRelationships: ChildRelationships$ExternalDataSource;
  }

type Fields$ExternalDataUserAuth = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalDataSourceId: string;
  UserId: string | null;
  Protocol: string | null;
  Username: string | null;
  Password: string | null;
  AuthProviderId: string | null;
};

type ParentReferences$ExternalDataUserAuth = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ExternalDataSource: SObjectDefinition$Name;
  User: SObjectDefinition$User | null;
  AuthProvider: SObjectDefinition$AuthProvider | null;
};

type ChildRelationships$ExternalDataUserAuth = {
  //
};

interface SObjectDefinition$ExternalDataUserAuth extends SObjectDefinition<'ExternalDataUserAuth'> {
    Name: 'ExternalDataUserAuth';
    Fields: Fields$ExternalDataUserAuth;
    ParentReferences: ParentReferences$ExternalDataUserAuth;
    ChildRelationships: ChildRelationships$ExternalDataUserAuth;
  }

type Fields$ExternalEvent = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalId: string | null;
  Title: string | null;
  Location: string | null;
  Notes: string | null;
  Time: string | null;
};

type ParentReferences$ExternalEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ExternalEvent = {
  //
  ConferenceNumbers: SObjectDefinition$ConferenceNumber;
};

interface SObjectDefinition$ExternalEvent extends SObjectDefinition<'ExternalEvent'> {
    Name: 'ExternalEvent';
    Fields: Fields$ExternalEvent;
    ParentReferences: ParentReferences$ExternalEvent;
    ChildRelationships: ChildRelationships$ExternalEvent;
  }

type Fields$ExternalEventMapping = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalId: string | null;
  EventId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  IsRecurring: boolean;
};

type ParentReferences$ExternalEventMapping = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Event: SObjectDefinition$Event | null;
};

type ChildRelationships$ExternalEventMapping = {
  //
  Shares: SObjectDefinition$ExternalEventMappingShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$ExternalEventMapping extends SObjectDefinition<'ExternalEventMapping'> {
    Name: 'ExternalEventMapping';
    Fields: Fields$ExternalEventMapping;
    ParentReferences: ParentReferences$ExternalEventMapping;
    ChildRelationships: ChildRelationships$ExternalEventMapping;
  }

type Fields$ExternalEventMappingShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ExternalEventMappingShare = {
  //
  Parent: SObjectDefinition$ExternalEventMapping;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ExternalEventMappingShare = {
  //
};

interface SObjectDefinition$ExternalEventMappingShare extends SObjectDefinition<'ExternalEventMappingShare'> {
    Name: 'ExternalEventMappingShare';
    Fields: Fields$ExternalEventMappingShare;
    ParentReferences: ParentReferences$ExternalEventMappingShare;
    ChildRelationships: ChildRelationships$ExternalEventMappingShare;
  }

type Fields$ExternalSocialAccount = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalAccountId: string;
  Username: string | null;
  Provider: string;
  ProviderUserId: string;
  ExternalPictureURL: string | null;
  IsActive: boolean;
  SocialPropertyId: string | null;
  IsAuthenticated: boolean;
  TopicId: string | null;
  DataSourceId: string | null;
  RuleId: string | null;
  IsDataSourceActive: boolean;
  UniqueName: string | null;
  DefaultResponseAccountId: string | null;
  ProfileUrl: string | null;
  AuthorizedBy: string | null;
  IsCaseCreationEnabled: boolean;
};

type ParentReferences$ExternalSocialAccount = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DefaultResponseAccount: SObjectDefinition$ExternalSocialAccount | null;
};

type ChildRelationships$ExternalSocialAccount = {
  //
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$ExternalSocialAccount extends SObjectDefinition<'ExternalSocialAccount'> {
    Name: 'ExternalSocialAccount';
    Fields: Fields$ExternalSocialAccount;
    ParentReferences: ParentReferences$ExternalSocialAccount;
    ChildRelationships: ChildRelationships$ExternalSocialAccount;
  }

type Fields$FeedAttachment = {
  //
  Id: string;
  FeedEntityId: string;
  Type: string;
  RecordId: string | null;
  Title: string | null;
  Value: string | null;
  IsDeleted: boolean;
};

type ParentReferences$FeedAttachment = {
  //
};

type ChildRelationships$FeedAttachment = {
  //
};

interface SObjectDefinition$FeedAttachment extends SObjectDefinition<'FeedAttachment'> {
    Name: 'FeedAttachment';
    Fields: Fields$FeedAttachment;
    ParentReferences: ParentReferences$FeedAttachment;
    ChildRelationships: ChildRelationships$FeedAttachment;
  }

type Fields$FeedComment = {
  //
  Id: string;
  FeedItemId: string;
  ParentId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  Revision: number | null;
  LastEditById: string | null;
  LastEditDate: DateString | null;
  CommentBody: string;
  IsDeleted: boolean;
  InsertedById: string;
  CommentType: string | null;
  RelatedRecordId: string | null;
  IsRichText: boolean;
  IsVerified: boolean;
  HasEntityLinks: boolean;
  Status: string | null;
  ThreadParentId: string | null;
  ThreadLevel: number | null;
  ThreadChildrenCount: number | null;
  ThreadLastUpdatedDate: DateString | null;
};

type ParentReferences$FeedComment = {
  //
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User;
  ThreadParent: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$FeedComment = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedThreadedComments: SObjectDefinition$FeedComment;
  FeedRevisions: SObjectDefinition$FeedRevision;
};

interface SObjectDefinition$FeedComment extends SObjectDefinition<'FeedComment'> {
    Name: 'FeedComment';
    Fields: Fields$FeedComment;
    ParentReferences: ParentReferences$FeedComment;
    ChildRelationships: ChildRelationships$FeedComment;
  }

type Fields$FeedItem = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  Revision: number | null;
  LastEditById: string | null;
  LastEditDate: DateString | null;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string;
  BestCommentId: string | null;
  HasContent: boolean;
  HasLink: boolean;
  HasFeedEntity: boolean;
  HasVerifiedComment: boolean;
  IsClosed: boolean;
  Status: string | null;
};

type ParentReferences$FeedItem = {
  //
  Parent: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$FeedItem = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedRevisions: SObjectDefinition$FeedRevision;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  FeedItemThanks: SObjectDefinition$WorkThanks;
};

interface SObjectDefinition$FeedItem extends SObjectDefinition<'FeedItem'> {
    Name: 'FeedItem';
    Fields: Fields$FeedItem;
    ParentReferences: ParentReferences$FeedItem;
    ChildRelationships: ChildRelationships$FeedItem;
  }

type Fields$FeedLike = {
  //
  Id: string;
  FeedItemId: string | null;
  FeedEntityId: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  InsertedById: string;
};

type ParentReferences$FeedLike = {
  //
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User;
};

type ChildRelationships$FeedLike = {
  //
};

interface SObjectDefinition$FeedLike extends SObjectDefinition<'FeedLike'> {
    Name: 'FeedLike';
    Fields: Fields$FeedLike;
    ParentReferences: ParentReferences$FeedLike;
    ChildRelationships: ChildRelationships$FeedLike;
  }

type Fields$FeedPollChoice = {
  //
  Id: string;
  FeedItemId: string;
  Position: number;
  ChoiceBody: string;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
};

type ParentReferences$FeedPollChoice = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$FeedPollChoice = {
  //
  FeedPollVotes: SObjectDefinition$FeedPollVote;
};

interface SObjectDefinition$FeedPollChoice extends SObjectDefinition<'FeedPollChoice'> {
    Name: 'FeedPollChoice';
    Fields: Fields$FeedPollChoice;
    ParentReferences: ParentReferences$FeedPollChoice;
    ChildRelationships: ChildRelationships$FeedPollChoice;
  }

type Fields$FeedPollVote = {
  //
  Id: string;
  FeedItemId: string;
  ChoiceId: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  IsDeleted: boolean;
};

type ParentReferences$FeedPollVote = {
  //
  Choice: SObjectDefinition$FeedPollChoice;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$FeedPollVote = {
  //
};

interface SObjectDefinition$FeedPollVote extends SObjectDefinition<'FeedPollVote'> {
    Name: 'FeedPollVote';
    Fields: Fields$FeedPollVote;
    ParentReferences: ParentReferences$FeedPollVote;
    ChildRelationships: ChildRelationships$FeedPollVote;
  }

type Fields$FeedRevision = {
  //
  Id: string;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  FeedEntityId: string;
  Revision: number | null;
  Action: string | null;
  EditedAttribute: string | null;
  Value: string | null;
  IsValueRichText: boolean;
};

type ParentReferences$FeedRevision = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$FeedRevision = {
  //
};

interface SObjectDefinition$FeedRevision extends SObjectDefinition<'FeedRevision'> {
    Name: 'FeedRevision';
    Fields: Fields$FeedRevision;
    ParentReferences: ParentReferences$FeedRevision;
    ChildRelationships: ChildRelationships$FeedRevision;
  }

type Fields$FeedSignal = {
  //
  Id: string;
  FeedItemId: string | null;
  FeedEntityId: string | null;
  SignalValue: number | null;
  SignalType: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  InsertedById: string;
};

type ParentReferences$FeedSignal = {
  //
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User;
};

type ChildRelationships$FeedSignal = {
  //
};

interface SObjectDefinition$FeedSignal extends SObjectDefinition<'FeedSignal'> {
    Name: 'FeedSignal';
    Fields: Fields$FeedSignal;
    ParentReferences: ParentReferences$FeedSignal;
    ChildRelationships: ChildRelationships$FeedSignal;
  }

type Fields$FeedTrackedChange = {
  //
  Id: string;
  FeedItemId: string;
  FieldName: string;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$FeedTrackedChange = {
  //
};

type ChildRelationships$FeedTrackedChange = {
  //
};

interface SObjectDefinition$FeedTrackedChange extends SObjectDefinition<'FeedTrackedChange'> {
    Name: 'FeedTrackedChange';
    Fields: Fields$FeedTrackedChange;
    ParentReferences: ParentReferences$FeedTrackedChange;
    ChildRelationships: ChildRelationships$FeedTrackedChange;
  }

type Fields$FieldDefinition = {
  //
  Id: string;
  DurableId: string | null;
  QualifiedApiName: string;
  EntityDefinitionId: string | null;
  NamespacePrefix: string | null;
  DeveloperName: string | null;
  MasterLabel: string;
  Label: string | null;
  Length: number | null;
  DataType: string | null;
  ServiceDataTypeId: string | null;
  ValueTypeId: string | null;
  ExtraTypeInfo: string | null;
  IsCalculated: boolean;
  IsHighScaleNumber: boolean;
  IsHtmlFormatted: boolean;
  IsNameField: boolean;
  IsNillable: boolean;
  IsWorkflowFilterable: boolean;
  IsCompactLayoutable: boolean;
  Precision: number | null;
  Scale: number | null;
  IsFieldHistoryTracked: boolean;
  IsIndexed: boolean;
  IsApiFilterable: boolean;
  IsApiSortable: boolean;
  IsListFilterable: boolean;
  IsListSortable: boolean;
  IsApiGroupable: boolean;
  IsListVisible: boolean;
  ControllingFieldDefinitionId: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  PublisherId: string | null;
  RunningUserFieldAccessId: string | null;
  RelationshipName: string | null;
  ReferenceTo: any | null;
  ReferenceTargetField: string | null;
  IsCompound: boolean;
  IsSearchPrefilterable: boolean;
  IsPolymorphicForeignKey: boolean;
  IsAiPredictionField: boolean;
  BusinessOwnerId: string | null;
  BusinessStatus: string | null;
  SecurityClassification: string | null;
  ComplianceGroup: string | null;
  Description: string | null;
};

type ParentReferences$FieldDefinition = {
  //
  LastModifiedBy: SObjectDefinition$User;
  BusinessOwner: SObjectDefinition$Name | null;
};

type ChildRelationships$FieldDefinition = {
  //
};

interface SObjectDefinition$FieldDefinition extends SObjectDefinition<'FieldDefinition'> {
    Name: 'FieldDefinition';
    Fields: Fields$FieldDefinition;
    ParentReferences: ParentReferences$FieldDefinition;
    ChildRelationships: ChildRelationships$FieldDefinition;
  }

type Fields$FieldPermissions = {
  //
  Id: string;
  ParentId: string;
  SobjectType: string;
  Field: string;
  PermissionsEdit: boolean;
  PermissionsRead: boolean;
  SystemModstamp: DateString;
};

type ParentReferences$FieldPermissions = {
  //
  Parent: SObjectDefinition$PermissionSet;
};

type ChildRelationships$FieldPermissions = {
  //
};

interface SObjectDefinition$FieldPermissions extends SObjectDefinition<'FieldPermissions'> {
    Name: 'FieldPermissions';
    Fields: Fields$FieldPermissions;
    ParentReferences: ParentReferences$FieldPermissions;
    ChildRelationships: ChildRelationships$FieldPermissions;
  }

type Fields$FieldSecurityClassification = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  Description: string | null;
  IsHighRiskLevel: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$FieldSecurityClassification = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FieldSecurityClassification = {
  //
};

interface SObjectDefinition$FieldSecurityClassification extends SObjectDefinition<'FieldSecurityClassification'> {
    Name: 'FieldSecurityClassification';
    Fields: Fields$FieldSecurityClassification;
    ParentReferences: ParentReferences$FieldSecurityClassification;
    ChildRelationships: ChildRelationships$FieldSecurityClassification;
  }

type Fields$FileSearchActivity = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SearchTerm: string;
  QueryDate: DateString;
  CountQueries: number;
  CountUsers: number;
  AvgNumResults: number;
  Period: string;
  QueryLanguage: string;
  ClickRank: number | null;
};

type ParentReferences$FileSearchActivity = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FileSearchActivity = {
  //
};

interface SObjectDefinition$FileSearchActivity extends SObjectDefinition<'FileSearchActivity'> {
    Name: 'FileSearchActivity';
    Fields: Fields$FileSearchActivity;
    ParentReferences: ParentReferences$FileSearchActivity;
    ChildRelationships: ChildRelationships$FileSearchActivity;
  }

type Fields$FiscalYearSettings = {
  //
  Id: string;
  PeriodId: string | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Name: string;
  IsStandardYear: boolean;
  YearType: string | null;
  QuarterLabelScheme: string | null;
  PeriodLabelScheme: string | null;
  WeekLabelScheme: string | null;
  QuarterPrefix: string | null;
  PeriodPrefix: string | null;
  WeekStartDay: number | null;
  Description: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$FiscalYearSettings = {
  //
};

type ChildRelationships$FiscalYearSettings = {
  //
  Periods: SObjectDefinition$Period;
};

interface SObjectDefinition$FiscalYearSettings extends SObjectDefinition<'FiscalYearSettings'> {
    Name: 'FiscalYearSettings';
    Fields: Fields$FiscalYearSettings;
    ParentReferences: ParentReferences$FiscalYearSettings;
    ChildRelationships: ChildRelationships$FiscalYearSettings;
  }

type Fields$FlexQueueItem = {
  //
  Id: string;
  FlexQueueItemId: string | null;
  JobType: string;
  AsyncApexJobId: string;
  JobPosition: number;
};

type ParentReferences$FlexQueueItem = {
  //
  AsyncApexJob: SObjectDefinition$AsyncApexJob;
};

type ChildRelationships$FlexQueueItem = {
  //
};

interface SObjectDefinition$FlexQueueItem extends SObjectDefinition<'FlexQueueItem'> {
    Name: 'FlexQueueItem';
    Fields: Fields$FlexQueueItem;
    ParentReferences: ParentReferences$FlexQueueItem;
    ChildRelationships: ChildRelationships$FlexQueueItem;
  }

type Fields$FlowDefinitionView = {
  //
  Id: string;
  DurableId: string | null;
  ApiName: string | null;
  Label: string | null;
  Description: string | null;
  ProcessType: string | null;
  TriggerType: string | null;
  NamespacePrefix: string | null;
  ActiveVersionId: string | null;
  LatestVersionId: string | null;
  LastModifiedBy: string | null;
  IsActive: boolean;
  IsOutOfDate: boolean;
  LastModifiedDate: DateString;
  IsTemplate: boolean;
  IsSwingFlow: boolean;
  Builder: string | null;
  ManageableState: string | null;
  InstalledPackageName: string | null;
  TriggerOrder: number | null;
};

type ParentReferences$FlowDefinitionView = {
  //
};

type ChildRelationships$FlowDefinitionView = {
  //
  Versions: SObjectDefinition$FlowVersionView;
};

interface SObjectDefinition$FlowDefinitionView extends SObjectDefinition<'FlowDefinitionView'> {
    Name: 'FlowDefinitionView';
    Fields: Fields$FlowDefinitionView;
    ParentReferences: ParentReferences$FlowDefinitionView;
    ChildRelationships: ChildRelationships$FlowDefinitionView;
  }

type Fields$FlowExecutionErrorEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  EventIdentifier: string;
  UserId: string | null;
  Username: string | null;
  EventDate: DateString;
  InterviewStartDate: DateString;
  FlowExecutionStartDate: DateString | null;
  FlowExecutionEndDate: DateString | null;
  InterviewGuid: string;
  InterviewBatchId: string | null;
  InterviewRequestId: string | null;
  FlowNamespace: string | null;
  FlowApiName: string;
  FlowVersionId: string;
  StageQualifiedApiName: string | null;
  ProcessType: string | null;
  EventType: string;
  RelatedRecordId: string | null;
  FlowVersionNumber: number | null;
  ContextRecordId: string | null;
  ContextObject: string | null;
  InterviewStartedById: string;
  ErrorId: string | null;
  ExtendedErrorCode: string | null;
  ErrorMessage: string | null;
  ElementApiName: string | null;
  ElementType: string | null;
};

type ParentReferences$FlowExecutionErrorEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  User: SObjectDefinition$User | null;
  ContextRecord: SObjectDefinition$Name | null;
  InterviewStartedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowExecutionErrorEvent = {
  //
};

interface SObjectDefinition$FlowExecutionErrorEvent extends SObjectDefinition<'FlowExecutionErrorEvent'> {
    Name: 'FlowExecutionErrorEvent';
    Fields: Fields$FlowExecutionErrorEvent;
    ParentReferences: ParentReferences$FlowExecutionErrorEvent;
    ChildRelationships: ChildRelationships$FlowExecutionErrorEvent;
  }

type Fields$FlowInterview = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CurrentElement: string | null;
  InterviewLabel: string | null;
  PauseLabel: string | null;
  Guid: string | null;
  WasPausedFromScreen: boolean;
};

type ParentReferences$FlowInterview = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowInterview = {
  //
  Shares: SObjectDefinition$FlowInterviewShare;
  RecordRelations: SObjectDefinition$FlowRecordRelation;
  StageRelations: SObjectDefinition$FlowStageRelation;
  RecordActions: SObjectDefinition$RecordAction;
};

interface SObjectDefinition$FlowInterview extends SObjectDefinition<'FlowInterview'> {
    Name: 'FlowInterview';
    Fields: Fields$FlowInterview;
    ParentReferences: ParentReferences$FlowInterview;
    ChildRelationships: ChildRelationships$FlowInterview;
  }

type Fields$FlowInterviewLog = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FlowDeveloperName: string | null;
  FlowInterviewGuid: string;
  FlowVersionNumber: number | null;
  InterviewStartTimestamp: DateString;
  InterviewEndTimestamp: DateString | null;
  InterviewDurationInMinutes: number | null;
  InterviewStatus: string;
  FlowNamespace: string | null;
  FlowLabel: string | null;
};

type ParentReferences$FlowInterviewLog = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowInterviewLog = {
  //
  FlowInterviewLogs: SObjectDefinition$FlowInterviewLogEntry;
  Shares: SObjectDefinition$FlowInterviewLogShare;
};

interface SObjectDefinition$FlowInterviewLog extends SObjectDefinition<'FlowInterviewLog'> {
    Name: 'FlowInterviewLog';
    Fields: Fields$FlowInterviewLog;
    ParentReferences: ParentReferences$FlowInterviewLog;
    ChildRelationships: ChildRelationships$FlowInterviewLog;
  }

type Fields$FlowInterviewLogEntry = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  FlowInterviewLogId: string;
  LogEntryType: string;
  ElementApiName: string | null;
  LogEntryTimestamp: DateString;
  DurationSinceStartInMinutes: number | null;
  ElementDurationInMinutes: number | null;
  ElementLabel: string | null;
};

type ParentReferences$FlowInterviewLogEntry = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  FlowInterviewLog: SObjectDefinition$FlowInterviewLog;
};

type ChildRelationships$FlowInterviewLogEntry = {
  //
};

interface SObjectDefinition$FlowInterviewLogEntry extends SObjectDefinition<'FlowInterviewLogEntry'> {
    Name: 'FlowInterviewLogEntry';
    Fields: Fields$FlowInterviewLogEntry;
    ParentReferences: ParentReferences$FlowInterviewLogEntry;
    ChildRelationships: ChildRelationships$FlowInterviewLogEntry;
  }

type Fields$FlowInterviewLogShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$FlowInterviewLogShare = {
  //
  Parent: SObjectDefinition$FlowInterviewLog;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowInterviewLogShare = {
  //
};

interface SObjectDefinition$FlowInterviewLogShare extends SObjectDefinition<'FlowInterviewLogShare'> {
    Name: 'FlowInterviewLogShare';
    Fields: Fields$FlowInterviewLogShare;
    ParentReferences: ParentReferences$FlowInterviewLogShare;
    ChildRelationships: ChildRelationships$FlowInterviewLogShare;
  }

type Fields$FlowInterviewShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$FlowInterviewShare = {
  //
  Parent: SObjectDefinition$FlowInterview;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FlowInterviewShare = {
  //
};

interface SObjectDefinition$FlowInterviewShare extends SObjectDefinition<'FlowInterviewShare'> {
    Name: 'FlowInterviewShare';
    Fields: Fields$FlowInterviewShare;
    ParentReferences: ParentReferences$FlowInterviewShare;
    ChildRelationships: ChildRelationships$FlowInterviewShare;
  }

type Fields$FlowRecordRelation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  RelatedRecordId: string;
};

type ParentReferences$FlowRecordRelation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$FlowInterview;
  RelatedRecord: SObjectDefinition$Name;
};

type ChildRelationships$FlowRecordRelation = {
  //
};

interface SObjectDefinition$FlowRecordRelation extends SObjectDefinition<'FlowRecordRelation'> {
    Name: 'FlowRecordRelation';
    Fields: Fields$FlowRecordRelation;
    ParentReferences: ParentReferences$FlowRecordRelation;
    ChildRelationships: ChildRelationships$FlowRecordRelation;
  }

type Fields$FlowStageRelation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  StageOrder: number;
  StageType: string | null;
  StageLabel: string | null;
  FlexIndex: string | null;
};

type ParentReferences$FlowStageRelation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$FlowInterview;
};

type ChildRelationships$FlowStageRelation = {
  //
};

interface SObjectDefinition$FlowStageRelation extends SObjectDefinition<'FlowStageRelation'> {
    Name: 'FlowStageRelation';
    Fields: Fields$FlowStageRelation;
    ParentReferences: ParentReferences$FlowStageRelation;
    ChildRelationships: ChildRelationships$FlowStageRelation;
  }

type Fields$FlowVariableView = {
  //
  Id: string;
  DurableId: string | null;
  FlowVersionViewId: string | null;
  ApiName: string | null;
  Description: string | null;
  DataType: string | null;
  IsInput: boolean;
  IsOutput: boolean;
  IsCollection: boolean;
  ObjectType: string | null;
};

type ParentReferences$FlowVariableView = {
  //
};

type ChildRelationships$FlowVariableView = {
  //
};

interface SObjectDefinition$FlowVariableView extends SObjectDefinition<'FlowVariableView'> {
    Name: 'FlowVariableView';
    Fields: Fields$FlowVariableView;
    ParentReferences: ParentReferences$FlowVariableView;
    ChildRelationships: ChildRelationships$FlowVariableView;
  }

type Fields$FlowVersionView = {
  //
  Id: string;
  DurableId: string | null;
  FlowDefinitionViewId: string | null;
  Label: string | null;
  Description: string | null;
  Status: string | null;
  VersionNumber: number | null;
  ProcessType: string | null;
  IsTemplate: boolean;
  RunInMode: string | null;
  LastModifiedDate: DateString;
  IsSwingFlow: boolean;
  ApiVersion: number | null;
  ApiVersionRuntime: number | null;
};

type ParentReferences$FlowVersionView = {
  //
};

type ChildRelationships$FlowVersionView = {
  //
  Variables: SObjectDefinition$FlowVariableView;
};

interface SObjectDefinition$FlowVersionView extends SObjectDefinition<'FlowVersionView'> {
    Name: 'FlowVersionView';
    Fields: Fields$FlowVersionView;
    ParentReferences: ParentReferences$FlowVersionView;
    ChildRelationships: ChildRelationships$FlowVersionView;
  }

type Fields$Folder = {
  //
  Id: string;
  ParentId: string | null;
  Name: string;
  DeveloperName: string | null;
  AccessType: string;
  IsReadonly: boolean;
  Type: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Folder = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Folder = {
  //
  SubFolders: SObjectDefinition$Folder;
};

interface SObjectDefinition$Folder extends SObjectDefinition<'Folder'> {
    Name: 'Folder';
    Fields: Fields$Folder;
    ParentReferences: ParentReferences$Folder;
    ChildRelationships: ChildRelationships$Folder;
  }

type Fields$FolderedContentDocument = {
  //
  Id: string;
  IsFolder: boolean;
  ContentDocumentId: string;
  ParentContentFolderId: string | null;
  IsDeleted: boolean;
  Title: string;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$FolderedContentDocument = {
  //
  ContentDocument: SObjectDefinition$ContentDocument;
  ParentContentFolder: SObjectDefinition$ContentFolder | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$FolderedContentDocument = {
  //
};

interface SObjectDefinition$FolderedContentDocument extends SObjectDefinition<'FolderedContentDocument'> {
    Name: 'FolderedContentDocument';
    Fields: Fields$FolderedContentDocument;
    ParentReferences: ParentReferences$FolderedContentDocument;
    ChildRelationships: ChildRelationships$FolderedContentDocument;
  }

type Fields$ForecastingAdjustment = {
  //
  Id: string;
  ForecastingItemId: string;
  PeriodId: string | null;
  StartDate: DateString;
  ProductFamily: string | null;
  ForecastingItemCategory: string;
  ForecastCategoryName: string | null;
  AdjustedAmount: number;
  AdjustedQuantity: number;
  OwnerId: string;
  IsQuantity: boolean;
  IsAmount: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
  AdjustmentNote: string | null;
};

type ParentReferences$ForecastingAdjustment = {
  //
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ForecastingType: SObjectDefinition$ForecastingType;
};

type ChildRelationships$ForecastingAdjustment = {
  //
};

interface SObjectDefinition$ForecastingAdjustment extends SObjectDefinition<'ForecastingAdjustment'> {
    Name: 'ForecastingAdjustment';
    Fields: Fields$ForecastingAdjustment;
    ParentReferences: ParentReferences$ForecastingAdjustment;
    ChildRelationships: ChildRelationships$ForecastingAdjustment;
  }

type Fields$ForecastingCategoryMapping = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SourceCategory: string;
  ForecastingItemCategory: string;
};

type ParentReferences$ForecastingCategoryMapping = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingCategoryMapping = {
  //
};

interface SObjectDefinition$ForecastingCategoryMapping extends SObjectDefinition<'ForecastingCategoryMapping'> {
    Name: 'ForecastingCategoryMapping';
    Fields: Fields$ForecastingCategoryMapping;
    ParentReferences: ParentReferences$ForecastingCategoryMapping;
    ChildRelationships: ChildRelationships$ForecastingCategoryMapping;
  }

type Fields$ForecastingDisplayedFamily = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProductFamily: string;
  DisplayPosition: number | null;
};

type ParentReferences$ForecastingDisplayedFamily = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingDisplayedFamily = {
  //
};

interface SObjectDefinition$ForecastingDisplayedFamily extends SObjectDefinition<'ForecastingDisplayedFamily'> {
    Name: 'ForecastingDisplayedFamily';
    Fields: Fields$ForecastingDisplayedFamily;
    ParentReferences: ParentReferences$ForecastingDisplayedFamily;
    ChildRelationships: ChildRelationships$ForecastingDisplayedFamily;
  }

type Fields$ForecastingFact = {
  //
  Id: string;
  OwnerId: string;
  PeriodId: string | null;
  ForecastCategoryName: string;
  OpportunityId: string;
  ForecastedObjectId: string | null;
  ForecastingItemId: string | null;
  SystemModstamp: DateString;
  ForecastingTypeId: string | null;
};

type ParentReferences$ForecastingFact = {
  //
  Owner: SObjectDefinition$User;
  ForecastingItem: SObjectDefinition$ForecastingItem | null;
  ForecastingType: SObjectDefinition$ForecastingType | null;
};

type ChildRelationships$ForecastingFact = {
  //
};

interface SObjectDefinition$ForecastingFact extends SObjectDefinition<'ForecastingFact'> {
    Name: 'ForecastingFact';
    Fields: Fields$ForecastingFact;
    ParentReferences: ParentReferences$ForecastingFact;
    ChildRelationships: ChildRelationships$ForecastingFact;
  }

type Fields$ForecastingItem = {
  //
  Id: string;
  OwnerId: string;
  PeriodId: string | null;
  ForecastingItemCategory: string;
  ForecastCategoryName: string | null;
  ParentForecastingItemId: string | null;
  ProductFamily: string | null;
  OwnerOnlyAmount: number | null;
  AmountWithoutAdjustments: number | null;
  AmountWithoutManagerAdjustment: number | null;
  ForecastAmount: number | null;
  OwnerOnlyQuantity: number | null;
  QuantityWithoutAdjustments: number | null;
  QuantityWithoutManagerAdjustment: number | null;
  ForecastQuantity: number | null;
  IsQuantity: boolean;
  IsAmount: boolean;
  HasAdjustment: boolean;
  HasOwnerAdjustment: boolean;
  IsUpToDate: boolean;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
  AmountWithoutOwnerAdjustment: number | null;
  QuantityWithoutOwnerAdjustment: number | null;
  SubordinateOverrides: number;
};

type ParentReferences$ForecastingItem = {
  //
  Owner: SObjectDefinition$User;
  Period: SObjectDefinition$Period | null;
  ParentForecastingItem: SObjectDefinition$ForecastingItem | null;
  ForecastingType: SObjectDefinition$ForecastingType;
};

type ChildRelationships$ForecastingItem = {
  //
  ForecastingFacts: SObjectDefinition$ForecastingFact;
};

interface SObjectDefinition$ForecastingItem extends SObjectDefinition<'ForecastingItem'> {
    Name: 'ForecastingItem';
    Fields: Fields$ForecastingItem;
    ParentReferences: ParentReferences$ForecastingItem;
    ChildRelationships: ChildRelationships$ForecastingItem;
  }

type Fields$ForecastingOwnerAdjustment = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingItemId: string;
  OwnerAdjustedAmount: number | null;
  OwnerAdjustedQuantity: number | null;
  OwnerAdjustmentNote: string | null;
  PeriodId: string | null;
  ForecastOwnerId: string | null;
  StartDate: DateString | null;
  ProductFamily: string | null;
  ForecastingItemCategory: string;
  ForecastCategoryName: string | null;
  IsQuantity: boolean;
  IsAmount: boolean;
  ForecastingTypeId: string | null;
};

type ParentReferences$ForecastingOwnerAdjustment = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ForecastingItem: SObjectDefinition$ForecastingItem;
  Period: SObjectDefinition$Period | null;
  ForecastOwner: SObjectDefinition$User | null;
  ForecastingType: SObjectDefinition$ForecastingType | null;
};

type ChildRelationships$ForecastingOwnerAdjustment = {
  //
};

interface SObjectDefinition$ForecastingOwnerAdjustment extends SObjectDefinition<'ForecastingOwnerAdjustment'> {
    Name: 'ForecastingOwnerAdjustment';
    Fields: Fields$ForecastingOwnerAdjustment;
    ParentReferences: ParentReferences$ForecastingOwnerAdjustment;
    ChildRelationships: ChildRelationships$ForecastingOwnerAdjustment;
  }

type Fields$ForecastingQuota = {
  //
  Id: string;
  PeriodId: string | null;
  StartDate: DateString;
  ProductFamily: string | null;
  QuotaAmount: number;
  QuotaQuantity: number;
  QuotaOwnerId: string;
  IsQuantity: boolean;
  IsAmount: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
};

type ParentReferences$ForecastingQuota = {
  //
  QuotaOwner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingQuota = {
  //
};

interface SObjectDefinition$ForecastingQuota extends SObjectDefinition<'ForecastingQuota'> {
    Name: 'ForecastingQuota';
    Fields: Fields$ForecastingQuota;
    ParentReferences: ParentReferences$ForecastingQuota;
    ChildRelationships: ChildRelationships$ForecastingQuota;
  }

type Fields$ForecastingShare = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserOrGroupId: string;
  SharedForecastManagerRoleId: string;
  AccessLevel: string;
  RoleType: string;
};

type ParentReferences$ForecastingShare = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  UserOrGroup: SObjectDefinition$User;
  SharedForecastManagerRole: SObjectDefinition$UserRole;
};

type ChildRelationships$ForecastingShare = {
  //
};

interface SObjectDefinition$ForecastingShare extends SObjectDefinition<'ForecastingShare'> {
    Name: 'ForecastingShare';
    Fields: Fields$ForecastingShare;
    ParentReferences: ParentReferences$ForecastingShare;
    ChildRelationships: ChildRelationships$ForecastingShare;
  }

type Fields$ForecastingSourceDefinition = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SourceObject: string;
  MeasureField: string | null;
  DateField: string | null;
  UserField: string | null;
  Territory2Field: string | null;
  CategoryField: string | null;
  FamilyField: string | null;
};

type ParentReferences$ForecastingSourceDefinition = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingSourceDefinition = {
  //
};

interface SObjectDefinition$ForecastingSourceDefinition extends SObjectDefinition<'ForecastingSourceDefinition'> {
    Name: 'ForecastingSourceDefinition';
    Fields: Fields$ForecastingSourceDefinition;
    ParentReferences: ParentReferences$ForecastingSourceDefinition;
    ChildRelationships: ChildRelationships$ForecastingSourceDefinition;
  }

type Fields$ForecastingType = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsActive: boolean;
  IsQuantity: boolean;
  IsAmount: boolean;
  CanDisplayQuotas: boolean;
  HasProductFamily: boolean;
  RoleType: string;
  DateType: string;
  IsPlatformType: boolean;
};

type ParentReferences$ForecastingType = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ForecastingType = {
  //
};

interface SObjectDefinition$ForecastingType extends SObjectDefinition<'ForecastingType'> {
    Name: 'ForecastingType';
    Fields: Fields$ForecastingType;
    ParentReferences: ParentReferences$ForecastingType;
    ChildRelationships: ChildRelationships$ForecastingType;
  }

type Fields$ForecastingTypeSource = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
  ForecastingSourceDefinitionId: string;
  SourceGroup: number;
};

type ParentReferences$ForecastingTypeSource = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ForecastingType: SObjectDefinition$ForecastingType;
  ForecastingSourceDefinition: SObjectDefinition$ForecastingSourceDefinition;
};

type ChildRelationships$ForecastingTypeSource = {
  //
};

interface SObjectDefinition$ForecastingTypeSource extends SObjectDefinition<'ForecastingTypeSource'> {
    Name: 'ForecastingTypeSource';
    Fields: Fields$ForecastingTypeSource;
    ParentReferences: ParentReferences$ForecastingTypeSource;
    ChildRelationships: ChildRelationships$ForecastingTypeSource;
  }

type Fields$ForecastingTypeToCategory = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ForecastingTypeId: string;
  ForecastingItemCategory: string;
  DisplayPosition: number | null;
  IsAdjustable: boolean;
  IsOwnerAdjustable: boolean;
};

type ParentReferences$ForecastingTypeToCategory = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ForecastingType: SObjectDefinition$ForecastingType;
};

type ChildRelationships$ForecastingTypeToCategory = {
  //
};

interface SObjectDefinition$ForecastingTypeToCategory extends SObjectDefinition<'ForecastingTypeToCategory'> {
    Name: 'ForecastingTypeToCategory';
    Fields: Fields$ForecastingTypeToCategory;
    ParentReferences: ParentReferences$ForecastingTypeToCategory;
    ChildRelationships: ChildRelationships$ForecastingTypeToCategory;
  }

type Fields$ForecastingUserPreference = {
  //
  Id: string;
  ExternalId: string | null;
  ForecastingStartPeriod: number | null;
  ForecastingPeriodDuration: number | null;
  ForecastingPeriodType: string | null;
  ForecastingDisplayedTypeId: string;
  ForecastingViewCurrency: string | null;
  IsHideForecastingGuidedTour: boolean;
  IsShowForecastingQuotaAttainment: boolean;
  IsHideForecastingQuotaColumn: boolean;
  IsForecastingShowQuantity: boolean;
  IsForecastingHideZeroRows: boolean;
};

type ParentReferences$ForecastingUserPreference = {
  //
  ForecastingDisplayedType: SObjectDefinition$ForecastingType;
};

type ChildRelationships$ForecastingUserPreference = {
  //
};

interface SObjectDefinition$ForecastingUserPreference extends SObjectDefinition<'ForecastingUserPreference'> {
    Name: 'ForecastingUserPreference';
    Fields: Fields$ForecastingUserPreference;
    ParentReferences: ParentReferences$ForecastingUserPreference;
    ChildRelationships: ChildRelationships$ForecastingUserPreference;
  }

type Fields$FormulaFunction = {
  //
  Id: string;
  DurableId: string | null;
  Name: string | null;
  Label: string | null;
  CategoryId: string | null;
  Description: string | null;
  ExampleString: string | null;
};

type ParentReferences$FormulaFunction = {
  //
};

type ChildRelationships$FormulaFunction = {
  //
  Types: SObjectDefinition$FormulaFunctionAllowedType;
};

interface SObjectDefinition$FormulaFunction extends SObjectDefinition<'FormulaFunction'> {
    Name: 'FormulaFunction';
    Fields: Fields$FormulaFunction;
    ParentReferences: ParentReferences$FormulaFunction;
    ChildRelationships: ChildRelationships$FormulaFunction;
  }

type Fields$FormulaFunctionAllowedType = {
  //
  Id: string;
  DurableId: string | null;
  FunctionId: string | null;
  Type: string | null;
};

type ParentReferences$FormulaFunctionAllowedType = {
  //
};

type ChildRelationships$FormulaFunctionAllowedType = {
  //
};

interface SObjectDefinition$FormulaFunctionAllowedType extends SObjectDefinition<'FormulaFunctionAllowedType'> {
    Name: 'FormulaFunctionAllowedType';
    Fields: Fields$FormulaFunctionAllowedType;
    ParentReferences: ParentReferences$FormulaFunctionAllowedType;
    ChildRelationships: ChildRelationships$FormulaFunctionAllowedType;
  }

type Fields$FormulaFunctionCategory = {
  //
  Id: string;
  DurableId: string | null;
  Name: string | null;
  Label: string | null;
};

type ParentReferences$FormulaFunctionCategory = {
  //
};

type ChildRelationships$FormulaFunctionCategory = {
  //
  Functions: SObjectDefinition$FormulaFunction;
};

interface SObjectDefinition$FormulaFunctionCategory extends SObjectDefinition<'FormulaFunctionCategory'> {
    Name: 'FormulaFunctionCategory';
    Fields: Fields$FormulaFunctionCategory;
    ParentReferences: ParentReferences$FormulaFunctionCategory;
    ChildRelationships: ChildRelationships$FormulaFunctionCategory;
  }

type Fields$Funding_Invoice__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Account__c: string | null;
  Aging__c: number | null;
  Submission_Date__c: DateString | null;
  Amount__c: number | null;
  Amount_Received__c: number | null;
  Received_Date__c: DateString | null;
  Notes__c: string | null;
  Participant__c: string | null;
};

type ParentReferences$Funding_Invoice__ChangeEvent = {
  //
};

type ChildRelationships$Funding_Invoice__ChangeEvent = {
  //
};

interface SObjectDefinition$Funding_Invoice__ChangeEvent extends SObjectDefinition<'Funding_Invoice__ChangeEvent'> {
    Name: 'Funding_Invoice__ChangeEvent';
    Fields: Fields$Funding_Invoice__ChangeEvent;
    ParentReferences: ParentReferences$Funding_Invoice__ChangeEvent;
    ChildRelationships: ChildRelationships$Funding_Invoice__ChangeEvent;
  }

type Fields$Funding_Invoice__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Funding_Invoice__History = {
  //
  Parent: SObjectDefinition$Funding_Invoice__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Funding_Invoice__History = {
  //
};

interface SObjectDefinition$Funding_Invoice__History extends SObjectDefinition<'Funding_Invoice__History'> {
    Name: 'Funding_Invoice__History';
    Fields: Fields$Funding_Invoice__History;
    ParentReferences: ParentReferences$Funding_Invoice__History;
    ChildRelationships: ChildRelationships$Funding_Invoice__History;
  }

type Fields$Funding_Invoice__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Account__c: string | null;
  Aging__c: number | null;
  Submission_Date__c: DateString;
  Amount__c: number;
  Amount_Received__c: number | null;
  Received_Date__c: DateString | null;
  Notes__c: string | null;
  Participant__c: string | null;
};

type ParentReferences$Funding_Invoice__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Account__r: SObjectDefinition$Account | null;
  Participant__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Funding_Invoice__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Histories: SObjectDefinition$Funding_Invoice__History;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Funding_Invoice__c extends SObjectDefinition<'Funding_Invoice__c'> {
    Name: 'Funding_Invoice__c';
    Fields: Fields$Funding_Invoice__c;
    ParentReferences: ParentReferences$Funding_Invoice__c;
    ChildRelationships: ChildRelationships$Funding_Invoice__c;
  }

type Fields$Funding_Source__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  RecordTypeId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Funding_Source_Name__c: string | null;
  Notes__c: string | null;
  Status__c: string | null;
  Tax_Year__c: string | null;
  Funding_Origin__c: string | null;
  Participant_Application_Required__c: string | null;
};

type ParentReferences$Funding_Source__ChangeEvent = {
  //
};

type ChildRelationships$Funding_Source__ChangeEvent = {
  //
};

interface SObjectDefinition$Funding_Source__ChangeEvent extends SObjectDefinition<'Funding_Source__ChangeEvent'> {
    Name: 'Funding_Source__ChangeEvent';
    Fields: Fields$Funding_Source__ChangeEvent;
    ParentReferences: ParentReferences$Funding_Source__ChangeEvent;
    ChildRelationships: ChildRelationships$Funding_Source__ChangeEvent;
  }

type Fields$Funding_Source__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Funding_Source__History = {
  //
  Parent: SObjectDefinition$Funding_Source__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Funding_Source__History = {
  //
};

interface SObjectDefinition$Funding_Source__History extends SObjectDefinition<'Funding_Source__History'> {
    Name: 'Funding_Source__History';
    Fields: Fields$Funding_Source__History;
    ParentReferences: ParentReferences$Funding_Source__History;
    ChildRelationships: ChildRelationships$Funding_Source__History;
  }

type Fields$Funding_Source__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Funding_Source_Name__c: string;
  Notes__c: string | null;
  Status__c: string;
  Tax_Year__c: string | null;
  Funding_Origin__c: string | null;
  Participant_Application_Required__c: string | null;
};

type ParentReferences$Funding_Source__c = {
  //
  Owner: SObjectDefinition$Name;
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Funding_Source__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Histories: SObjectDefinition$Funding_Source__History;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Funding_Source__c extends SObjectDefinition<'Funding_Source__c'> {
    Name: 'Funding_Source__c';
    Fields: Fields$Funding_Source__c;
    ParentReferences: ParentReferences$Funding_Source__c;
    ChildRelationships: ChildRelationships$Funding_Source__c;
  }

type Fields$Funding_Submission__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Funding_Source__c: string | null;
  Cohort_Participant__c: string | null;
  Potentially_Eligible__c: string | null;
  Not_Eligible_Reason__c: string | null;
  Registration_Docs_Rec_Date__c: DateString | null;
  Registration_Docs_Req_Date__c: DateString | null;
  Registration_Docs_Aging__c: number | null;
  Application_Submission_Date__c: DateString | null;
  Application_Status__c: string | null;
  Application_Aging__c: number | null;
  Participant__c: string | null;
  Funding_Source_Name__c: string | null;
  Contact__c: string | null;
  Candidate_Primary_Status__c: string | null;
};

type ParentReferences$Funding_Submission__ChangeEvent = {
  //
};

type ChildRelationships$Funding_Submission__ChangeEvent = {
  //
};

interface SObjectDefinition$Funding_Submission__ChangeEvent extends SObjectDefinition<'Funding_Submission__ChangeEvent'> {
    Name: 'Funding_Submission__ChangeEvent';
    Fields: Fields$Funding_Submission__ChangeEvent;
    ParentReferences: ParentReferences$Funding_Submission__ChangeEvent;
    ChildRelationships: ChildRelationships$Funding_Submission__ChangeEvent;
  }

type Fields$Funding_Submission__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Funding_Submission__History = {
  //
  Parent: SObjectDefinition$Funding_Submission__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Funding_Submission__History = {
  //
};

interface SObjectDefinition$Funding_Submission__History extends SObjectDefinition<'Funding_Submission__History'> {
    Name: 'Funding_Submission__History';
    Fields: Fields$Funding_Submission__History;
    ParentReferences: ParentReferences$Funding_Submission__History;
    ChildRelationships: ChildRelationships$Funding_Submission__History;
  }

type Fields$Funding_Submission__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Funding_Source__c: string;
  Cohort_Participant__c: string | null;
  Potentially_Eligible__c: string | null;
  Not_Eligible_Reason__c: string | null;
  Registration_Docs_Rec_Date__c: DateString | null;
  Registration_Docs_Req_Date__c: DateString | null;
  Registration_Docs_Aging__c: number | null;
  Application_Submission_Date__c: DateString | null;
  Application_Status__c: string | null;
  Application_Aging__c: number | null;
  Participant__c: string | null;
  Funding_Source_Name__c: string | null;
  Contact__c: string;
  Candidate_Primary_Status__c: string | null;
};

type ParentReferences$Funding_Submission__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Funding_Source__r: SObjectDefinition$Funding_Source__c;
  Cohort_Participant__r: SObjectDefinition$Cohort_Participant__c | null;
  Contact__r: SObjectDefinition$Contact;
};

type ChildRelationships$Funding_Submission__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Histories: SObjectDefinition$Funding_Submission__History;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Funding_Submission__c extends SObjectDefinition<'Funding_Submission__c'> {
    Name: 'Funding_Submission__c';
    Fields: Fields$Funding_Submission__c;
    ParentReferences: ParentReferences$Funding_Submission__c;
    ChildRelationships: ChildRelationships$Funding_Submission__c;
  }

type Fields$GrantedByLicense = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PermissionSetLicenseId: string;
  CustomPermissionId: string;
};

type ParentReferences$GrantedByLicense = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PermissionSetLicense: SObjectDefinition$PermissionSetLicense;
  CustomPermission: SObjectDefinition$CustomPermission;
};

type ChildRelationships$GrantedByLicense = {
  //
};

interface SObjectDefinition$GrantedByLicense extends SObjectDefinition<'GrantedByLicense'> {
    Name: 'GrantedByLicense';
    Fields: Fields$GrantedByLicense;
    ParentReferences: ParentReferences$GrantedByLicense;
    ChildRelationships: ChildRelationships$GrantedByLicense;
  }

type Fields$Group = {
  //
  Id: string;
  Name: string;
  DeveloperName: string | null;
  RelatedId: string | null;
  Type: string;
  Email: string | null;
  OwnerId: string;
  DoesSendEmailToMembers: boolean;
  DoesIncludeBosses: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Group = {
  //
  Related: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Group = {
  //
  GroupMembers: SObjectDefinition$GroupMember;
  QueueSobjects: SObjectDefinition$QueueSobject;
  DelegatedUsers: SObjectDefinition$User;
};

interface SObjectDefinition$Group extends SObjectDefinition<'Group'> {
    Name: 'Group';
    Fields: Fields$Group;
    ParentReferences: ParentReferences$Group;
    ChildRelationships: ChildRelationships$Group;
  }

type Fields$GroupMember = {
  //
  Id: string;
  GroupId: string;
  UserOrGroupId: string;
  SystemModstamp: DateString;
};

type ParentReferences$GroupMember = {
  //
  Group: SObjectDefinition$Group;
};

type ChildRelationships$GroupMember = {
  //
};

interface SObjectDefinition$GroupMember extends SObjectDefinition<'GroupMember'> {
    Name: 'GroupMember';
    Fields: Fields$GroupMember;
    ParentReferences: ParentReferences$GroupMember;
    ChildRelationships: ChildRelationships$GroupMember;
  }

type Fields$Holiday = {
  //
  Id: string;
  Name: string;
  Description: string | null;
  IsAllDay: boolean;
  ActivityDate: DateString | null;
  StartTimeInMinutes: number | null;
  EndTimeInMinutes: number | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsRecurrence: boolean;
  RecurrenceStartDate: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
};

type ParentReferences$Holiday = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Holiday = {
  //
  OperatingHoursHolidays: SObjectDefinition$OperatingHoursHoliday;
};

interface SObjectDefinition$Holiday extends SObjectDefinition<'Holiday'> {
    Name: 'Holiday';
    Fields: Fields$Holiday;
    ParentReferences: ParentReferences$Holiday;
    ChildRelationships: ChildRelationships$Holiday;
  }

type Fields$IconDefinition = {
  //
  Id: string;
  DurableId: string | null;
  TabDefinitionId: string | null;
  Url: string | null;
  ContentType: string | null;
  Theme: string | null;
  Height: number | null;
  Width: number | null;
};

type ParentReferences$IconDefinition = {
  //
};

type ChildRelationships$IconDefinition = {
  //
};

interface SObjectDefinition$IconDefinition extends SObjectDefinition<'IconDefinition'> {
    Name: 'IconDefinition';
    Fields: Fields$IconDefinition;
    ParentReferences: ParentReferences$IconDefinition;
    ChildRelationships: ChildRelationships$IconDefinition;
  }

type Fields$Idea = {
  //
  Id: string;
  IsDeleted: boolean;
  Title: string;
  RecordTypeId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  CommunityId: string;
  Body: string | null;
  NumComments: number | null;
  VoteScore: number | null;
  VoteTotal: number | null;
  Categories: string | null;
  Status: string | null;
  LastCommentDate: DateString | null;
  LastCommentId: string | null;
  ParentIdeaId: string | null;
  IsHtml: boolean;
  IsMerged: boolean;
  CreatorFullPhotoUrl: string | null;
  CreatorSmallPhotoUrl: string | null;
  CreatorName: string | null;
};

type ParentReferences$Idea = {
  //
  RecordType: SObjectDefinition$RecordType | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Community: SObjectDefinition$Community;
  LastComment: SObjectDefinition$IdeaComment | null;
  ParentIdea: SObjectDefinition$Idea | null;
};

type ChildRelationships$Idea = {
  //
  Comments: SObjectDefinition$IdeaComment;
  Votes: SObjectDefinition$Vote;
};

interface SObjectDefinition$Idea extends SObjectDefinition<'Idea'> {
    Name: 'Idea';
    Fields: Fields$Idea;
    ParentReferences: ParentReferences$Idea;
    ChildRelationships: ChildRelationships$Idea;
  }

type Fields$IdeaComment = {
  //
  Id: string;
  IdeaId: string;
  CommunityId: string | null;
  CommentBody: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  IsHtml: boolean;
  CreatorFullPhotoUrl: string | null;
  CreatorSmallPhotoUrl: string | null;
  CreatorName: string | null;
  UpVotes: number | null;
};

type ParentReferences$IdeaComment = {
  //
  Idea: SObjectDefinition$Idea;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$IdeaComment = {
  //
  Votes: SObjectDefinition$Vote;
};

interface SObjectDefinition$IdeaComment extends SObjectDefinition<'IdeaComment'> {
    Name: 'IdeaComment';
    Fields: Fields$IdeaComment;
    ParentReferences: ParentReferences$IdeaComment;
    ChildRelationships: ChildRelationships$IdeaComment;
  }

type Fields$IdpEventLog = {
  //
  Id: string;
  InitiatedBy: string;
  Timestamp: DateString | null;
  ErrorCode: string;
  SamlEntityUrl: string;
  UserId: string | null;
  AuthSessionId: string | null;
  SsoType: string | null;
  AppId: string | null;
  IdentityUsed: string | null;
  OptionsHasLogoutUrl: boolean;
};

type ParentReferences$IdpEventLog = {
  //
};

type ChildRelationships$IdpEventLog = {
  //
};

interface SObjectDefinition$IdpEventLog extends SObjectDefinition<'IdpEventLog'> {
    Name: 'IdpEventLog';
    Fields: Fields$IdpEventLog;
    ParentReferences: ParentReferences$IdpEventLog;
    ChildRelationships: ChildRelationships$IdpEventLog;
  }

type Fields$IframeWhiteListUrl = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Url: string | null;
  Context: string;
};

type ParentReferences$IframeWhiteListUrl = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$IframeWhiteListUrl = {
  //
};

interface SObjectDefinition$IframeWhiteListUrl extends SObjectDefinition<'IframeWhiteListUrl'> {
    Name: 'IframeWhiteListUrl';
    Fields: Fields$IframeWhiteListUrl;
    ParentReferences: ParentReferences$IframeWhiteListUrl;
    ChildRelationships: ChildRelationships$IframeWhiteListUrl;
  }

type Fields$Image = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ImageViewType: string | null;
  IsActive: boolean;
  ImageClass: string | null;
  ImageClassObjectType: string | null;
  ContentDocumentId: string | null;
  CapturedAngle: string | null;
  Title: string | null;
  AlternateText: string | null;
  Url: string | null;
};

type ParentReferences$Image = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ContentDocument: SObjectDefinition$ContentDocument | null;
};

type ChildRelationships$Image = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Shares: SObjectDefinition$ImageShare;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$Image extends SObjectDefinition<'Image'> {
    Name: 'Image';
    Fields: Fields$Image;
    ParentReferences: ParentReferences$Image;
    ChildRelationships: ChildRelationships$Image;
  }

type Fields$ImageShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ImageShare = {
  //
  Parent: SObjectDefinition$Image;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ImageShare = {
  //
};

interface SObjectDefinition$ImageShare extends SObjectDefinition<'ImageShare'> {
    Name: 'ImageShare';
    Fields: Fields$ImageShare;
    ParentReferences: ParentReferences$ImageShare;
    ChildRelationships: ChildRelationships$ImageShare;
  }

type Fields$Individual = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  LastName: string;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string;
  HasOptedOutTracking: boolean;
  HasOptedOutProfiling: boolean;
  HasOptedOutProcessing: boolean;
  HasOptedOutSolicit: boolean;
  ShouldForget: boolean;
  SendIndividualData: boolean;
  CanStorePiiElsewhere: boolean;
  HasOptedOutGeoTracking: boolean;
  BirthDate: DateString | null;
  DeathDate: DateString | null;
  ConvictionsCount: number | null;
  ChildrenCount: number | null;
  MilitaryService: string | null;
  IsHomeOwner: boolean;
  Occupation: string | null;
  Website: string | null;
  IndividualsAge: string | null;
  LastViewedDate: DateString | null;
  MasterRecordId: string | null;
  ConsumerCreditScore: number | null;
  ConsumerCreditScoreProviderName: string | null;
  InfluencerRating: number | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Individual = {
  //
  Owner: SObjectDefinition$User;
  MasterRecord: SObjectDefinition$Individual | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Individual = {
  //
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  Contacts: SObjectDefinition$Contact;
  ContactPointAddresses: SObjectDefinition$ContactPointAddress;
  ContactPointEmails: SObjectDefinition$ContactPointEmail;
  ContactPointPhones: SObjectDefinition$ContactPointPhone;
  Individuals: SObjectDefinition$ContactPointTypeConsent;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Histories: SObjectDefinition$IndividualHistory;
  Shares: SObjectDefinition$IndividualShare;
  Leads: SObjectDefinition$Lead;
  PartyConsents: SObjectDefinition$PartyConsent;
};

interface SObjectDefinition$Individual extends SObjectDefinition<'Individual'> {
    Name: 'Individual';
    Fields: Fields$Individual;
    ParentReferences: ParentReferences$Individual;
    ChildRelationships: ChildRelationships$Individual;
  }

type Fields$IndividualChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  LastName: string | null;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string | null;
  HasOptedOutTracking: boolean;
  HasOptedOutProfiling: boolean;
  HasOptedOutProcessing: boolean;
  HasOptedOutSolicit: boolean;
  ShouldForget: boolean;
  SendIndividualData: boolean;
  CanStorePiiElsewhere: boolean;
  HasOptedOutGeoTracking: boolean;
  BirthDate: DateString | null;
  DeathDate: DateString | null;
  ConvictionsCount: number | null;
  ChildrenCount: number | null;
  MilitaryService: string | null;
  IsHomeOwner: boolean;
  Occupation: string | null;
  Website: string | null;
  IndividualsAge: string | null;
  ConsumerCreditScore: number | null;
  ConsumerCreditScoreProviderName: string | null;
  InfluencerRating: number | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$IndividualChangeEvent = {
  //
};

type ChildRelationships$IndividualChangeEvent = {
  //
};

interface SObjectDefinition$IndividualChangeEvent extends SObjectDefinition<'IndividualChangeEvent'> {
    Name: 'IndividualChangeEvent';
    Fields: Fields$IndividualChangeEvent;
    ParentReferences: ParentReferences$IndividualChangeEvent;
    ChildRelationships: ChildRelationships$IndividualChangeEvent;
  }

type Fields$IndividualHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  IndividualId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$IndividualHistory = {
  //
  Individual: SObjectDefinition$Individual;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$IndividualHistory = {
  //
};

interface SObjectDefinition$IndividualHistory extends SObjectDefinition<'IndividualHistory'> {
    Name: 'IndividualHistory';
    Fields: Fields$IndividualHistory;
    ParentReferences: ParentReferences$IndividualHistory;
    ChildRelationships: ChildRelationships$IndividualHistory;
  }

type Fields$IndividualShare = {
  //
  Id: string;
  IndividualId: string;
  UserOrGroupId: string;
  IndividualAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$IndividualShare = {
  //
  Individual: SObjectDefinition$Individual;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$IndividualShare = {
  //
};

interface SObjectDefinition$IndividualShare extends SObjectDefinition<'IndividualShare'> {
    Name: 'IndividualShare';
    Fields: Fields$IndividualShare;
    ParentReferences: ParentReferences$IndividualShare;
    ChildRelationships: ChildRelationships$IndividualShare;
  }

type Fields$InstalledMobileApp = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Status: string;
  UserId: string;
  ConnectedApplicationId: string;
  Version: string | null;
};

type ParentReferences$InstalledMobileApp = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  ConnectedApplication: SObjectDefinition$ConnectedApplication;
};

type ChildRelationships$InstalledMobileApp = {
  //
};

interface SObjectDefinition$InstalledMobileApp extends SObjectDefinition<'InstalledMobileApp'> {
    Name: 'InstalledMobileApp';
    Fields: Fields$InstalledMobileApp;
    ParentReferences: ParentReferences$InstalledMobileApp;
    ChildRelationships: ChildRelationships$InstalledMobileApp;
  }

type Fields$Invoice_History__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Invoice__c: string | null;
  Snapshot__c: string | null;
  Type__c: string | null;
  Snapshot_2__c: string | null;
};

type ParentReferences$Invoice_History__ChangeEvent = {
  //
};

type ChildRelationships$Invoice_History__ChangeEvent = {
  //
};

interface SObjectDefinition$Invoice_History__ChangeEvent extends SObjectDefinition<'Invoice_History__ChangeEvent'> {
    Name: 'Invoice_History__ChangeEvent';
    Fields: Fields$Invoice_History__ChangeEvent;
    ParentReferences: ParentReferences$Invoice_History__ChangeEvent;
    ChildRelationships: ChildRelationships$Invoice_History__ChangeEvent;
  }

type Fields$Invoice_History__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Invoice__c: string;
  Snapshot__c: string | null;
  Type__c: string;
  Snapshot_2__c: string | null;
};

type ParentReferences$Invoice_History__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Invoice__r: SObjectDefinition$Invoice__c;
};

type ChildRelationships$Invoice_History__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Invoice_History__c extends SObjectDefinition<'Invoice_History__c'> {
    Name: 'Invoice_History__c';
    Fields: Fields$Invoice_History__c;
    ParentReferences: ParentReferences$Invoice_History__c;
    ChildRelationships: ChildRelationships$Invoice_History__c;
  }

type Fields$Invoice_Line__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Invoice__c: string | null;
  Description__c: string | null;
  End_Date__c: DateString | null;
  Expense__c: string | null;
  Job_Placement__c: string | null;
  Quantity__c: number | null;
  Start_Date__c: DateString | null;
  Type__c: string | null;
  Unit_Price__c: number | null;
  Total__c: number | null;
  Quantity_Override__c: number | null;
  Is_Direct_Placement__c: boolean;
  Job_Placement_Details__c: string | null;
  Settlement__c: string | null;
  Settlement_Fee__c: string | null;
  Payment_Status__c: string | null;
  Amount_Due__c: number | null;
  Total_Payments__c: number | null;
};

type ParentReferences$Invoice_Line__ChangeEvent = {
  //
};

type ChildRelationships$Invoice_Line__ChangeEvent = {
  //
};

interface SObjectDefinition$Invoice_Line__ChangeEvent extends SObjectDefinition<'Invoice_Line__ChangeEvent'> {
    Name: 'Invoice_Line__ChangeEvent';
    Fields: Fields$Invoice_Line__ChangeEvent;
    ParentReferences: ParentReferences$Invoice_Line__ChangeEvent;
    ChildRelationships: ChildRelationships$Invoice_Line__ChangeEvent;
  }

type Fields$Invoice_Line__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Invoice__c: string;
  Description__c: string | null;
  End_Date__c: DateString;
  Expense__c: string | null;
  Job_Placement__c: string | null;
  Quantity__c: number;
  Start_Date__c: DateString;
  Type__c: string;
  Unit_Price__c: number;
  Total__c: number | null;
  Quantity_Override__c: number | null;
  Is_Direct_Placement__c: boolean;
  Job_Placement_Details__c: string | null;
  Settlement__c: string | null;
  Settlement_Fee__c: string | null;
  Payment_Status__c: string | null;
  Amount_Due__c: number | null;
  Total_Payments__c: number | null;
};

type ParentReferences$Invoice_Line__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Invoice__r: SObjectDefinition$Invoice__c;
  Expense__r: SObjectDefinition$Expense__c | null;
  Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c | null;
  Job_Placement_Details__r: SObjectDefinition$Sstack_CC__JP_Information__c | null;
  Settlement__r: SObjectDefinition$Settlement__c | null;
  Settlement_Fee__r: SObjectDefinition$Settlement_Fee__c | null;
};

type ChildRelationships$Invoice_Line__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Invoice_Line__c extends SObjectDefinition<'Invoice_Line__c'> {
    Name: 'Invoice_Line__c';
    Fields: Fields$Invoice_Line__c;
    ParentReferences: ParentReferences$Invoice_Line__c;
    ChildRelationships: ChildRelationships$Invoice_Line__c;
  }

type Fields$Invoice_Payment_Line__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Invoice_Payment__c: string | null;
  Invoice_Line__c: string | null;
  Amount__c: number | null;
  Client_Address__Street__s: string | null;
  Client_Address__City__s: string | null;
  Client_Address__PostalCode__s: string | null;
  Client_Address__StateCode__s: string | null;
  Client_Address__CountryCode__s: string | null;
  Client_Address__Latitude__s: number | null;
  Client_Address__Longitude__s: number | null;
  Client_Address__GeocodeAccuracy__s: string | null;
  Client_Address__c: Address | null;
  JP_Work_Location__c: string | null;
  Resource_Address__Street__s: string | null;
  Resource_Address__City__s: string | null;
  Resource_Address__PostalCode__s: string | null;
  Resource_Address__StateCode__s: string | null;
  Resource_Address__CountryCode__s: string | null;
  Resource_Address__Latitude__s: number | null;
  Resource_Address__Longitude__s: number | null;
  Resource_Address__GeocodeAccuracy__s: string | null;
  Resource_Address__c: Address | null;
  Resource__c: string | null;
  Payment_Date__c: DateString | null;
  Type__c: string | null;
};

type ParentReferences$Invoice_Payment_Line__ChangeEvent = {
  //
};

type ChildRelationships$Invoice_Payment_Line__ChangeEvent = {
  //
};

interface SObjectDefinition$Invoice_Payment_Line__ChangeEvent extends SObjectDefinition<'Invoice_Payment_Line__ChangeEvent'> {
    Name: 'Invoice_Payment_Line__ChangeEvent';
    Fields: Fields$Invoice_Payment_Line__ChangeEvent;
    ParentReferences: ParentReferences$Invoice_Payment_Line__ChangeEvent;
    ChildRelationships: ChildRelationships$Invoice_Payment_Line__ChangeEvent;
  }

type Fields$Invoice_Payment_Line__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Invoice_Payment__c: string;
  Invoice_Line__c: string;
  Amount__c: number | null;
  Client_Address__Street__s: string | null;
  Client_Address__City__s: string | null;
  Client_Address__PostalCode__s: string | null;
  Client_Address__StateCode__s: string | null;
  Client_Address__CountryCode__s: string | null;
  Client_Address__Latitude__s: number | null;
  Client_Address__Longitude__s: number | null;
  Client_Address__GeocodeAccuracy__s: string | null;
  Client_Address__c: Address | null;
  JP_Work_Location__c: string | null;
  Resource_Address__Street__s: string | null;
  Resource_Address__City__s: string | null;
  Resource_Address__PostalCode__s: string | null;
  Resource_Address__StateCode__s: string | null;
  Resource_Address__CountryCode__s: string | null;
  Resource_Address__Latitude__s: number | null;
  Resource_Address__Longitude__s: number | null;
  Resource_Address__GeocodeAccuracy__s: string | null;
  Resource_Address__c: Address | null;
  Resource__c: string | null;
  Payment_Date__c: DateString | null;
  Type__c: string | null;
};

type ParentReferences$Invoice_Payment_Line__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Invoice_Payment__r: SObjectDefinition$Invoice_Payment__c;
  Invoice_Line__r: SObjectDefinition$Invoice_Line__c;
  Resource__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Invoice_Payment_Line__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Invoice_Payment_Line__c extends SObjectDefinition<'Invoice_Payment_Line__c'> {
    Name: 'Invoice_Payment_Line__c';
    Fields: Fields$Invoice_Payment_Line__c;
    ParentReferences: ParentReferences$Invoice_Payment_Line__c;
    ChildRelationships: ChildRelationships$Invoice_Payment_Line__c;
  }

type Fields$Invoice_Payment__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Invoice__c: string | null;
  Amount__c: number | null;
  Date__c: DateString | null;
  External_ID__c: string | null;
};

type ParentReferences$Invoice_Payment__ChangeEvent = {
  //
};

type ChildRelationships$Invoice_Payment__ChangeEvent = {
  //
};

interface SObjectDefinition$Invoice_Payment__ChangeEvent extends SObjectDefinition<'Invoice_Payment__ChangeEvent'> {
    Name: 'Invoice_Payment__ChangeEvent';
    Fields: Fields$Invoice_Payment__ChangeEvent;
    ParentReferences: ParentReferences$Invoice_Payment__ChangeEvent;
    ChildRelationships: ChildRelationships$Invoice_Payment__ChangeEvent;
  }

type Fields$Invoice_Payment__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Invoice__c: string;
  Amount__c: number | null;
  Date__c: DateString | null;
  External_ID__c: string | null;
};

type ParentReferences$Invoice_Payment__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Invoice__r: SObjectDefinition$Invoice__c;
};

type ChildRelationships$Invoice_Payment__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Invoice_Payment__c extends SObjectDefinition<'Invoice_Payment__c'> {
    Name: 'Invoice_Payment__c';
    Fields: Fields$Invoice_Payment__c;
    ParentReferences: ParentReferences$Invoice_Payment__c;
    ChildRelationships: ChildRelationships$Invoice_Payment__c;
  }

type Fields$Invoice_Settings__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Company_Name__c: string | null;
  Email_Sender_Display_Name__c: string | null;
  From_Address_Line_1__c: string | null;
  From_Address_Line_2__c: string | null;
  From_Address_Line_3__c: string | null;
  Invoices_CC_Email__c: string | null;
  Invoices_Debug_Email__c: string | null;
  Invoices_From_Email__c: string | null;
  Company_Account_Name__c: string | null;
};

type ParentReferences$Invoice_Settings__ChangeEvent = {
  //
};

type ChildRelationships$Invoice_Settings__ChangeEvent = {
  //
};

interface SObjectDefinition$Invoice_Settings__ChangeEvent extends SObjectDefinition<'Invoice_Settings__ChangeEvent'> {
    Name: 'Invoice_Settings__ChangeEvent';
    Fields: Fields$Invoice_Settings__ChangeEvent;
    ParentReferences: ParentReferences$Invoice_Settings__ChangeEvent;
    ChildRelationships: ChildRelationships$Invoice_Settings__ChangeEvent;
  }

type Fields$Invoice_Settings__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Company_Name__c: string | null;
  Email_Sender_Display_Name__c: string | null;
  From_Address_Line_1__c: string | null;
  From_Address_Line_2__c: string | null;
  From_Address_Line_3__c: string | null;
  Invoices_CC_Email__c: string | null;
  Invoices_Debug_Email__c: string | null;
  Invoices_From_Email__c: string | null;
  Company_Account_Name__c: string | null;
};

type ParentReferences$Invoice_Settings__c = {
  //
  SetupOwner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Invoice_Settings__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Invoice_Settings__c extends SObjectDefinition<'Invoice_Settings__c'> {
    Name: 'Invoice_Settings__c';
    Fields: Fields$Invoice_Settings__c;
    ParentReferences: ParentReferences$Invoice_Settings__c;
    ChildRelationships: ChildRelationships$Invoice_Settings__c;
  }

type Fields$Invoice__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Purchase_Order__c: string | null;
  Consolidated__c: boolean;
  Discount_Type__c: string | null;
  Discount__c: number | null;
  Due_Date__c: DateString | null;
  End_Date__c: DateString | null;
  Invoice_ID_Prefix__c: string | null;
  Invoice_ID__c: string | null;
  Invoice_Id_Number__c: number | null;
  Is_Deleted__c: boolean;
  Issue_Date__c: DateString | null;
  Payment_Status__c: string | null;
  Payment_Terms__c: string | null;
  Sent_At__c: DateString | null;
  Sent_to_Email__c: string | null;
  Start_Date__c: DateString | null;
  Status__c: string | null;
  Subject__c: string | null;
  Write_off_Reason__c: string | null;
  Write_off__c: number | null;
  Total_Payments__c: number | null;
  Amount_Due__c: number | null;
  Discount_Calculated__c: number | null;
  Total__c: number | null;
  Subtotal__c: number | null;
  Notes__c: string | null;
  Sent_to_Email_2__c: string | null;
  Contact__c: string | null;
  Settlement__c: string | null;
  Total_Send__c: number | null;
  Total_Payments_From_Lines__c: number | null;
  Total_Payments_Diff__c: number | null;
  Recipient__c: string | null;
  Last_Payment_Date__c: DateString | null;
  Aging_Months__c: number | null;
};

type ParentReferences$Invoice__ChangeEvent = {
  //
};

type ChildRelationships$Invoice__ChangeEvent = {
  //
};

interface SObjectDefinition$Invoice__ChangeEvent extends SObjectDefinition<'Invoice__ChangeEvent'> {
    Name: 'Invoice__ChangeEvent';
    Fields: Fields$Invoice__ChangeEvent;
    ParentReferences: ParentReferences$Invoice__ChangeEvent;
    ChildRelationships: ChildRelationships$Invoice__ChangeEvent;
  }

type Fields$Invoice__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Invoice__History = {
  //
  Parent: SObjectDefinition$Invoice__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Invoice__History = {
  //
};

interface SObjectDefinition$Invoice__History extends SObjectDefinition<'Invoice__History'> {
    Name: 'Invoice__History';
    Fields: Fields$Invoice__History;
    ParentReferences: ParentReferences$Invoice__History;
    ChildRelationships: ChildRelationships$Invoice__History;
  }

type Fields$Invoice__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Purchase_Order__c: string | null;
  Consolidated__c: boolean;
  Discount_Type__c: string | null;
  Discount__c: number | null;
  Due_Date__c: DateString;
  End_Date__c: DateString;
  Invoice_ID_Prefix__c: string | null;
  Invoice_ID__c: string;
  Invoice_Id_Number__c: number;
  Is_Deleted__c: boolean;
  Issue_Date__c: DateString;
  Payment_Status__c: string | null;
  Payment_Terms__c: string | null;
  Sent_At__c: DateString | null;
  Sent_to_Email__c: string | null;
  Start_Date__c: DateString;
  Status__c: string;
  Subject__c: string;
  Write_off_Reason__c: string | null;
  Write_off__c: number | null;
  Total_Payments__c: number | null;
  Amount_Due__c: number | null;
  Discount_Calculated__c: number | null;
  Total__c: number | null;
  Subtotal__c: number | null;
  Notes__c: string | null;
  Sent_to_Email_2__c: string | null;
  Contact__c: string | null;
  Settlement__c: string | null;
  Total_Send__c: number | null;
  Total_Payments_From_Lines__c: number | null;
  Total_Payments_Diff__c: number | null;
  Recipient__c: string | null;
  Last_Payment_Date__c: DateString | null;
  Aging_Months__c: number | null;
};

type ParentReferences$Invoice__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Purchase_Order__r: SObjectDefinition$Purchase_Order__c | null;
  Contact__r: SObjectDefinition$Contact | null;
  Settlement__r: SObjectDefinition$Settlement__c | null;
};

type ChildRelationships$Invoice__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Histories: SObjectDefinition$Invoice__History;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Invoice__c extends SObjectDefinition<'Invoice__c'> {
    Name: 'Invoice__c';
    Fields: Fields$Invoice__c;
    ParentReferences: ParentReferences$Invoice__c;
    ChildRelationships: ChildRelationships$Invoice__c;
  }

type Fields$Invoiced_Expense__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Invoice_Line__c: string | null;
  Expense__c: string | null;
  End_Date__c: DateString | null;
  Start_Date__c: DateString | null;
};

type ParentReferences$Invoiced_Expense__ChangeEvent = {
  //
};

type ChildRelationships$Invoiced_Expense__ChangeEvent = {
  //
};

interface SObjectDefinition$Invoiced_Expense__ChangeEvent extends SObjectDefinition<'Invoiced_Expense__ChangeEvent'> {
    Name: 'Invoiced_Expense__ChangeEvent';
    Fields: Fields$Invoiced_Expense__ChangeEvent;
    ParentReferences: ParentReferences$Invoiced_Expense__ChangeEvent;
    ChildRelationships: ChildRelationships$Invoiced_Expense__ChangeEvent;
  }

type Fields$Invoiced_Expense__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Invoice_Line__c: string;
  Expense__c: string;
  End_Date__c: DateString | null;
  Start_Date__c: DateString | null;
};

type ParentReferences$Invoiced_Expense__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Invoice_Line__r: SObjectDefinition$Invoice_Line__c;
  Expense__r: SObjectDefinition$Expense__c;
};

type ChildRelationships$Invoiced_Expense__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Invoiced_Expense__c extends SObjectDefinition<'Invoiced_Expense__c'> {
    Name: 'Invoiced_Expense__c';
    Fields: Fields$Invoiced_Expense__c;
    ParentReferences: ParentReferences$Invoiced_Expense__c;
    ChildRelationships: ChildRelationships$Invoiced_Expense__c;
  }

type Fields$Invoiced_Hours__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Invoice_Line__c: string | null;
  Timesheet_Line__c: string | null;
  End_Date__c: DateString | null;
  Hours_Snapshot__c: string | null;
  Start_Date__c: DateString | null;
  Timesheet_Line_Group_Id__c: string | null;
};

type ParentReferences$Invoiced_Hours__ChangeEvent = {
  //
};

type ChildRelationships$Invoiced_Hours__ChangeEvent = {
  //
};

interface SObjectDefinition$Invoiced_Hours__ChangeEvent extends SObjectDefinition<'Invoiced_Hours__ChangeEvent'> {
    Name: 'Invoiced_Hours__ChangeEvent';
    Fields: Fields$Invoiced_Hours__ChangeEvent;
    ParentReferences: ParentReferences$Invoiced_Hours__ChangeEvent;
    ChildRelationships: ChildRelationships$Invoiced_Hours__ChangeEvent;
  }

type Fields$Invoiced_Hours__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Invoice_Line__c: string;
  Timesheet_Line__c: string;
  End_Date__c: DateString;
  Hours_Snapshot__c: string | null;
  Start_Date__c: DateString;
  Timesheet_Line_Group_Id__c: string | null;
};

type ParentReferences$Invoiced_Hours__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Invoice_Line__r: SObjectDefinition$Invoice_Line__c;
  Timesheet_Line__r: SObjectDefinition$Timesheet_Line__c;
};

type ChildRelationships$Invoiced_Hours__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Invoiced_Hours__c extends SObjectDefinition<'Invoiced_Hours__c'> {
    Name: 'Invoiced_Hours__c';
    Fields: Fields$Invoiced_Hours__c;
    ParentReferences: ParentReferences$Invoiced_Hours__c;
    ChildRelationships: ChildRelationships$Invoiced_Hours__c;
  }

type Fields$Job_Portal_Settings__mdt = {
  //
  Id: string;
  DeveloperName: string;
  MasterLabel: string;
  Language: string;
  NamespacePrefix: string | null;
  Label: string | null;
  QualifiedApiName: string | null;
  Job_Description_Mgnt_Allowed_Domains__c: string | null;
};

type ParentReferences$Job_Portal_Settings__mdt = {
  //
};

type ChildRelationships$Job_Portal_Settings__mdt = {
  //
};

interface SObjectDefinition$Job_Portal_Settings__mdt extends SObjectDefinition<'Job_Portal_Settings__mdt'> {
    Name: 'Job_Portal_Settings__mdt';
    Fields: Fields$Job_Portal_Settings__mdt;
    ParentReferences: ParentReferences$Job_Portal_Settings__mdt;
    ChildRelationships: ChildRelationships$Job_Portal_Settings__mdt;
  }

type Fields$Job__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Job_Title__c: string | null;
  Job_ID__c: number | null;
  Job_Status__c: string | null;
  Min_Years_Experience__c: string | null;
  Min_Degree_Required__c: string | null;
  Job_Location__c: string | null;
  Allowable_Work_Authorization__c: string | null;
  Max_Months_to_Graduation__c: string | null;
  Min_Years_of_Coding_Experience__c: string | null;
  Min_Coding_Self_Rank__c: string | null;
  Cohort_Category__c: string | null;
  Coding_Challenge_Name__c: string | null;
  Passing_Challenge_Score__c: number | null;
  Public_Description__c: string | null;
  Year_1_Salary__c: number | null;
  Year_2_Salary__c: number | null;
  Quick_Course_Start_Date__c: DateString | null;
  Training_Length_Weeks__c: string | null;
  Office_Address__Street__s: string | null;
  Office_Address__City__s: string | null;
  Office_Address__PostalCode__s: string | null;
  Office_Address__StateCode__s: string | null;
  Office_Address__CountryCode__s: string | null;
  Office_Address__Latitude__s: number | null;
  Office_Address__Longitude__s: number | null;
  Office_Address__GeocodeAccuracy__s: string | null;
  Office_Address__c: Address | null;
  Publishing_Status__c: string | null;
  Job_Details_JSON__c: string | null;
  Coding_Challenge_Info__c: string | null;
};

type ParentReferences$Job__ChangeEvent = {
  //
};

type ChildRelationships$Job__ChangeEvent = {
  //
};

interface SObjectDefinition$Job__ChangeEvent extends SObjectDefinition<'Job__ChangeEvent'> {
    Name: 'Job__ChangeEvent';
    Fields: Fields$Job__ChangeEvent;
    ParentReferences: ParentReferences$Job__ChangeEvent;
    ChildRelationships: ChildRelationships$Job__ChangeEvent;
  }

type Fields$Job__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Job__History = {
  //
  Parent: SObjectDefinition$Job__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Job__History = {
  //
};

interface SObjectDefinition$Job__History extends SObjectDefinition<'Job__History'> {
    Name: 'Job__History';
    Fields: Fields$Job__History;
    ParentReferences: ParentReferences$Job__History;
    ChildRelationships: ChildRelationships$Job__History;
  }

type Fields$Job__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Job_Title__c: string | null;
  Job_ID__c: number;
  Job_Status__c: string | null;
  Min_Years_Experience__c: string | null;
  Min_Degree_Required__c: string | null;
  Job_Location__c: string | null;
  Allowable_Work_Authorization__c: string | null;
  Max_Months_to_Graduation__c: string | null;
  Min_Years_of_Coding_Experience__c: string | null;
  Min_Coding_Self_Rank__c: string | null;
  Cohort_Category__c: string | null;
  Coding_Challenge_Name__c: string | null;
  Passing_Challenge_Score__c: number;
  Public_Description__c: string | null;
  Year_1_Salary__c: number;
  Year_2_Salary__c: number;
  Quick_Course_Start_Date__c: DateString;
  Training_Length_Weeks__c: string | null;
  Office_Address__Street__s: string | null;
  Office_Address__City__s: string | null;
  Office_Address__PostalCode__s: string | null;
  Office_Address__StateCode__s: string | null;
  Office_Address__CountryCode__s: string | null;
  Office_Address__Latitude__s: number | null;
  Office_Address__Longitude__s: number | null;
  Office_Address__GeocodeAccuracy__s: string | null;
  Office_Address__c: Address | null;
  Publishing_Status__c: string;
  Job_Details_JSON__c: string | null;
  Coding_Challenge_Info__c: string | null;
};

type ParentReferences$Job__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Job__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Histories: SObjectDefinition$Job__History;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Job__c extends SObjectDefinition<'Job__c'> {
    Name: 'Job__c';
    Fields: Fields$Job__c;
    ParentReferences: ParentReferences$Job__c;
    ChildRelationships: ChildRelationships$Job__c;
  }

type Fields$KnowledgeableUser = {
  //
  Id: string;
  UserId: string;
  TopicId: string;
  RawRank: number | null;
  SystemModstamp: DateString;
};

type ParentReferences$KnowledgeableUser = {
  //
};

type ChildRelationships$KnowledgeableUser = {
  //
};

interface SObjectDefinition$KnowledgeableUser extends SObjectDefinition<'KnowledgeableUser'> {
    Name: 'KnowledgeableUser';
    Fields: Fields$KnowledgeableUser;
    ParentReferences: ParentReferences$KnowledgeableUser;
    ChildRelationships: ChildRelationships$KnowledgeableUser;
  }

type Fields$Lead = {
  //
  Id: string;
  IsDeleted: boolean;
  MasterRecordId: string | null;
  LastName: string;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string;
  Title: string | null;
  Company: string;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  StateCode: string | null;
  CountryCode: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Phone: string | null;
  MobilePhone: string | null;
  Email: string | null;
  Website: string | null;
  PhotoUrl: string | null;
  LeadSource: string | null;
  Status: string;
  Industry: string | null;
  Rating: string | null;
  NumberOfEmployees: number | null;
  OwnerId: string;
  IsConverted: boolean;
  ConvertedDate: DateString | null;
  ConvertedAccountId: string | null;
  ConvertedContactId: string | null;
  ConvertedOpportunityId: string | null;
  IsUnreadByOwner: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Jigsaw: string | null;
  JigsawContactId: string | null;
  EmailBouncedReason: string | null;
  EmailBouncedDate: DateString | null;
  IndividualId: string | null;
  ActivityMetricId: string | null;
  ActivityMetricRollupId: string | null;
  DSCORGPKG__Company_HQ_Address__c: string | null;
  DSCORGPKG__Company_HQ_City__c: string | null;
  DSCORGPKG__Company_HQ_Country_Code__c: string | null;
  DSCORGPKG__Company_HQ_Country_Full_Name__c: string | null;
  DSCORGPKG__Company_HQ_Postal_Code__c: string | null;
  DSCORGPKG__Company_HQ_State_Full_Name__c: string | null;
  DSCORGPKG__Company_HQ_State__c: string | null;
  DSCORGPKG__Company_Phone__c: string | null;
  DSCORGPKG__Conflict__c: string | null;
  DSCORGPKG__DO_3yr_Employees_Growth__c: string | null;
  DSCORGPKG__DO_3yr_Sales_Growth__c: string | null;
  DSCORGPKG__DeletedFromDiscoverOrg__c: string | null;
  DSCORGPKG__DiscoverOrg_Company_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_Created_On__c: DateString | null;
  DSCORGPKG__DiscoverOrg_First_Update__c: DateString | null;
  DSCORGPKG__DiscoverOrg_FullCountryName__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_LastUpdate__c: DateString | null;
  DSCORGPKG__DiscoverOrg_State_Full_Name__c: string | null;
  DSCORGPKG__DiscoverOrg_Technologies__c: string | null;
  DSCORGPKG__Email_Invalid__c: boolean;
  DSCORGPKG__Exclude_Update__c: boolean;
  DSCORGPKG__External_DiscoverOrg_Id__c: string | null;
  DSCORGPKG__Fiscal_Year_End__c: string | null;
  DSCORGPKG__Fortune_Rank__c: string | null;
  DSCORGPKG__ITOrgChart__c: string | null;
  DSCORGPKG__IT_Budget__c: number | null;
  DSCORGPKG__IT_Employees__c: number | null;
  DSCORGPKG__Job_Function__c: string | null;
  DSCORGPKG__LinkedIn_URL__c: string | null;
  DSCORGPKG__Locked_By_User__c: string | null;
  DSCORGPKG__Management_Level__c: string | null;
  DSCORGPKG__MiddleName__c: string | null;
  DSCORGPKG__NAICS_Codes__c: string | null;
  DSCORGPKG__NickName__c: string | null;
  DSCORGPKG__Other_Phone__c: string | null;
  DSCORGPKG__Ownership__c: string | null;
  DSCORGPKG__ReportsTo__c: string | null;
  DSCORGPKG__SIC_Codes__c: string | null;
  DSCORGPKG__Twitter_URL__c: string | null;
  DSCORGPKG__department__c: string | null;
  Prospect_Type__c: string | null;
  Linkedin__c: string | null;
  DB_Created_Date_without_Time__c: DateString | null;
  DB_Lead_Age__c: number | null;
  Lead_Interest__c: string | null;
  Lead_Interest_1__c: string | null;
  Lead_Interest_2__c: string | null;
  Lead_Interest_3__c: string | null;
  sansancard__CreatedByScanToSalesforce__c: boolean;
  Persona__c: string | null;
  Lead_Source__c: string | null;
  Survey_Link__c: string | null;
  Survey_Response__c: string | null;
  Organization_Type__c: string | null;
  Comments__c: string | null;
  AccountId__c: string | null;
  UTM_Campaign__c: string | null;
  UTM_Medium__c: string | null;
  UTM_Term__c: string | null;
  UTM_Source__c: string | null;
  UTM_Content__c: string | null;
  Appointment_ID__c: string | null;
  Appointment_Status__c: string | null;
  Appointment_Date_Time__c: DateString | null;
  Teams_Meeting_ID__c: string | null;
};

type ParentReferences$Lead = {
  //
  MasterRecord: SObjectDefinition$Lead | null;
  Owner: SObjectDefinition$Name;
  ConvertedAccount: SObjectDefinition$Account | null;
  ConvertedContact: SObjectDefinition$Contact | null;
  ConvertedOpportunity: SObjectDefinition$Opportunity | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Individual: SObjectDefinition$Individual | null;
  ActivityMetric: SObjectDefinition$ActivityMetric | null;
  ActivityMetricRollup: SObjectDefinition$ActivityMetricRollup | null;
  DSCORGPKG__Conflict__r: SObjectDefinition$DSCORGPKG__Conflict__c | null;
  DSCORGPKG__Locked_By_User__r: SObjectDefinition$User | null;
  AccountId__r: SObjectDefinition$Account | null;
};

type ChildRelationships$Lead = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CampaignMembers: SObjectDefinition$CampaignMember;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  EmailMessageRelations: SObjectDefinition$EmailMessageRelation;
  EmailStatuses: SObjectDefinition$EmailStatus;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  EventWhoRelations: SObjectDefinition$EventWhoRelation;
  Feeds: SObjectDefinition$LeadFeed;
  Histories: SObjectDefinition$LeadHistory;
  Shares: SObjectDefinition$LeadShare;
  ListEmailIndividualRecipients: SObjectDefinition$ListEmailIndividualRecipient;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  OutgoingEmailRelations: SObjectDefinition$OutgoingEmailRelation;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Personas: SObjectDefinition$SocialPersona;
  Posts: SObjectDefinition$SocialPost;
  ContactSurveyInvitations: SObjectDefinition$SurveyInvitation;
  SurveyInvitations: SObjectDefinition$SurveyInvitation;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TaskWhoRelations: SObjectDefinition$TaskWhoRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
  PersonRecord: SObjectDefinition$UserEmailPreferredPerson;
};

interface SObjectDefinition$Lead extends SObjectDefinition<'Lead'> {
    Name: 'Lead';
    Fields: Fields$Lead;
    ParentReferences: ParentReferences$Lead;
    ChildRelationships: ChildRelationships$Lead;
  }

type Fields$LeadChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  LastName: string | null;
  FirstName: string | null;
  Salutation: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string | null;
  Title: string | null;
  Company: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  StateCode: string | null;
  CountryCode: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Phone: string | null;
  MobilePhone: string | null;
  Email: string | null;
  Website: string | null;
  LeadSource: string | null;
  Status: string | null;
  Industry: string | null;
  Rating: string | null;
  NumberOfEmployees: number | null;
  OwnerId: string | null;
  IsConverted: boolean;
  ConvertedDate: DateString | null;
  ConvertedAccountId: string | null;
  ConvertedContactId: string | null;
  ConvertedOpportunityId: string | null;
  IsUnreadByOwner: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Jigsaw: string | null;
  JigsawContactId: string | null;
  EmailBouncedReason: string | null;
  EmailBouncedDate: DateString | null;
  IndividualId: string | null;
  DSCORGPKG__Company_HQ_Address__c: string | null;
  DSCORGPKG__Company_HQ_City__c: string | null;
  DSCORGPKG__Company_HQ_Country_Code__c: string | null;
  DSCORGPKG__Company_HQ_Country_Full_Name__c: string | null;
  DSCORGPKG__Company_HQ_Postal_Code__c: string | null;
  DSCORGPKG__Company_HQ_State_Full_Name__c: string | null;
  DSCORGPKG__Company_HQ_State__c: string | null;
  DSCORGPKG__Company_Phone__c: string | null;
  DSCORGPKG__Conflict__c: string | null;
  DSCORGPKG__DO_3yr_Employees_Growth__c: string | null;
  DSCORGPKG__DO_3yr_Sales_Growth__c: string | null;
  DSCORGPKG__DeletedFromDiscoverOrg__c: string | null;
  DSCORGPKG__DiscoverOrg_Company_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_Created_On__c: DateString | null;
  DSCORGPKG__DiscoverOrg_First_Update__c: DateString | null;
  DSCORGPKG__DiscoverOrg_FullCountryName__c: string | null;
  DSCORGPKG__DiscoverOrg_ID__c: string | null;
  DSCORGPKG__DiscoverOrg_LastUpdate__c: DateString | null;
  DSCORGPKG__DiscoverOrg_State_Full_Name__c: string | null;
  DSCORGPKG__DiscoverOrg_Technologies__c: string | null;
  DSCORGPKG__Email_Invalid__c: boolean;
  DSCORGPKG__Exclude_Update__c: boolean;
  DSCORGPKG__External_DiscoverOrg_Id__c: string | null;
  DSCORGPKG__Fiscal_Year_End__c: string | null;
  DSCORGPKG__Fortune_Rank__c: string | null;
  DSCORGPKG__ITOrgChart__c: string | null;
  DSCORGPKG__IT_Budget__c: number | null;
  DSCORGPKG__IT_Employees__c: number | null;
  DSCORGPKG__Job_Function__c: string | null;
  DSCORGPKG__LinkedIn_URL__c: string | null;
  DSCORGPKG__Locked_By_User__c: string | null;
  DSCORGPKG__Management_Level__c: string | null;
  DSCORGPKG__MiddleName__c: string | null;
  DSCORGPKG__NAICS_Codes__c: string | null;
  DSCORGPKG__NickName__c: string | null;
  DSCORGPKG__Other_Phone__c: string | null;
  DSCORGPKG__Ownership__c: string | null;
  DSCORGPKG__ReportsTo__c: string | null;
  DSCORGPKG__SIC_Codes__c: string | null;
  DSCORGPKG__Twitter_URL__c: string | null;
  DSCORGPKG__department__c: string | null;
  Prospect_Type__c: string | null;
  Linkedin__c: string | null;
  DB_Created_Date_without_Time__c: DateString | null;
  DB_Lead_Age__c: number | null;
  Lead_Interest__c: string | null;
  Lead_Interest_1__c: string | null;
  Lead_Interest_2__c: string | null;
  Lead_Interest_3__c: string | null;
  sansancard__CreatedByScanToSalesforce__c: boolean;
  Persona__c: string | null;
  Lead_Source__c: string | null;
  Survey_Link__c: string | null;
  Survey_Response__c: string | null;
  Organization_Type__c: string | null;
  Comments__c: string | null;
  AccountId__c: string | null;
  UTM_Campaign__c: string | null;
  UTM_Medium__c: string | null;
  UTM_Term__c: string | null;
  UTM_Source__c: string | null;
  UTM_Content__c: string | null;
  Appointment_ID__c: string | null;
  Appointment_Status__c: string | null;
  Appointment_Date_Time__c: DateString | null;
  Teams_Meeting_ID__c: string | null;
};

type ParentReferences$LeadChangeEvent = {
  //
};

type ChildRelationships$LeadChangeEvent = {
  //
};

interface SObjectDefinition$LeadChangeEvent extends SObjectDefinition<'LeadChangeEvent'> {
    Name: 'LeadChangeEvent';
    Fields: Fields$LeadChangeEvent;
    ParentReferences: ParentReferences$LeadChangeEvent;
    ChildRelationships: ChildRelationships$LeadChangeEvent;
  }

type Fields$LeadFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$LeadFeed = {
  //
  Parent: SObjectDefinition$Lead;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$LeadFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$LeadFeed extends SObjectDefinition<'LeadFeed'> {
    Name: 'LeadFeed';
    Fields: Fields$LeadFeed;
    ParentReferences: ParentReferences$LeadFeed;
    ChildRelationships: ChildRelationships$LeadFeed;
  }

type Fields$LeadHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  LeadId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$LeadHistory = {
  //
  Lead: SObjectDefinition$Lead;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$LeadHistory = {
  //
};

interface SObjectDefinition$LeadHistory extends SObjectDefinition<'LeadHistory'> {
    Name: 'LeadHistory';
    Fields: Fields$LeadHistory;
    ParentReferences: ParentReferences$LeadHistory;
    ChildRelationships: ChildRelationships$LeadHistory;
  }

type Fields$LeadShare = {
  //
  Id: string;
  LeadId: string;
  UserOrGroupId: string;
  LeadAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$LeadShare = {
  //
  Lead: SObjectDefinition$Lead;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LeadShare = {
  //
};

interface SObjectDefinition$LeadShare extends SObjectDefinition<'LeadShare'> {
    Name: 'LeadShare';
    Fields: Fields$LeadShare;
    ParentReferences: ParentReferences$LeadShare;
    ChildRelationships: ChildRelationships$LeadShare;
  }

type Fields$LeadStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsConverted: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$LeadStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LeadStatus = {
  //
};

interface SObjectDefinition$LeadStatus extends SObjectDefinition<'LeadStatus'> {
    Name: 'LeadStatus';
    Fields: Fields$LeadStatus;
    ParentReferences: ParentReferences$LeadStatus;
    ChildRelationships: ChildRelationships$LeadStatus;
  }

type Fields$LightningExitByPageMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserId: string;
  PageName: string | null;
  SystemModstamp: DateString;
  RecordCount: number | null;
};

type ParentReferences$LightningExitByPageMetrics = {
  //
  User: SObjectDefinition$User;
};

type ChildRelationships$LightningExitByPageMetrics = {
  //
};

interface SObjectDefinition$LightningExitByPageMetrics extends SObjectDefinition<'LightningExitByPageMetrics'> {
    Name: 'LightningExitByPageMetrics';
    Fields: Fields$LightningExitByPageMetrics;
    ParentReferences: ParentReferences$LightningExitByPageMetrics;
    ChildRelationships: ChildRelationships$LightningExitByPageMetrics;
  }

type Fields$LightningExperienceTheme = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DefaultBrandingSetId: string | null;
  ShouldOverrideLoadingImage: boolean;
  Description: string | null;
};

type ParentReferences$LightningExperienceTheme = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  DefaultBrandingSet: SObjectDefinition$BrandingSet | null;
};

type ChildRelationships$LightningExperienceTheme = {
  //
};

interface SObjectDefinition$LightningExperienceTheme extends SObjectDefinition<'LightningExperienceTheme'> {
    Name: 'LightningExperienceTheme';
    Fields: Fields$LightningExperienceTheme;
    ParentReferences: ParentReferences$LightningExperienceTheme;
    ChildRelationships: ChildRelationships$LightningExperienceTheme;
  }

type Fields$LightningOnboardingConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string | null;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CustomQuestion: string | null;
  CollaborationGroupId: string | null;
  FeedbackFormDaysFrequency: number | null;
  SendFeedbackToSalesforce: boolean;
  IsCustom: boolean;
  PromptDelayTime: number | null;
};

type ParentReferences$LightningOnboardingConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  CollaborationGroup: SObjectDefinition$CollaborationGroup | null;
};

type ChildRelationships$LightningOnboardingConfig = {
  //
};

interface SObjectDefinition$LightningOnboardingConfig extends SObjectDefinition<'LightningOnboardingConfig'> {
    Name: 'LightningOnboardingConfig';
    Fields: Fields$LightningOnboardingConfig;
    ParentReferences: ParentReferences$LightningOnboardingConfig;
    ChildRelationships: ChildRelationships$LightningOnboardingConfig;
  }

type Fields$LightningToggleMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserId: string;
  Action: string | null;
  SystemModstamp: DateString;
  RecordCount: number | null;
};

type ParentReferences$LightningToggleMetrics = {
  //
  User: SObjectDefinition$User;
};

type ChildRelationships$LightningToggleMetrics = {
  //
};

interface SObjectDefinition$LightningToggleMetrics extends SObjectDefinition<'LightningToggleMetrics'> {
    Name: 'LightningToggleMetrics';
    Fields: Fields$LightningToggleMetrics;
    ParentReferences: ParentReferences$LightningToggleMetrics;
    ChildRelationships: ChildRelationships$LightningToggleMetrics;
  }

type Fields$LightningUsageByAppTypeMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserId: string;
  AppExperience: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$LightningUsageByAppTypeMetrics = {
  //
  User: SObjectDefinition$User;
};

type ChildRelationships$LightningUsageByAppTypeMetrics = {
  //
};

interface SObjectDefinition$LightningUsageByAppTypeMetrics extends SObjectDefinition<'LightningUsageByAppTypeMetrics'> {
    Name: 'LightningUsageByAppTypeMetrics';
    Fields: Fields$LightningUsageByAppTypeMetrics;
    ParentReferences: ParentReferences$LightningUsageByAppTypeMetrics;
    ChildRelationships: ChildRelationships$LightningUsageByAppTypeMetrics;
  }

type Fields$LightningUsageByBrowserMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  PageName: string;
  Browser: string | null;
  SystemModstamp: DateString;
  RecordCountEPT: number | null;
  TotalCount: number | null;
  SumEPT: number | null;
  EptBinUnder3: number | null;
  EptBin3To5: number | null;
  EptBin5To8: number | null;
  EptBin8To10: number | null;
  EptBinOver10: number | null;
};

type ParentReferences$LightningUsageByBrowserMetrics = {
  //
};

type ChildRelationships$LightningUsageByBrowserMetrics = {
  //
};

interface SObjectDefinition$LightningUsageByBrowserMetrics extends SObjectDefinition<'LightningUsageByBrowserMetrics'> {
    Name: 'LightningUsageByBrowserMetrics';
    Fields: Fields$LightningUsageByBrowserMetrics;
    ParentReferences: ParentReferences$LightningUsageByBrowserMetrics;
    ChildRelationships: ChildRelationships$LightningUsageByBrowserMetrics;
  }

type Fields$LightningUsageByFlexiPageMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  FlexiPageType: string;
  FlexiPageNameOrId: string | null;
  SystemModstamp: DateString;
  RecordCountEPT: number | null;
  TotalCount: number | null;
  MedianEPT: number | null;
  SumEPT: number | null;
  EptBinUnder3: number | null;
  EptBin3To5: number | null;
  EptBin5To8: number | null;
  EptBin8To10: number | null;
  EptBinOver10: number | null;
  CoresBinUnder2: number | null;
  CoresBin2To4: number | null;
  CoresBin4To8: number | null;
  CoresBinOver8: number | null;
  DownlinkBinUnder3: number | null;
  DownlinkBin3To5: number | null;
  DownlinkBin5To8: number | null;
  DownlinkBin8To10: number | null;
  DownlinkBinOver10: number | null;
  RttBinUnder50: number | null;
  RttBin50To150: number | null;
  RttBinOver150: number | null;
};

type ParentReferences$LightningUsageByFlexiPageMetrics = {
  //
};

type ChildRelationships$LightningUsageByFlexiPageMetrics = {
  //
};

interface SObjectDefinition$LightningUsageByFlexiPageMetrics extends SObjectDefinition<'LightningUsageByFlexiPageMetrics'> {
    Name: 'LightningUsageByFlexiPageMetrics';
    Fields: Fields$LightningUsageByFlexiPageMetrics;
    ParentReferences: ParentReferences$LightningUsageByFlexiPageMetrics;
    ChildRelationships: ChildRelationships$LightningUsageByFlexiPageMetrics;
  }

type Fields$LightningUsageByPageMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  UserId: string;
  PageName: string | null;
  SystemModstamp: DateString;
  RecordCountEPT: number | null;
  TotalCount: number | null;
  SumEPT: number | null;
  EptBinUnder3: number | null;
  EptBin3To5: number | null;
  EptBin5To8: number | null;
  EptBin8To10: number | null;
  EptBinOver10: number | null;
  CoresBinUnder2: number | null;
  CoresBin2To4: number | null;
  CoresBin4To8: number | null;
  CoresBinOver8: number | null;
  DownlinkBinUnder3: number | null;
  DownlinkBin3To5: number | null;
  DownlinkBin5To8: number | null;
  DownlinkBin8To10: number | null;
  DownlinkBinOver10: number | null;
  RttBinUnder50: number | null;
  RttBin50To150: number | null;
  RttBinOver150: number | null;
};

type ParentReferences$LightningUsageByPageMetrics = {
  //
  User: SObjectDefinition$User;
};

type ChildRelationships$LightningUsageByPageMetrics = {
  //
};

interface SObjectDefinition$LightningUsageByPageMetrics extends SObjectDefinition<'LightningUsageByPageMetrics'> {
    Name: 'LightningUsageByPageMetrics';
    Fields: Fields$LightningUsageByPageMetrics;
    ParentReferences: ParentReferences$LightningUsageByPageMetrics;
    ChildRelationships: ChildRelationships$LightningUsageByPageMetrics;
  }

type Fields$ListEmail = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Subject: string | null;
  HtmlBody: string | null;
  TextBody: string | null;
  FromName: string | null;
  FromAddress: string;
  Status: string;
  HasAttachment: boolean;
  ScheduledDate: DateString | null;
  TotalSent: number | null;
  CampaignId: string | null;
  IsTracked: boolean;
};

type ParentReferences$ListEmail = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Campaign: SObjectDefinition$Campaign | null;
};

type ChildRelationships$ListEmail = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Shares: SObjectDefinition$ListEmailShare;
  OpenActivities: SObjectDefinition$OpenActivity;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$ListEmail extends SObjectDefinition<'ListEmail'> {
    Name: 'ListEmail';
    Fields: Fields$ListEmail;
    ParentReferences: ParentReferences$ListEmail;
    ChildRelationships: ChildRelationships$ListEmail;
  }

type Fields$ListEmailChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Subject: string | null;
  HtmlBody: string | null;
  TextBody: string | null;
  FromName: string | null;
  FromAddress: string | null;
  Status: string | null;
  HasAttachment: boolean;
  ScheduledDate: DateString | null;
  TotalSent: number | null;
  CampaignId: string | null;
  IsTracked: boolean;
};

type ParentReferences$ListEmailChangeEvent = {
  //
};

type ChildRelationships$ListEmailChangeEvent = {
  //
};

interface SObjectDefinition$ListEmailChangeEvent extends SObjectDefinition<'ListEmailChangeEvent'> {
    Name: 'ListEmailChangeEvent';
    Fields: Fields$ListEmailChangeEvent;
    ParentReferences: ParentReferences$ListEmailChangeEvent;
    ChildRelationships: ChildRelationships$ListEmailChangeEvent;
  }

type Fields$ListEmailIndividualRecipient = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ListEmailId: string;
  RecipientId: string;
};

type ParentReferences$ListEmailIndividualRecipient = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ListEmail: SObjectDefinition$ListEmail;
  Recipient: SObjectDefinition$Name;
};

type ChildRelationships$ListEmailIndividualRecipient = {
  //
};

interface SObjectDefinition$ListEmailIndividualRecipient extends SObjectDefinition<'ListEmailIndividualRecipient'> {
    Name: 'ListEmailIndividualRecipient';
    Fields: Fields$ListEmailIndividualRecipient;
    ParentReferences: ParentReferences$ListEmailIndividualRecipient;
    ChildRelationships: ChildRelationships$ListEmailIndividualRecipient;
  }

type Fields$ListEmailRecipientSource = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ListEmailId: string;
  SourceListId: string;
  SourceType: string;
};

type ParentReferences$ListEmailRecipientSource = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ListEmail: SObjectDefinition$ListEmail;
  SourceList: SObjectDefinition$Name;
};

type ChildRelationships$ListEmailRecipientSource = {
  //
};

interface SObjectDefinition$ListEmailRecipientSource extends SObjectDefinition<'ListEmailRecipientSource'> {
    Name: 'ListEmailRecipientSource';
    Fields: Fields$ListEmailRecipientSource;
    ParentReferences: ParentReferences$ListEmailRecipientSource;
    ChildRelationships: ChildRelationships$ListEmailRecipientSource;
  }

type Fields$ListEmailShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ListEmailShare = {
  //
  Parent: SObjectDefinition$ListEmail;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ListEmailShare = {
  //
};

interface SObjectDefinition$ListEmailShare extends SObjectDefinition<'ListEmailShare'> {
    Name: 'ListEmailShare';
    Fields: Fields$ListEmailShare;
    ParentReferences: ParentReferences$ListEmailShare;
    ChildRelationships: ChildRelationships$ListEmailShare;
  }

type Fields$ListView = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  SobjectType: string | null;
  IsSoqlCompatible: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$ListView = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ListView = {
  //
  ListEmailRecipientSources: SObjectDefinition$ListEmailRecipientSource;
};

interface SObjectDefinition$ListView extends SObjectDefinition<'ListView'> {
    Name: 'ListView';
    Fields: Fields$ListView;
    ParentReferences: ParentReferences$ListView;
    ChildRelationships: ChildRelationships$ListView;
  }

type Fields$ListViewChart = {
  //
  Id: string;
  IsDeleted: boolean;
  SobjectType: string;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OwnerId: string;
  ChartType: string;
  GroupingField: string | null;
  AggregateField: string | null;
  AggregateType: string;
};

type ParentReferences$ListViewChart = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Owner: SObjectDefinition$User;
};

type ChildRelationships$ListViewChart = {
  //
};

interface SObjectDefinition$ListViewChart extends SObjectDefinition<'ListViewChart'> {
    Name: 'ListViewChart';
    Fields: Fields$ListViewChart;
    ParentReferences: ParentReferences$ListViewChart;
    ChildRelationships: ChildRelationships$ListViewChart;
  }

type Fields$ListViewChartInstance = {
  //
  Id: string;
  ExternalId: string | null;
  ListViewChartId: string;
  Label: string;
  DeveloperName: string;
  SourceEntity: string;
  ListViewContextId: string;
  ChartType: string;
  IsLastViewed: boolean;
  DataQuery: string | null;
  DataQueryWithoutUserFilters: string | null;
  IsEditable: boolean;
  IsDeletable: boolean;
  GroupingField: string;
  AggregateField: string;
  AggregateType: string;
};

type ParentReferences$ListViewChartInstance = {
  //
  ListViewChart: SObjectDefinition$ListViewChart;
  ListViewContext: SObjectDefinition$ListView;
};

type ChildRelationships$ListViewChartInstance = {
  //
};

interface SObjectDefinition$ListViewChartInstance extends SObjectDefinition<'ListViewChartInstance'> {
    Name: 'ListViewChartInstance';
    Fields: Fields$ListViewChartInstance;
    ParentReferences: ParentReferences$ListViewChartInstance;
    ChildRelationships: ChildRelationships$ListViewChartInstance;
  }

type Fields$Location = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LocationType: string;
  Latitude: number | null;
  Longitude: number | null;
  Location: string | null;
  Description: string | null;
  DrivingDirections: string | null;
  TimeZone: string | null;
  ParentLocationId: string | null;
  PossessionDate: DateString | null;
  ConstructionStartDate: DateString | null;
  ConstructionEndDate: DateString | null;
  OpenDate: DateString | null;
  CloseDate: DateString | null;
  RemodelStartDate: DateString | null;
  RemodelEndDate: DateString | null;
  IsMobile: boolean;
  IsInventoryLocation: boolean;
  RootLocationId: string | null;
  LocationLevel: number | null;
  ExternalReference: string | null;
  LogoId: string | null;
};

type ParentReferences$Location = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentLocation: SObjectDefinition$Location | null;
  RootLocation: SObjectDefinition$Location | null;
  Logo: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$Location = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AssociatedLocations: SObjectDefinition$AssociatedLocation;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  ChildLocations: SObjectDefinition$Location;
  Feeds: SObjectDefinition$LocationFeed;
  Histories: SObjectDefinition$LocationHistory;
  Shares: SObjectDefinition$LocationShare;
  LocationTrustMeasures: SObjectDefinition$LocationTrustMeasure;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$Location extends SObjectDefinition<'Location'> {
    Name: 'Location';
    Fields: Fields$Location;
    ParentReferences: ParentReferences$Location;
    ChildRelationships: ChildRelationships$Location;
  }

type Fields$LocationChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  LocationType: string | null;
  Latitude: number | null;
  Longitude: number | null;
  Location: string | null;
  Description: string | null;
  DrivingDirections: string | null;
  TimeZone: string | null;
  ParentLocationId: string | null;
  PossessionDate: DateString | null;
  ConstructionStartDate: DateString | null;
  ConstructionEndDate: DateString | null;
  OpenDate: DateString | null;
  CloseDate: DateString | null;
  RemodelStartDate: DateString | null;
  RemodelEndDate: DateString | null;
  IsMobile: boolean;
  IsInventoryLocation: boolean;
  RootLocationId: string | null;
  LocationLevel: number | null;
  ExternalReference: string | null;
  LogoId: string | null;
};

type ParentReferences$LocationChangeEvent = {
  //
};

type ChildRelationships$LocationChangeEvent = {
  //
};

interface SObjectDefinition$LocationChangeEvent extends SObjectDefinition<'LocationChangeEvent'> {
    Name: 'LocationChangeEvent';
    Fields: Fields$LocationChangeEvent;
    ParentReferences: ParentReferences$LocationChangeEvent;
    ChildRelationships: ChildRelationships$LocationChangeEvent;
  }

type Fields$LocationFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$LocationFeed = {
  //
  Parent: SObjectDefinition$Location;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$LocationFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$LocationFeed extends SObjectDefinition<'LocationFeed'> {
    Name: 'LocationFeed';
    Fields: Fields$LocationFeed;
    ParentReferences: ParentReferences$LocationFeed;
    ChildRelationships: ChildRelationships$LocationFeed;
  }

type Fields$LocationHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  LocationId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$LocationHistory = {
  //
  Location: SObjectDefinition$Location;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$LocationHistory = {
  //
};

interface SObjectDefinition$LocationHistory extends SObjectDefinition<'LocationHistory'> {
    Name: 'LocationHistory';
    Fields: Fields$LocationHistory;
    ParentReferences: ParentReferences$LocationHistory;
    ChildRelationships: ChildRelationships$LocationHistory;
  }

type Fields$LocationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$LocationShare = {
  //
  Parent: SObjectDefinition$Location;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LocationShare = {
  //
};

interface SObjectDefinition$LocationShare extends SObjectDefinition<'LocationShare'> {
    Name: 'LocationShare';
    Fields: Fields$LocationShare;
    ParentReferences: ParentReferences$LocationShare;
    ChildRelationships: ChildRelationships$LocationShare;
  }

type Fields$LocationTrustMeasure = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  LocationId: string;
  Title: string;
  IsVisibleInPublic: boolean;
  IconUrl: string | null;
  Description: string;
  SortOrder: number | null;
  LocationExternalReference: string | null;
};

type ParentReferences$LocationTrustMeasure = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Location: SObjectDefinition$Location;
};

type ChildRelationships$LocationTrustMeasure = {
  //
  Shares: SObjectDefinition$LocationTrustMeasureShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$LocationTrustMeasure extends SObjectDefinition<'LocationTrustMeasure'> {
    Name: 'LocationTrustMeasure';
    Fields: Fields$LocationTrustMeasure;
    ParentReferences: ParentReferences$LocationTrustMeasure;
    ChildRelationships: ChildRelationships$LocationTrustMeasure;
  }

type Fields$LocationTrustMeasureShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$LocationTrustMeasureShare = {
  //
  Parent: SObjectDefinition$LocationTrustMeasure;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LocationTrustMeasureShare = {
  //
};

interface SObjectDefinition$LocationTrustMeasureShare extends SObjectDefinition<'LocationTrustMeasureShare'> {
    Name: 'LocationTrustMeasureShare';
    Fields: Fields$LocationTrustMeasureShare;
    ParentReferences: ParentReferences$LocationTrustMeasureShare;
    ChildRelationships: ChildRelationships$LocationTrustMeasureShare;
  }

type Fields$LoginGeo = {
  //
  Id: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  IsDeleted: boolean;
  SystemModstamp: DateString;
  LoginTime: DateString;
  CountryIso: string | null;
  Country: string | null;
  Latitude: number | null;
  Longitude: number | null;
  City: string | null;
  PostalCode: string | null;
  Subdivision: string | null;
};

type ParentReferences$LoginGeo = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$LoginGeo = {
  //
};

interface SObjectDefinition$LoginGeo extends SObjectDefinition<'LoginGeo'> {
    Name: 'LoginGeo';
    Fields: Fields$LoginGeo;
    ParentReferences: ParentReferences$LoginGeo;
    ChildRelationships: ChildRelationships$LoginGeo;
  }

type Fields$LoginHistory = {
  //
  Id: string;
  UserId: string | null;
  LoginTime: DateString;
  LoginType: string;
  SourceIp: string | null;
  LoginUrl: string | null;
  AuthenticationServiceId: string | null;
  LoginGeoId: string | null;
  TlsProtocol: string | null;
  CipherSuite: string | null;
  OptionsIsGet: boolean;
  OptionsIsPost: boolean;
  Browser: string | null;
  Platform: string | null;
  Status: string | null;
  Application: string | null;
  ClientVersion: string | null;
  ApiType: string | null;
  ApiVersion: string | null;
  CountryIso: string | null;
};

type ParentReferences$LoginHistory = {
  //
  LoginGeo: SObjectDefinition$LoginGeo | null;
};

type ChildRelationships$LoginHistory = {
  //
};

interface SObjectDefinition$LoginHistory extends SObjectDefinition<'LoginHistory'> {
    Name: 'LoginHistory';
    Fields: Fields$LoginHistory;
    ParentReferences: ParentReferences$LoginHistory;
    ChildRelationships: ChildRelationships$LoginHistory;
  }

type Fields$LoginIp = {
  //
  Id: string;
  UsersId: string;
  SourceIp: string | null;
  CreatedDate: DateString;
  IsAuthenticated: boolean;
  ChallengeSentDate: DateString | null;
  ChallengeMethod: string | null;
};

type ParentReferences$LoginIp = {
  //
  Users: SObjectDefinition$User;
};

type ChildRelationships$LoginIp = {
  //
};

interface SObjectDefinition$LoginIp extends SObjectDefinition<'LoginIp'> {
    Name: 'LoginIp';
    Fields: Fields$LoginIp;
    ParentReferences: ParentReferences$LoginIp;
    ChildRelationships: ChildRelationships$LoginIp;
  }

type Fields$LogoutEventStream = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  EventIdentifier: string | null;
  UserId: string | null;
  Username: string | null;
  EventDate: DateString | null;
  RelatedEventIdentifier: string | null;
  SessionKey: string | null;
  LoginKey: string | null;
  SessionLevel: string | null;
  SourceIp: string | null;
};

type ParentReferences$LogoutEventStream = {
  //
  CreatedBy: SObjectDefinition$User;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$LogoutEventStream = {
  //
};

interface SObjectDefinition$LogoutEventStream extends SObjectDefinition<'LogoutEventStream'> {
    Name: 'LogoutEventStream';
    Fields: Fields$LogoutEventStream;
    ParentReferences: ParentReferences$LogoutEventStream;
    ChildRelationships: ChildRelationships$LogoutEventStream;
  }

type Fields$LookedUpFromActivity = {
  //
  Id: string;
  AccountId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  Subject: string | null;
  IsTask: boolean;
  ActivityDate: DateString | null;
  ActivityDateTime: DateString | null;
  OwnerId: string | null;
  Status: string | null;
  Priority: string | null;
  IsHighPriority: boolean;
  ActivityType: string | null;
  IsClosed: boolean;
  IsAllDayEvent: boolean;
  IsVisibleInSelfService: boolean;
  DurationInMinutes: number | null;
  Location: string | null;
  Description: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  EndDateTime: DateString | null;
  StartDateTime: DateString | null;
  PrimaryWhoId: string | null;
  PrimaryAccountId: string | null;
  ActivitySubtype: string | null;
  rcsfl__CALL_UNIQUE_ID__c: string | null;
  rcsfl__CALL_UUID__c: string | null;
  rcsfl__Call_Recording__c: string | null;
  rcsfl__RC_Logging_Type__c: string | null;
  rcsfl__Recording_Information__c: string | null;
  rcsfl__external_whoid__c: string | null;
  rcsfl__hvs_disposition__c: string | null;
  rcsfl__key__c: string | null;
  DB_Activity_Type__c: string | null;
  task_type__c: string | null;
  Outreach_Task_Type__c: string | null;
};

type ParentReferences$LookedUpFromActivity = {
  //
  Account: SObjectDefinition$Account | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PrimaryWho: SObjectDefinition$Name | null;
  PrimaryAccount: SObjectDefinition$Account | null;
};

type ChildRelationships$LookedUpFromActivity = {
  //
};

interface SObjectDefinition$LookedUpFromActivity extends SObjectDefinition<'LookedUpFromActivity'> {
    Name: 'LookedUpFromActivity';
    Fields: Fields$LookedUpFromActivity;
    ParentReferences: ParentReferences$LookedUpFromActivity;
    ChildRelationships: ChildRelationships$LookedUpFromActivity;
  }

type Fields$Macro = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  IsAlohaSupported: boolean;
  IsLightningSupported: boolean;
  StartingContext: string | null;
};

type ParentReferences$Macro = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Macro = {
  //
  Histories: SObjectDefinition$MacroHistory;
  Shares: SObjectDefinition$MacroShare;
};

interface SObjectDefinition$Macro extends SObjectDefinition<'Macro'> {
    Name: 'Macro';
    Fields: Fields$Macro;
    ParentReferences: ParentReferences$Macro;
    ChildRelationships: ChildRelationships$Macro;
  }

type Fields$MacroChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Description: string | null;
  IsAlohaSupported: boolean;
  IsLightningSupported: boolean;
  StartingContext: string | null;
};

type ParentReferences$MacroChangeEvent = {
  //
};

type ChildRelationships$MacroChangeEvent = {
  //
};

interface SObjectDefinition$MacroChangeEvent extends SObjectDefinition<'MacroChangeEvent'> {
    Name: 'MacroChangeEvent';
    Fields: Fields$MacroChangeEvent;
    ParentReferences: ParentReferences$MacroChangeEvent;
    ChildRelationships: ChildRelationships$MacroChangeEvent;
  }

type Fields$MacroHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  MacroId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$MacroHistory = {
  //
  Macro: SObjectDefinition$Macro;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$MacroHistory = {
  //
};

interface SObjectDefinition$MacroHistory extends SObjectDefinition<'MacroHistory'> {
    Name: 'MacroHistory';
    Fields: Fields$MacroHistory;
    ParentReferences: ParentReferences$MacroHistory;
    ChildRelationships: ChildRelationships$MacroHistory;
  }

type Fields$MacroInstruction = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  MacroId: string;
  Operation: string;
  Target: string | null;
  Value: string | null;
  ValueRecord: string | null;
  SortOrder: number;
};

type ParentReferences$MacroInstruction = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Macro: SObjectDefinition$Macro;
};

type ChildRelationships$MacroInstruction = {
  //
};

interface SObjectDefinition$MacroInstruction extends SObjectDefinition<'MacroInstruction'> {
    Name: 'MacroInstruction';
    Fields: Fields$MacroInstruction;
    ParentReferences: ParentReferences$MacroInstruction;
    ChildRelationships: ChildRelationships$MacroInstruction;
  }

type Fields$MacroInstructionChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  MacroId: string | null;
  Operation: string | null;
  Target: string | null;
  Value: string | null;
  ValueRecord: string | null;
  SortOrder: number | null;
};

type ParentReferences$MacroInstructionChangeEvent = {
  //
};

type ChildRelationships$MacroInstructionChangeEvent = {
  //
};

interface SObjectDefinition$MacroInstructionChangeEvent extends SObjectDefinition<'MacroInstructionChangeEvent'> {
    Name: 'MacroInstructionChangeEvent';
    Fields: Fields$MacroInstructionChangeEvent;
    ParentReferences: ParentReferences$MacroInstructionChangeEvent;
    ChildRelationships: ChildRelationships$MacroInstructionChangeEvent;
  }

type Fields$MacroShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$MacroShare = {
  //
  Parent: SObjectDefinition$Macro;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MacroShare = {
  //
};

interface SObjectDefinition$MacroShare extends SObjectDefinition<'MacroShare'> {
    Name: 'MacroShare';
    Fields: Fields$MacroShare;
    ParentReferences: ParentReferences$MacroShare;
    ChildRelationships: ChildRelationships$MacroShare;
  }

type Fields$MacroUsage = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  MacroId: string;
  ContextRecord: string | null;
  ExecutedInstructionCount: number | null;
  InstructionCount: number | null;
  ExecutionEndTime: DateString | null;
  UserId: string | null;
  IsFromBulk: boolean;
  AppContext: string | null;
  ConditionCount: number | null;
  ExecutionState: string | null;
  DurationInMs: number | null;
  FailureReason: string | null;
};

type ParentReferences$MacroUsage = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Macro: SObjectDefinition$Macro;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$MacroUsage = {
  //
  Shares: SObjectDefinition$MacroUsageShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$MacroUsage extends SObjectDefinition<'MacroUsage'> {
    Name: 'MacroUsage';
    Fields: Fields$MacroUsage;
    ParentReferences: ParentReferences$MacroUsage;
    ChildRelationships: ChildRelationships$MacroUsage;
  }

type Fields$MacroUsageShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$MacroUsageShare = {
  //
  Parent: SObjectDefinition$MacroUsage;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MacroUsageShare = {
  //
};

interface SObjectDefinition$MacroUsageShare extends SObjectDefinition<'MacroUsageShare'> {
    Name: 'MacroUsageShare';
    Fields: Fields$MacroUsageShare;
    ParentReferences: ParentReferences$MacroUsageShare;
    ChildRelationships: ChildRelationships$MacroUsageShare;
  }

type Fields$MailmergeTemplate = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  Description: string | null;
  Filename: string;
  BodyLength: number | null;
  Body: BlobString;
  LastUsedDate: DateString | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SecurityOptionsAttachmentScannedForXSS: boolean;
  SecurityOptionsAttachmentHasXSSThreat: boolean;
  SecurityOptionsAttachmentScannedforFlash: boolean;
  SecurityOptionsAttachmentHasFlash: boolean;
};

type ParentReferences$MailmergeTemplate = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MailmergeTemplate = {
  //
};

interface SObjectDefinition$MailmergeTemplate extends SObjectDefinition<'MailmergeTemplate'> {
    Name: 'MailmergeTemplate';
    Fields: Fields$MailmergeTemplate;
    ParentReferences: ParentReferences$MailmergeTemplate;
    ChildRelationships: ChildRelationships$MailmergeTemplate;
  }

type Fields$Marketing__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Resource__c: string | null;
  Opportunity__c: string | null;
  Background_Check_Date__c: DateString | null;
  Bill_Rate__c: number | null;
  Employee_Type__c: string | null;
  Employer__c: string | null;
  Federal_Holidays__c: boolean;
  Health_Benefits__c: boolean;
  Number_Of_PTO_Weeks__c: number | null;
  Pay_Rate__c: number | null;
  Placement_Fee__c: number | null;
  Placement_Type__c: string | null;
  Salary_Amount__c: number | null;
  Selected_Date__c: DateString | null;
  Status__c: string | null;
  Target_Start_Date__c: DateString | null;
  X401K__c: boolean;
  Client_Name__c: string | null;
  Job_Placement__c: string | null;
  Daily_Bill_Rate__c: number | null;
  Interview_Date__c: DateString | null;
  Do_Not_Send_Notifications__c: boolean;
  Submission_Date__c: DateString | null;
  Cohort_Participant__c: string | null;
  Training_Completion_Date__c: DateString | null;
  Override_Training_Completion_Date__c: DateString | null;
  Technology__c: string | null;
  Client_Id__c: string | null;
  Technology_Override__c: string | null;
  Interview_Format__c: string | null;
  Resource_Name__c: string | null;
  Cohort_Name__c: string | null;
  Cohort_Target_Completion_Date__c: DateString | null;
  Cohort_Revised_Target_Completion_Date__c: DateString | null;
  Link_To_Resource__c: string | null;
  Interview_Readiness_Date__c: DateString | null;
  Capstone_Readiness_Date__c: DateString | null;
};

type ParentReferences$Marketing__ChangeEvent = {
  //
};

type ChildRelationships$Marketing__ChangeEvent = {
  //
};

interface SObjectDefinition$Marketing__ChangeEvent extends SObjectDefinition<'Marketing__ChangeEvent'> {
    Name: 'Marketing__ChangeEvent';
    Fields: Fields$Marketing__ChangeEvent;
    ParentReferences: ParentReferences$Marketing__ChangeEvent;
    ChildRelationships: ChildRelationships$Marketing__ChangeEvent;
  }

type Fields$Marketing__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Marketing__History = {
  //
  Parent: SObjectDefinition$Marketing__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Marketing__History = {
  //
};

interface SObjectDefinition$Marketing__History extends SObjectDefinition<'Marketing__History'> {
    Name: 'Marketing__History';
    Fields: Fields$Marketing__History;
    ParentReferences: ParentReferences$Marketing__History;
    ChildRelationships: ChildRelationships$Marketing__History;
  }

type Fields$Marketing__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Resource__c: string;
  Opportunity__c: string;
  Background_Check_Date__c: DateString | null;
  Bill_Rate__c: number | null;
  Employee_Type__c: string | null;
  Employer__c: string | null;
  Federal_Holidays__c: boolean;
  Health_Benefits__c: boolean;
  Number_Of_PTO_Weeks__c: number | null;
  Pay_Rate__c: number | null;
  Placement_Fee__c: number | null;
  Placement_Type__c: string;
  Salary_Amount__c: number | null;
  Selected_Date__c: DateString | null;
  Status__c: string;
  Target_Start_Date__c: DateString | null;
  X401K__c: boolean;
  Client_Name__c: string | null;
  Job_Placement__c: string | null;
  Daily_Bill_Rate__c: number | null;
  Interview_Date__c: DateString | null;
  Do_Not_Send_Notifications__c: boolean;
  Submission_Date__c: DateString | null;
  Cohort_Participant__c: string | null;
  Training_Completion_Date__c: DateString | null;
  Override_Training_Completion_Date__c: DateString | null;
  Technology__c: string | null;
  Client_Id__c: string | null;
  Technology_Override__c: string | null;
  Interview_Format__c: string | null;
  Resource_Name__c: string | null;
  Cohort_Name__c: string | null;
  Cohort_Target_Completion_Date__c: DateString | null;
  Cohort_Revised_Target_Completion_Date__c: DateString | null;
  Link_To_Resource__c: string | null;
  Interview_Readiness_Date__c: DateString | null;
  Capstone_Readiness_Date__c: DateString | null;
};

type ParentReferences$Marketing__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Resource__r: SObjectDefinition$Contact;
  Opportunity__r: SObjectDefinition$Opportunity;
  Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c | null;
  Cohort_Participant__r: SObjectDefinition$Cohort_Participant__c | null;
};

type ChildRelationships$Marketing__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Histories: SObjectDefinition$Marketing__History;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Marketing__c extends SObjectDefinition<'Marketing__c'> {
    Name: 'Marketing__c';
    Fields: Fields$Marketing__c;
    ParentReferences: ParentReferences$Marketing__c;
    ChildRelationships: ChildRelationships$Marketing__c;
  }

type Fields$MatchingInformation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  EmailAddress: string | null;
  ExternalId: string | null;
  SFDCIdId: string | null;
  IsPickedAsPreferred: boolean;
  UserId: string | null;
  PreferenceUsed: string | null;
};

type ParentReferences$MatchingInformation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SFDCId: SObjectDefinition$Contact | null;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$MatchingInformation = {
  //
};

interface SObjectDefinition$MatchingInformation extends SObjectDefinition<'MatchingInformation'> {
    Name: 'MatchingInformation';
    Fields: Fields$MatchingInformation;
    ParentReferences: ParentReferences$MatchingInformation;
    ChildRelationships: ChildRelationships$MatchingInformation;
  }

type Fields$MatchingRule = {
  //
  Id: string;
  IsDeleted: boolean;
  SobjectType: string;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  MatchEngine: string | null;
  BooleanFilter: string | null;
  Description: string | null;
  RuleStatus: string;
  SobjectSubtype: string | null;
};

type ParentReferences$MatchingRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MatchingRule = {
  //
  MatchingRuleItems: SObjectDefinition$MatchingRuleItem;
};

interface SObjectDefinition$MatchingRule extends SObjectDefinition<'MatchingRule'> {
    Name: 'MatchingRule';
    Fields: Fields$MatchingRule;
    ParentReferences: ParentReferences$MatchingRule;
    ChildRelationships: ChildRelationships$MatchingRule;
  }

type Fields$MatchingRuleItem = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  MatchingRuleId: string;
  SortOrder: number;
  Field: string | null;
  MatchingMethod: string | null;
  BlankValueBehavior: string;
};

type ParentReferences$MatchingRuleItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  MatchingRule: SObjectDefinition$MatchingRule;
};

type ChildRelationships$MatchingRuleItem = {
  //
};

interface SObjectDefinition$MatchingRuleItem extends SObjectDefinition<'MatchingRuleItem'> {
    Name: 'MatchingRuleItem';
    Fields: Fields$MatchingRuleItem;
    ParentReferences: ParentReferences$MatchingRuleItem;
    ChildRelationships: ChildRelationships$MatchingRuleItem;
  }

type Fields$Membership__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Start_Date__c: DateString | null;
  Active__c: string | null;
  NFT_Type__c: string | null;
  Badge_Assigned__c: string | null;
  NFT_Owner__c: string | null;
  NFT_URL__c: string | null;
};

type ParentReferences$Membership__ChangeEvent = {
  //
};

type ChildRelationships$Membership__ChangeEvent = {
  //
};

interface SObjectDefinition$Membership__ChangeEvent extends SObjectDefinition<'Membership__ChangeEvent'> {
    Name: 'Membership__ChangeEvent';
    Fields: Fields$Membership__ChangeEvent;
    ParentReferences: ParentReferences$Membership__ChangeEvent;
    ChildRelationships: ChildRelationships$Membership__ChangeEvent;
  }

type Fields$Membership__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Start_Date__c: DateString | null;
  Active__c: string | null;
  NFT_Type__c: string;
  Badge_Assigned__c: string | null;
  NFT_Owner__c: string | null;
  NFT_URL__c: string | null;
};

type ParentReferences$Membership__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  NFT_Owner__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Membership__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Membership__c extends SObjectDefinition<'Membership__c'> {
    Name: 'Membership__c';
    Fields: Fields$Membership__c;
    ParentReferences: ParentReferences$Membership__c;
    ChildRelationships: ChildRelationships$Membership__c;
  }

type Fields$Min_Wage__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  State__c: string | null;
  Authority__c: string | null;
  Authority_Type__c: string | null;
  Rate__c: number | null;
  Effective_Date__c: DateString | null;
  Is_Latest__c: boolean;
  Status__c: string | null;
  Key__c: string | null;
  State_Code__c: string | null;
};

type ParentReferences$Min_Wage__ChangeEvent = {
  //
};

type ChildRelationships$Min_Wage__ChangeEvent = {
  //
};

interface SObjectDefinition$Min_Wage__ChangeEvent extends SObjectDefinition<'Min_Wage__ChangeEvent'> {
    Name: 'Min_Wage__ChangeEvent';
    Fields: Fields$Min_Wage__ChangeEvent;
    ParentReferences: ParentReferences$Min_Wage__ChangeEvent;
    ChildRelationships: ChildRelationships$Min_Wage__ChangeEvent;
  }

type Fields$Min_Wage__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  State__c: string | null;
  Authority__c: string | null;
  Authority_Type__c: string | null;
  Rate__c: number | null;
  Effective_Date__c: DateString | null;
  Is_Latest__c: boolean;
  Status__c: string | null;
  Key__c: string | null;
  State_Code__c: string | null;
};

type ParentReferences$Min_Wage__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Min_Wage__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Min_Wage__c extends SObjectDefinition<'Min_Wage__c'> {
    Name: 'Min_Wage__c';
    Fields: Fields$Min_Wage__c;
    ParentReferences: ParentReferences$Min_Wage__c;
    ChildRelationships: ChildRelationships$Min_Wage__c;
  }

type Fields$MobileApplicationDetail = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Version: string;
  DevicePlatform: string;
  MinimumOsVersion: string | null;
  DeviceType: string | null;
  ApplicationFileLength: number | null;
  ApplicationIcon: string | null;
  IsEnterpriseApp: boolean;
  AppInstallUrl: string | null;
  ApplicationBundleIdentifier: string | null;
  ApplicationBinaryFileName: string | null;
  ApplicationIconFileName: string | null;
  ApplicationBinary: BlobString | null;
};

type ParentReferences$MobileApplicationDetail = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MobileApplicationDetail = {
  //
};

interface SObjectDefinition$MobileApplicationDetail extends SObjectDefinition<'MobileApplicationDetail'> {
    Name: 'MobileApplicationDetail';
    Fields: Fields$MobileApplicationDetail;
    ParentReferences: ParentReferences$MobileApplicationDetail;
    ChildRelationships: ChildRelationships$MobileApplicationDetail;
  }

type Fields$MutingPermissionSet = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PermissionsEmailSingle: boolean;
  PermissionsEmailMass: boolean;
  PermissionsEditTask: boolean;
  PermissionsEditEvent: boolean;
  PermissionsExportReport: boolean;
  PermissionsImportPersonal: boolean;
  PermissionsDataExport: boolean;
  PermissionsManageUsers: boolean;
  PermissionsEditPublicFilters: boolean;
  PermissionsEditPublicTemplates: boolean;
  PermissionsModifyAllData: boolean;
  PermissionsEditBillingInfo: boolean;
  PermissionsManageCases: boolean;
  PermissionsMassInlineEdit: boolean;
  PermissionsManageSolutions: boolean;
  PermissionsCustomizeApplication: boolean;
  PermissionsEditReadonlyFields: boolean;
  PermissionsRunReports: boolean;
  PermissionsViewSetup: boolean;
  PermissionsTransferAnyEntity: boolean;
  PermissionsNewReportBuilder: boolean;
  PermissionsActivateContract: boolean;
  PermissionsActivateOrder: boolean;
  PermissionsImportLeads: boolean;
  PermissionsManageLeads: boolean;
  PermissionsTransferAnyLead: boolean;
  PermissionsViewAllData: boolean;
  PermissionsEditPublicDocuments: boolean;
  PermissionsViewEncryptedData: boolean;
  PermissionsEditBrandTemplates: boolean;
  PermissionsEditHtmlTemplates: boolean;
  PermissionsChatterInternalUser: boolean;
  PermissionsDeleteActivatedContract: boolean;
  PermissionsChatterInviteExternalUsers: boolean;
  PermissionsSendSitRequests: boolean;
  PermissionsOverrideForecasts: boolean;
  PermissionsViewAllForecasts: boolean;
  PermissionsApiUserOnly: boolean;
  PermissionsManageRemoteAccess: boolean;
  PermissionsCanUseNewDashboardBuilder: boolean;
  PermissionsManageCategories: boolean;
  PermissionsConvertLeads: boolean;
  PermissionsPasswordNeverExpires: boolean;
  PermissionsUseTeamReassignWizards: boolean;
  PermissionsEditActivatedOrders: boolean;
  PermissionsInstallPackaging: boolean;
  PermissionsPublishPackaging: boolean;
  PermissionsChatterOwnGroups: boolean;
  PermissionsEditOppLineItemUnitPrice: boolean;
  PermissionsCreatePackaging: boolean;
  PermissionsBulkApiHardDelete: boolean;
  PermissionsInboundMigrationToolsUser: boolean;
  PermissionsSolutionImport: boolean;
  PermissionsManageCallCenters: boolean;
  PermissionsManageSynonyms: boolean;
  PermissionsOutboundMigrationToolsUser: boolean;
  PermissionsViewContent: boolean;
  PermissionsManageEmailClientConfig: boolean;
  PermissionsEnableNotifications: boolean;
  PermissionsManageDataIntegrations: boolean;
  PermissionsDistributeFromPersWksp: boolean;
  PermissionsViewDataCategories: boolean;
  PermissionsManageDataCategories: boolean;
  PermissionsAuthorApex: boolean;
  PermissionsManageMobile: boolean;
  PermissionsApiEnabled: boolean;
  PermissionsManageCustomReportTypes: boolean;
  PermissionsEditCaseComments: boolean;
  PermissionsTransferAnyCase: boolean;
  PermissionsContentAdministrator: boolean;
  PermissionsCreateWorkspaces: boolean;
  PermissionsManageContentPermissions: boolean;
  PermissionsManageContentProperties: boolean;
  PermissionsManageContentTypes: boolean;
  PermissionsScheduleJob: boolean;
  PermissionsManageExchangeConfig: boolean;
  PermissionsManageAnalyticSnapshots: boolean;
  PermissionsScheduleReports: boolean;
  PermissionsManageBusinessHourHolidays: boolean;
  PermissionsManageDynamicDashboards: boolean;
  PermissionsCustomSidebarOnAllPages: boolean;
  PermissionsManageInteraction: boolean;
  PermissionsViewMyTeamsDashboards: boolean;
  PermissionsModerateChatter: boolean;
  PermissionsResetPasswords: boolean;
  PermissionsFlowUFLRequired: boolean;
  PermissionsCanInsertFeedSystemFields: boolean;
  PermissionsActivitiesAccess: boolean;
  PermissionsEmailTemplateManagement: boolean;
  PermissionsEmailAdministration: boolean;
  PermissionsManageChatterMessages: boolean;
  PermissionsAllowEmailIC: boolean;
  PermissionsChatterFileLink: boolean;
  PermissionsForceTwoFactor: boolean;
  PermissionsViewEventLogFiles: boolean;
  PermissionsManageNetworks: boolean;
  PermissionsViewCaseInteraction: boolean;
  PermissionsManageAuthProviders: boolean;
  PermissionsRunFlow: boolean;
  PermissionsManageQuotas: boolean;
  PermissionsCreateCustomizeDashboards: boolean;
  PermissionsCreateDashboardFolders: boolean;
  PermissionsViewPublicDashboards: boolean;
  PermissionsManageDashbdsInPubFolders: boolean;
  PermissionsCreateCustomizeReports: boolean;
  PermissionsCreateReportFolders: boolean;
  PermissionsViewPublicReports: boolean;
  PermissionsManageReportsInPubFolders: boolean;
  PermissionsEditMyDashboards: boolean;
  PermissionsEditMyReports: boolean;
  PermissionsViewAllUsers: boolean;
  PermissionsConnectOrgToEnvironmentHub: boolean;
  PermissionsCreateCustomizeFilters: boolean;
  PermissionsContentHubUser: boolean;
  PermissionsGovernNetworks: boolean;
  PermissionsSalesConsole: boolean;
  PermissionsTwoFactorApi: boolean;
  PermissionsDeleteTopics: boolean;
  PermissionsEditTopics: boolean;
  PermissionsCreateTopics: boolean;
  PermissionsAssignTopics: boolean;
  PermissionsIdentityEnabled: boolean;
  PermissionsIdentityConnect: boolean;
  PermissionsContentWorkspaces: boolean;
  PermissionsCreateWorkBadgeDefinition: boolean;
  PermissionsCustomMobileAppsAccess: boolean;
  PermissionsViewHelpLink: boolean;
  PermissionsManageProfilesPermissionsets: boolean;
  PermissionsAssignPermissionSets: boolean;
  PermissionsManageRoles: boolean;
  PermissionsManageIpAddresses: boolean;
  PermissionsManageSharing: boolean;
  PermissionsManageInternalUsers: boolean;
  PermissionsManagePasswordPolicies: boolean;
  PermissionsManageLoginAccessPolicies: boolean;
  PermissionsManageCustomPermissions: boolean;
  PermissionsCanVerifyComment: boolean;
  PermissionsManageUnlistedGroups: boolean;
  PermissionsStdAutomaticActivityCapture: boolean;
  PermissionsInsightsAppDashboardEditor: boolean;
  PermissionsManageTwoFactor: boolean;
  PermissionsInsightsAppUser: boolean;
  PermissionsInsightsAppAdmin: boolean;
  PermissionsInsightsAppEltEditor: boolean;
  PermissionsInsightsAppUploadUser: boolean;
  PermissionsInsightsCreateApplication: boolean;
  PermissionsLightningExperienceUser: boolean;
  PermissionsConfigCustomRecs: boolean;
  PermissionsSubmitMacrosAllowed: boolean;
  PermissionsBulkMacrosAllowed: boolean;
  PermissionsManageSessionPermissionSets: boolean;
  PermissionsManageTemplatedApp: boolean;
  PermissionsUseTemplatedApp: boolean;
  PermissionsSendAnnouncementEmails: boolean;
  PermissionsChatterEditOwnPost: boolean;
  PermissionsChatterEditOwnRecordPost: boolean;
  PermissionsWaveTabularDownload: boolean;
  PermissionsManageSandboxes: boolean;
  PermissionsAutomaticActivityCapture: boolean;
  PermissionsImportCustomObjects: boolean;
  PermissionsSalesforceIQInbox: boolean;
  PermissionsDelegatedTwoFactor: boolean;
  PermissionsChatterComposeUiCodesnippet: boolean;
  PermissionsSelectFilesFromSalesforce: boolean;
  PermissionsModerateNetworkUsers: boolean;
  PermissionsMergeTopics: boolean;
  PermissionsEditIQFields: boolean;
  PermissionsSubscribeToLightningReports: boolean;
  PermissionsManagePvtRptsAndDashbds: boolean;
  PermissionsAllowLightningLogin: boolean;
  PermissionsCampaignInfluence2: boolean;
  PermissionsViewDataAssessment: boolean;
  PermissionsRemoveDirectMessageMembers: boolean;
  PermissionsCanApproveFeedPost: boolean;
  PermissionsAddDirectMessageMembers: boolean;
  PermissionsAllowViewEditConvertedLeads: boolean;
  PermissionsSocialInsightsLogoAdmin: boolean;
  PermissionsShowCompanyNameAsUserBadge: boolean;
  PermissionsAccessCMC: boolean;
  PermissionsViewHealthCheck: boolean;
  PermissionsManageHealthCheck: boolean;
  PermissionsPackaging2: boolean;
  PermissionsManageCertificates: boolean;
  PermissionsCreateReportInLightning: boolean;
  PermissionsPreventClassicExperience: boolean;
  PermissionsHideReadByList: boolean;
  PermissionsListEmailSend: boolean;
  PermissionsFeedPinning: boolean;
  PermissionsChangeDashboardColors: boolean;
  PermissionsManageRecommendationStrategies: boolean;
  PermissionsManagePropositions: boolean;
  PermissionsCloseConversations: boolean;
  PermissionsSubscribeReportRolesGrps: boolean;
  PermissionsSubscribeDashboardRolesGrps: boolean;
  PermissionsUseWebLink: boolean;
  PermissionsEditASEFields: boolean;
  PermissionsHasUnlimitedNBAExecutions: boolean;
  PermissionsViewOnlyEmbeddedAppUser: boolean;
  PermissionsSendExternalEmailAvailable: boolean;
  PermissionsViewAllActivities: boolean;
  PermissionsSubscribeReportToOtherUsers: boolean;
  PermissionsLightningConsoleAllowedForUser: boolean;
  PermissionsSubscribeReportsRunAsUser: boolean;
  PermissionsSubscribeToLightningDashboards: boolean;
  PermissionsSubscribeDashboardToOtherUsers: boolean;
  PermissionsCreateLtngTempInPub: boolean;
  PermissionsTransactionalEmailSend: boolean;
  PermissionsViewPrivateStaticResources: boolean;
  PermissionsCreateLtngTempFolder: boolean;
  PermissionsApexRestServices: boolean;
  PermissionsGiveRecognitionBadge: boolean;
  PermissionsUseMySearch: boolean;
  PermissionsLtngPromoReserved01UserPerm: boolean;
  PermissionsManageSubscriptions: boolean;
  PermissionsWaveManagePrivateAssetsUser: boolean;
  PermissionsCanEditDataPrepRecipe: boolean;
  PermissionsAddAnalyticsRemoteConnections: boolean;
  PermissionsManageSurveys: boolean;
  PermissionsUseAssistantDialog: boolean;
  PermissionsUseQuerySuggestions: boolean;
  PermissionsRecordVisibilityAPI: boolean;
  PermissionsViewRoles: boolean;
  PermissionsCanManageMaps: boolean;
  PermissionsLMOutboundMessagingUserPerm: boolean;
  PermissionsModifyDataClassification: boolean;
  PermissionsPrivacyDataAccess: boolean;
  PermissionsQueryAllFiles: boolean;
  PermissionsModifyMetadata: boolean;
  PermissionsManageCMS: boolean;
  PermissionsSandboxTestingInCommunityApp: boolean;
  PermissionsViewFlowUsageAndFlowEventData: boolean;
  PermissionsCanEditPrompts: boolean;
  PermissionsViewUserPII: boolean;
  PermissionsManageHubConnections: boolean;
  PermissionsB2BMarketingAnalyticsUser: boolean;
  PermissionsTraceXdsQueries: boolean;
  PermissionsViewAllCustomSettings: boolean;
  PermissionsViewAllForeignKeyNames: boolean;
  PermissionsAddWaveNotificationRecipients: boolean;
  PermissionsHeadlessCMSAccess: boolean;
  PermissionsLMEndMessagingSessionUserPerm: boolean;
  PermissionsConsentApiUpdate: boolean;
  PermissionsAccessContentBuilder: boolean;
  PermissionsAccountSwitcherUser: boolean;
  PermissionsManageC360AConnections: boolean;
  PermissionsManageReleaseUpdates: boolean;
  PermissionsViewAllProfiles: boolean;
  PermissionsSkipIdentityConfirmation: boolean;
  PermissionsSendCustomNotifications: boolean;
  PermissionsPackaging2Delete: boolean;
  PermissionsViewRestrictionAndScopingRules: boolean;
  PermissionsFSCComprehensiveUserAccess: boolean;
  PermissionsMicrosoftTeamsUser: boolean;
  PermissionsManageTrustMeasures: boolean;
  PermissionsViewTrustMeasures: boolean;
  PermissionsIsotopeCToCUser: boolean;
  PermissionsHasUnlimitedErbScoringRequests: boolean;
  PermissionsIsotopeAccess: boolean;
  PermissionsIsotopeLEX: boolean;
  PermissionsQuipMetricsAccess: boolean;
  PermissionsQuipUserEngagementMetrics: boolean;
  PermissionsManageExternalConnections: boolean;
  PermissionsUseSubscriptionEmails: boolean;
  PermissionsAIViewInsightObjects: boolean;
  PermissionsAICreateInsightObjects: boolean;
  PermissionsNativeWebviewScrolling: boolean;
};

type ParentReferences$MutingPermissionSet = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$MutingPermissionSet = {
  //
};

interface SObjectDefinition$MutingPermissionSet extends SObjectDefinition<'MutingPermissionSet'> {
    Name: 'MutingPermissionSet';
    Fields: Fields$MutingPermissionSet;
    ParentReferences: ParentReferences$MutingPermissionSet;
    ChildRelationships: ChildRelationships$MutingPermissionSet;
  }

type Fields$MyDomainDiscoverableLogin = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ApexHandlerId: string;
  ExecuteApexHandlerAsId: string | null;
  UsernameLabel: string | null;
};

type ParentReferences$MyDomainDiscoverableLogin = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ApexHandler: SObjectDefinition$ApexClass;
  ExecuteApexHandlerAs: SObjectDefinition$User | null;
};

type ChildRelationships$MyDomainDiscoverableLogin = {
  //
};

interface SObjectDefinition$MyDomainDiscoverableLogin extends SObjectDefinition<'MyDomainDiscoverableLogin'> {
    Name: 'MyDomainDiscoverableLogin';
    Fields: Fields$MyDomainDiscoverableLogin;
    ParentReferences: ParentReferences$MyDomainDiscoverableLogin;
    ChildRelationships: ChildRelationships$MyDomainDiscoverableLogin;
  }

type Fields$Name = {
  //
  Id: string;
  Name: string | null;
  LastName: string | null;
  FirstName: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Type: string | null;
  Alias: string | null;
  UserRoleId: string | null;
  RecordTypeId: string | null;
  IsActive: boolean;
  ProfileId: string | null;
  Title: string | null;
  Email: string | null;
  Phone: string | null;
  NameOrAlias: string | null;
  Username: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Name = {
  //
  UserRole: SObjectDefinition$UserRole | null;
  RecordType: SObjectDefinition$RecordType | null;
  Profile: SObjectDefinition$Profile | null;
};

type ChildRelationships$Name = {
  //
};

interface SObjectDefinition$Name extends SObjectDefinition<'Name'> {
    Name: 'Name';
    Fields: Fields$Name;
    ParentReferences: ParentReferences$Name;
    ChildRelationships: ChildRelationships$Name;
  }

type Fields$NamedCredential = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Endpoint: string | null;
  PrincipalType: string | null;
  CalloutOptionsGenerateAuthorizationHeader: boolean;
  CalloutOptionsAllowMergeFieldsInHeader: boolean;
  CalloutOptionsAllowMergeFieldsInBody: boolean;
  AuthProviderId: string | null;
  JwtIssuer: string | null;
  JwtFormulaSubject: string | null;
  JwtTextSubject: string | null;
  JwtValidityPeriodSeconds: number | null;
  JwtAudience: string | null;
  AuthTokenEndpointUrl: string | null;
};

type ParentReferences$NamedCredential = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthProvider: SObjectDefinition$AuthProvider | null;
};

type ChildRelationships$NamedCredential = {
  //
  CustomHttpHeaders: SObjectDefinition$CustomHttpHeader;
  UserAuths: SObjectDefinition$ExternalDataUserAuth;
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$NamedCredential extends SObjectDefinition<'NamedCredential'> {
    Name: 'NamedCredential';
    Fields: Fields$NamedCredential;
    ParentReferences: ParentReferences$NamedCredential;
    ChildRelationships: ChildRelationships$NamedCredential;
  }

type Fields$Note = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  Title: string;
  IsPrivate: boolean;
  Body: string | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Note = {
  //
  Parent: SObjectDefinition$Name;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Note = {
  //
};

interface SObjectDefinition$Note extends SObjectDefinition<'Note'> {
    Name: 'Note';
    Fields: Fields$Note;
    ParentReferences: ParentReferences$Note;
    ChildRelationships: ChildRelationships$Note;
  }

type Fields$NoteAndAttachment = {
  //
  Id: string;
  IsDeleted: boolean;
  IsNote: boolean;
  ParentId: string;
  Title: string | null;
  IsPrivate: boolean;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$NoteAndAttachment = {
  //
  Parent: SObjectDefinition$Name;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$NoteAndAttachment = {
  //
};

interface SObjectDefinition$NoteAndAttachment extends SObjectDefinition<'NoteAndAttachment'> {
    Name: 'NoteAndAttachment';
    Fields: Fields$NoteAndAttachment;
    ParentReferences: ParentReferences$NoteAndAttachment;
    ChildRelationships: ChildRelationships$NoteAndAttachment;
  }

type Fields$OauthCustomScope = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string;
  IsPublic: boolean;
};

type ParentReferences$OauthCustomScope = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OauthCustomScope = {
  //
};

interface SObjectDefinition$OauthCustomScope extends SObjectDefinition<'OauthCustomScope'> {
    Name: 'OauthCustomScope';
    Fields: Fields$OauthCustomScope;
    ParentReferences: ParentReferences$OauthCustomScope;
    ChildRelationships: ChildRelationships$OauthCustomScope;
  }

type Fields$OauthCustomScopeApp = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OauthCustomScopeId: string;
};

type ParentReferences$OauthCustomScopeApp = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OauthCustomScope: SObjectDefinition$OauthCustomScope;
};

type ChildRelationships$OauthCustomScopeApp = {
  //
};

interface SObjectDefinition$OauthCustomScopeApp extends SObjectDefinition<'OauthCustomScopeApp'> {
    Name: 'OauthCustomScopeApp';
    Fields: Fields$OauthCustomScopeApp;
    ParentReferences: ParentReferences$OauthCustomScopeApp;
    ChildRelationships: ChildRelationships$OauthCustomScopeApp;
  }

type Fields$OauthToken = {
  //
  Id: string;
  AccessToken: string | null;
  UserId: string | null;
  RequestToken: string | null;
  CreatedDate: DateString | null;
  AppName: string | null;
  LastUsedDate: DateString | null;
  UseCount: number | null;
  DeleteToken: string | null;
  AppMenuItemId: string | null;
};

type ParentReferences$OauthToken = {
  //
  User: SObjectDefinition$User | null;
  AppMenuItem: SObjectDefinition$AppMenuItem | null;
};

type ChildRelationships$OauthToken = {
  //
};

interface SObjectDefinition$OauthToken extends SObjectDefinition<'OauthToken'> {
    Name: 'OauthToken';
    Fields: Fields$OauthToken;
    ParentReferences: ParentReferences$OauthToken;
    ChildRelationships: ChildRelationships$OauthToken;
  }

type Fields$ObjectPermissions = {
  //
  Id: string;
  ParentId: string;
  SobjectType: string;
  PermissionsCreate: boolean;
  PermissionsRead: boolean;
  PermissionsEdit: boolean;
  PermissionsDelete: boolean;
  PermissionsViewAllRecords: boolean;
  PermissionsModifyAllRecords: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ObjectPermissions = {
  //
  Parent: SObjectDefinition$PermissionSet;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ObjectPermissions = {
  //
};

interface SObjectDefinition$ObjectPermissions extends SObjectDefinition<'ObjectPermissions'> {
    Name: 'ObjectPermissions';
    Fields: Fields$ObjectPermissions;
    ParentReferences: ParentReferences$ObjectPermissions;
    ChildRelationships: ChildRelationships$ObjectPermissions;
  }

type Fields$OnboardingMetrics = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  SeenCount: number | null;
  ExperienceName: string;
};

type ParentReferences$OnboardingMetrics = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
};

type ChildRelationships$OnboardingMetrics = {
  //
};

interface SObjectDefinition$OnboardingMetrics extends SObjectDefinition<'OnboardingMetrics'> {
    Name: 'OnboardingMetrics';
    Fields: Fields$OnboardingMetrics;
    ParentReferences: ParentReferences$OnboardingMetrics;
    ChildRelationships: ChildRelationships$OnboardingMetrics;
  }

type Fields$Onboarding__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Additional_Requirements__c: string | null;
  Background_Check__c: string | null;
  Clearance__c: string | null;
  Drug_Test__c: string | null;
  Equipment__c: string | null;
  Escalation_Contact__c: string | null;
  Initial_Office_Visit__c: string | null;
  Main_Point_Of_Contact__c: string | null;
  Relocation_Timeline__c: string | null;
  Relocation_required__c: string | null;
  Tech_Support_Email__c: string | null;
  Tech_Support_Phone__c: string | null;
  Timesheet_Approval_Frequency__c: string | null;
  What_to_Expect_on_1st_Day__c: string | null;
  Work_Address_Text__c: string | null;
};

type ParentReferences$Onboarding__ChangeEvent = {
  //
};

type ChildRelationships$Onboarding__ChangeEvent = {
  //
};

interface SObjectDefinition$Onboarding__ChangeEvent extends SObjectDefinition<'Onboarding__ChangeEvent'> {
    Name: 'Onboarding__ChangeEvent';
    Fields: Fields$Onboarding__ChangeEvent;
    ParentReferences: ParentReferences$Onboarding__ChangeEvent;
    ChildRelationships: ChildRelationships$Onboarding__ChangeEvent;
  }

type Fields$Onboarding__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Additional_Requirements__c: string | null;
  Background_Check__c: string;
  Clearance__c: string | null;
  Drug_Test__c: string;
  Equipment__c: string | null;
  Escalation_Contact__c: string | null;
  Initial_Office_Visit__c: string;
  Main_Point_Of_Contact__c: string | null;
  Relocation_Timeline__c: string | null;
  Relocation_required__c: string | null;
  Tech_Support_Email__c: string | null;
  Tech_Support_Phone__c: string | null;
  Timesheet_Approval_Frequency__c: string;
  What_to_Expect_on_1st_Day__c: string | null;
  Work_Address_Text__c: string | null;
};

type ParentReferences$Onboarding__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Escalation_Contact__r: SObjectDefinition$Contact | null;
  Main_Point_Of_Contact__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Onboarding__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Onboarding__c extends SObjectDefinition<'Onboarding__c'> {
    Name: 'Onboarding__c';
    Fields: Fields$Onboarding__c;
    ParentReferences: ParentReferences$Onboarding__c;
    ChildRelationships: ChildRelationships$Onboarding__c;
  }

type Fields$OpenActivity = {
  //
  Id: string;
  AccountId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  Subject: string | null;
  IsTask: boolean;
  ActivityDate: DateString | null;
  ActivityDateTime: DateString | null;
  OwnerId: string | null;
  Status: string | null;
  Priority: string | null;
  IsHighPriority: boolean;
  ActivityType: string | null;
  IsClosed: boolean;
  IsAllDayEvent: boolean;
  IsVisibleInSelfService: boolean;
  DurationInMinutes: number | null;
  Location: string | null;
  Description: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  EndDateTime: DateString | null;
  StartDateTime: DateString | null;
  PrimaryWhoId: string | null;
  PrimaryAccountId: string | null;
  ActivitySubtype: string | null;
  AlternateDetailId: string | null;
  rcsfl__CALL_UNIQUE_ID__c: string | null;
  rcsfl__CALL_UUID__c: string | null;
  rcsfl__Call_Recording__c: string | null;
  rcsfl__RC_Logging_Type__c: string | null;
  rcsfl__Recording_Information__c: string | null;
  rcsfl__external_whoid__c: string | null;
  rcsfl__hvs_disposition__c: string | null;
  rcsfl__key__c: string | null;
  DB_Activity_Type__c: string | null;
  task_type__c: string | null;
  Outreach_Task_Type__c: string | null;
};

type ParentReferences$OpenActivity = {
  //
  Account: SObjectDefinition$Account | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PrimaryWho: SObjectDefinition$Name | null;
  PrimaryAccount: SObjectDefinition$Account | null;
  AlternateDetail: SObjectDefinition$EmailMessage | null;
};

type ChildRelationships$OpenActivity = {
  //
};

interface SObjectDefinition$OpenActivity extends SObjectDefinition<'OpenActivity'> {
    Name: 'OpenActivity';
    Fields: Fields$OpenActivity;
    ParentReferences: ParentReferences$OpenActivity;
    ChildRelationships: ChildRelationships$OpenActivity;
  }

type Fields$OperatingHours = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Description: string | null;
  TimeZone: string;
};

type ParentReferences$OperatingHours = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OperatingHours = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Feeds: SObjectDefinition$OperatingHoursFeed;
  OperatingHoursHolidays: SObjectDefinition$OperatingHoursHoliday;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  TimeSlots: SObjectDefinition$TimeSlot;
};

interface SObjectDefinition$OperatingHours extends SObjectDefinition<'OperatingHours'> {
    Name: 'OperatingHours';
    Fields: Fields$OperatingHours;
    ParentReferences: ParentReferences$OperatingHours;
    ChildRelationships: ChildRelationships$OperatingHours;
  }

type Fields$OperatingHoursFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$OperatingHoursFeed = {
  //
  Parent: SObjectDefinition$OperatingHours;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$OperatingHoursFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$OperatingHoursFeed extends SObjectDefinition<'OperatingHoursFeed'> {
    Name: 'OperatingHoursFeed';
    Fields: Fields$OperatingHoursFeed;
    ParentReferences: ParentReferences$OperatingHoursFeed;
    ChildRelationships: ChildRelationships$OperatingHoursFeed;
  }

type Fields$OperatingHoursHoliday = {
  //
  Id: string;
  IsDeleted: boolean;
  OperatingHoursHolidayNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  OperatingHoursId: string;
  HolidayId: string;
  DateAndTime: string | null;
};

type ParentReferences$OperatingHoursHoliday = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OperatingHours: SObjectDefinition$OperatingHours;
  Holiday: SObjectDefinition$Holiday;
};

type ChildRelationships$OperatingHoursHoliday = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  Feeds: SObjectDefinition$OperatingHoursHolidayFeed;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$OperatingHoursHoliday extends SObjectDefinition<'OperatingHoursHoliday'> {
    Name: 'OperatingHoursHoliday';
    Fields: Fields$OperatingHoursHoliday;
    ParentReferences: ParentReferences$OperatingHoursHoliday;
    ChildRelationships: ChildRelationships$OperatingHoursHoliday;
  }

type Fields$OperatingHoursHolidayFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$OperatingHoursHolidayFeed = {
  //
  Parent: SObjectDefinition$OperatingHoursHoliday;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$OperatingHoursHolidayFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$OperatingHoursHolidayFeed extends SObjectDefinition<'OperatingHoursHolidayFeed'> {
    Name: 'OperatingHoursHolidayFeed';
    Fields: Fields$OperatingHoursHolidayFeed;
    ParentReferences: ParentReferences$OperatingHoursHolidayFeed;
    ChildRelationships: ChildRelationships$OperatingHoursHolidayFeed;
  }

type Fields$Opportunity = {
  //
  Id: string;
  IsDeleted: boolean;
  AccountId: string | null;
  RecordTypeId: string | null;
  IsPrivate: boolean;
  Name: string;
  Description: string | null;
  StageName: string;
  Amount: number | null;
  Probability: number | null;
  ExpectedRevenue: number | null;
  TotalOpportunityQuantity: number | null;
  CloseDate: DateString;
  Type: string | null;
  NextStep: string | null;
  LeadSource: string | null;
  IsClosed: boolean;
  IsWon: boolean;
  ForecastCategory: string;
  ForecastCategoryName: string | null;
  CampaignId: string | null;
  HasOpportunityLineItem: boolean;
  Pricebook2Id: string | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  FiscalQuarter: number | null;
  FiscalYear: number | null;
  Fiscal: string | null;
  ContactId: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  SyncedQuoteId: string | null;
  ContractId: string | null;
  HasOpenActivity: boolean;
  HasOverdueTask: boolean;
  LastAmountChangedHistoryId: string | null;
  LastCloseDateChangedHistoryId: string | null;
  ActivityMetricId: string | null;
  ActivityMetricRollupId: string | null;
  Total_Anticipated_Revenue__c: number | null;
  Discovery_Completed__c: boolean;
  ROI_Analysis_Completed__c: boolean;
  Unique_Services__c: string | null;
  Loss_Reason__c: string | null;
  MSA__c: boolean;
  SOW__c: boolean;
  RFP__c: boolean;
  competitive_landscape__c: string | null;
  Skill_Set__c: string | null;
  Ability_to_Learn_Quickly__c: string | null;
  DSCORGPKG__Attributed_to_DiscoverOrg__c: boolean;
  DSCORGPKG__Converted_from_Discoverorg_Data__c: boolean;
  Job_Description__c: string | null;
  About_Yourself__c: string | null;
  Additional_Notes_Prescreen__c: string | null;
  Location__c: string | null;
  Interview_Process__c: string | null;
  Additional_Questions__c: string | null;
  DB_Competitor__c: string | null;
  Referral_terms__c: string | null;
  Qualified__c: boolean;
  Client_Job_Description__c: string | null;
  Qualification_notes__c: string | null;
  Decision_Maker__c: string | null;
  Application_Device__c: string | null;
  Political_Landscape__c: string | null;
  Operational_Landscape__c: string | null;
  Technical_requirements__c: string | null;
  Pricing_detail__c: string | null;
  T_C_s__c: string | null;
  Cohort__c: string | null;
  Training_Start_Date__c: DateString | null;
  Client_Start_Date__c: DateString | null;
  Bill_Rate_Hourly__c: number | null;
  Background_Check_Notes__c: string | null;
  Cohort_size__c: number | null;
  Confirmed_cohort_duration_weeks__c: number | null;
  Competition_1__c: string | null;
  UTM_Content__c: string | null;
  Project_Dept__c: string | null;
  UTM_Campaign__c: string | null;
  UTM_Term__c: string | null;
  UTM_Medium__c: string | null;
  UTM_Source__c: string | null;
  Certification__c: string | null;
  Work_location__c: string | null;
  Recruiting_Start_Date__c: DateString | null;
  Onboarding_Compliance_Date__c: DateString | null;
  Req_Work_Authorization__c: string | null;
  Education_Requirements__c: string | null;
  Technologies__c: string | null;
  Security_Clearance_Requirements__c: string | null;
  Training_Completion_Date__c: DateString | null;
  Conversion_Terms__c: string | null;
  Cohort_Type_Open_Closed__c: string | null;
  Bill_Rate_D__c: number | null;
  End_Client__c: string | null;
  Budget_Confirmed__c: string | null;
  Internal_Process__c: string | null;
  Ratecard_Status__c: string | null;
  Candidate__c: string | null;
  Candidate_on_Time_Prescreen__c: string | null;
  Candidate_on_Time_Tech_Screen__c: string | null;
  Challenge_Appointment_Event_ID__c: string | null;
  Challenge_Appointment_ID__c: string | null;
  Challenge_Appointment_Status__c: string | null;
  Challenge_Date_Time__c: DateString | null;
  Challenge_Link__c: string | null;
  Challenge_Result__c: string | null;
  Challenge_Scheduling_Link__c: string | null;
  Challenge_Score__c: number | null;
  Challenge_Similarity_Flag__c: string | null;
  Challenging_Situation__c: string | null;
  Is_Migrated__c: boolean;
  Coding_Self_Rank__c: number | null;
  BA_Adaptability_Answer__c: string | null;
  Communication_Rank_Recruiter__c: number | null;
  Communication_Rank_Tech_Screener__c: number | null;
  Concerns_Passing_Background__c: string | null;
  Concerns_Passing_Drug_Screen__c: string | null;
  Currently_Student__c: string | null;
  Dressed_Professionally__c: string | null;
  Drug_Screen_Notes__c: string | null;
  Education_Level__c: string | null;
  Event_ID_Microsoft__c: string | null;
  Expected_Degree__c: string | null;
  Expected_Graduation_Date__c: DateString | null;
  External_Applications__c: string | null;
  GCLID__c: string | null;
  Git_Hub_URL__c: string | null;
  Good_Fit__c: string | null;
  Graduation_Date__c: DateString | null;
  Instagram_URL__c: string | null;
  LinkedIn_URL__c: string | null;
  Major__c: string | null;
  Military_Branch__c: string | null;
  Military_Status__c: string | null;
  Months_to_Graduation__c: number | null;
  Opportunity_Rank__c: string | null;
  Overall_Candidate_Rank_Recruiter__c: number | null;
  Overall_Candidate_Rank_Tech_Screener__c: number | null;
  Pre_Screen_Raw_Data_2__c: string | null;
  Pre_Screen_Raw_Data__c: string | null;
  Prescreen_Result__c: string | null;
  Previous_Challenge_ID__c: string | null;
  Project_Experience_Months__c: number | null;
  Projects__c: string | null;
  Refer_a_Friend__c: string | null;
  Responsive_Notes__c: string | null;
  Screener_Determination__c: string | null;
  Security_Clearance__c: string | null;
  Source_Prescreen__c: string | null;
  Strongest_Programming_Languages__c: string | null;
  Teamwork_Experience__c: string | null;
  Tech_Screen_Appointment_Event_ID__c: string | null;
  Tech_Screen_Appointment_ID__c: string | null;
  Tech_Screen_Appointment_Status__c: string | null;
  Tech_Screen_Cancellation_Link__c: string | null;
  Tech_Screen_Date__c: DateString | null;
  Tech_Screen_Raw_Data__c: string | null;
  Tech_Screen_Result__c: string | null;
  Tech_Screen_Scheduling_Link__c: string | null;
  Bullhorn_ID__c: string | null;
  Total_Behavioral_Score__c: string | null;
  Total_Project_Score__c: string | null;
  Total_Technical_Score__c: string | null;
  Two_Year_Committment__c: string | null;
  Vaccination_Notes__c: string | null;
  Vaccination_Status__c: string | null;
  Webinar_Appointment_ID__c: string | null;
  Webinar_Appointment_Status__c: string | null;
  Webinar_Attended__c: string | null;
  Webinar_Date__c: DateString | null;
  Webinar_Link__c: string | null;
  Webinar_Poll_Response__c: string | null;
  Webinar_Registrant_ID__c: string | null;
  Webinar_Scheduling_Link__c: string | null;
  Willing_to_Relocate__c: string | null;
  Years_of_Experience_Self_Disclosed__c: string | null;
  Work_Authorization__c: string | null;
  Job__c: string | null;
  Application_N__c: number | null;
  Rejection_Reason__c: string | null;
  Willing_to_Relocate_Notes__c: string | null;
  Hobbies__c: string | null;
  Best_Attributes__c: string | null;
  Responsive__c: string | null;
  Snooze_Reason__c: string | null;
  Major_Notes__c: string | null;
  Rate_Us__c: number | null;
  Source_Prescreen_Notes__c: string | null;
  Strongest_Programming_Languages_Notes__c: string | null;
  Behavioral_Assessment_Adaptability__c: string | null;
  Behavioral_Assessment_Ownership__c: string | null;
  Project_Quality__c: number | null;
  Project_Technical_Explanation__c: number | null;
  Tech_Screen_Notes__c: string | null;
  Technical_Question_1_Score__c: string | null;
  Technical_Question_2_Score__c: string | null;
  Technical_Question_3_Score__c: string | null;
  Technical_Question_4_Score__c: string | null;
  Technical_Question_5_Score__c: string | null;
  Prescreen_Appointment_Status__c: string | null;
  Prescreen_Date__c: DateString | null;
  pandadoc__TrackingNumber__c: string | null;
  Webinar_ID__c: string | null;
  Webinar_Occurrence_ID__c: string | null;
  Application_Date__c: DateString | null;
  BA_Adaptability_Question__c: string | null;
  BA_Ownership_Answer__c: string | null;
  BA_Ownership_Question__c: string | null;
  Prescreen_Scheduling_Link__c: string | null;
  Prescreen_Appointment_ID__c: string | null;
  Tech_Screener__c: string | null;
  Candidate_Phone_Number__c: string | null;
  External_Tech_Screen_Link__c: string | null;
  Rejection_Stage__c: string | null;
};

type ParentReferences$Opportunity = {
  //
  Account: SObjectDefinition$Account | null;
  RecordType: SObjectDefinition$RecordType | null;
  Campaign: SObjectDefinition$Campaign | null;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SyncedQuote: SObjectDefinition$Quote | null;
  Contract: SObjectDefinition$Contract | null;
  LastAmountChangedHistory: SObjectDefinition$OpportunityHistory | null;
  LastCloseDateChangedHistory: SObjectDefinition$OpportunityHistory | null;
  ActivityMetric: SObjectDefinition$ActivityMetric | null;
  ActivityMetricRollup: SObjectDefinition$ActivityMetricRollup | null;
  Decision_Maker__r: SObjectDefinition$Contact | null;
  Candidate__r: SObjectDefinition$Contact | null;
  Job__r: SObjectDefinition$Job__c | null;
  Tech_Screener__r: SObjectDefinition$User | null;
};

type ChildRelationships$Opportunity = {
  //
  AccountPartners: SObjectDefinition$AccountPartner;
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  OpportunityCompetitors: SObjectDefinition$OpportunityCompetitor;
  OpportunityContactRoles: SObjectDefinition$OpportunityContactRole;
  Feeds: SObjectDefinition$OpportunityFeed;
  Histories: SObjectDefinition$OpportunityFieldHistory;
  OpportunityHistories: SObjectDefinition$OpportunityHistory;
  OpportunityLineItems: SObjectDefinition$OpportunityLineItem;
  OpportunityPartnersFrom: SObjectDefinition$OpportunityPartner;
  Shares: SObjectDefinition$OpportunityShare;
  OpportunityTeamMembers: SObjectDefinition$OpportunityTeamMember;
  Partners: SObjectDefinition$Partner;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Quotes: SObjectDefinition$Quote;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Opportunity extends SObjectDefinition<'Opportunity'> {
    Name: 'Opportunity';
    Fields: Fields$Opportunity;
    ParentReferences: ParentReferences$Opportunity;
    ChildRelationships: ChildRelationships$Opportunity;
  }

type Fields$OpportunityChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  AccountId: string | null;
  RecordTypeId: string | null;
  IsPrivate: boolean;
  Name: string | null;
  Description: string | null;
  StageName: string | null;
  Amount: number | null;
  Probability: number | null;
  ExpectedRevenue: number | null;
  TotalOpportunityQuantity: number | null;
  CloseDate: DateString | null;
  Type: string | null;
  NextStep: string | null;
  LeadSource: string | null;
  IsClosed: boolean;
  IsWon: boolean;
  ForecastCategory: string | null;
  ForecastCategoryName: string | null;
  CampaignId: string | null;
  HasOpportunityLineItem: boolean;
  Pricebook2Id: string | null;
  OwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ContactId: string | null;
  SyncedQuoteId: string | null;
  ContractId: string | null;
  LastAmountChangedHistoryId: string | null;
  LastCloseDateChangedHistoryId: string | null;
  Total_Anticipated_Revenue__c: number | null;
  Discovery_Completed__c: boolean;
  ROI_Analysis_Completed__c: boolean;
  Unique_Services__c: string | null;
  Loss_Reason__c: string | null;
  MSA__c: boolean;
  SOW__c: boolean;
  RFP__c: boolean;
  competitive_landscape__c: string | null;
  Skill_Set__c: string | null;
  Ability_to_Learn_Quickly__c: string | null;
  DSCORGPKG__Attributed_to_DiscoverOrg__c: boolean;
  DSCORGPKG__Converted_from_Discoverorg_Data__c: boolean;
  Job_Description__c: string | null;
  About_Yourself__c: string | null;
  Additional_Notes_Prescreen__c: string | null;
  Location__c: string | null;
  Interview_Process__c: string | null;
  Additional_Questions__c: string | null;
  DB_Competitor__c: string | null;
  Referral_terms__c: string | null;
  Qualified__c: boolean;
  Client_Job_Description__c: string | null;
  Qualification_notes__c: string | null;
  Decision_Maker__c: string | null;
  Application_Device__c: string | null;
  Political_Landscape__c: string | null;
  Operational_Landscape__c: string | null;
  Technical_requirements__c: string | null;
  Pricing_detail__c: string | null;
  T_C_s__c: string | null;
  Cohort__c: string | null;
  Training_Start_Date__c: DateString | null;
  Client_Start_Date__c: DateString | null;
  Bill_Rate_Hourly__c: number | null;
  Background_Check_Notes__c: string | null;
  Cohort_size__c: number | null;
  Confirmed_cohort_duration_weeks__c: number | null;
  Competition_1__c: string | null;
  UTM_Content__c: string | null;
  Project_Dept__c: string | null;
  UTM_Campaign__c: string | null;
  UTM_Term__c: string | null;
  UTM_Medium__c: string | null;
  UTM_Source__c: string | null;
  Certification__c: string | null;
  Work_location__c: string | null;
  Recruiting_Start_Date__c: DateString | null;
  Onboarding_Compliance_Date__c: DateString | null;
  Req_Work_Authorization__c: string | null;
  Education_Requirements__c: string | null;
  Technologies__c: string | null;
  Security_Clearance_Requirements__c: string | null;
  Training_Completion_Date__c: DateString | null;
  Conversion_Terms__c: string | null;
  Cohort_Type_Open_Closed__c: string | null;
  Bill_Rate_D__c: number | null;
  End_Client__c: string | null;
  Budget_Confirmed__c: string | null;
  Internal_Process__c: string | null;
  Ratecard_Status__c: string | null;
  Candidate__c: string | null;
  Candidate_on_Time_Prescreen__c: string | null;
  Candidate_on_Time_Tech_Screen__c: string | null;
  Challenge_Appointment_Event_ID__c: string | null;
  Challenge_Appointment_ID__c: string | null;
  Challenge_Appointment_Status__c: string | null;
  Challenge_Date_Time__c: DateString | null;
  Challenge_Link__c: string | null;
  Challenge_Result__c: string | null;
  Challenge_Scheduling_Link__c: string | null;
  Challenge_Score__c: number | null;
  Challenge_Similarity_Flag__c: string | null;
  Challenging_Situation__c: string | null;
  Is_Migrated__c: boolean;
  Coding_Self_Rank__c: number | null;
  BA_Adaptability_Answer__c: string | null;
  Communication_Rank_Recruiter__c: number | null;
  Communication_Rank_Tech_Screener__c: number | null;
  Concerns_Passing_Background__c: string | null;
  Concerns_Passing_Drug_Screen__c: string | null;
  Currently_Student__c: string | null;
  Dressed_Professionally__c: string | null;
  Drug_Screen_Notes__c: string | null;
  Education_Level__c: string | null;
  Event_ID_Microsoft__c: string | null;
  Expected_Degree__c: string | null;
  Expected_Graduation_Date__c: DateString | null;
  External_Applications__c: string | null;
  GCLID__c: string | null;
  Git_Hub_URL__c: string | null;
  Good_Fit__c: string | null;
  Graduation_Date__c: DateString | null;
  Instagram_URL__c: string | null;
  LinkedIn_URL__c: string | null;
  Major__c: string | null;
  Military_Branch__c: string | null;
  Military_Status__c: string | null;
  Months_to_Graduation__c: number | null;
  Opportunity_Rank__c: string | null;
  Overall_Candidate_Rank_Recruiter__c: number | null;
  Overall_Candidate_Rank_Tech_Screener__c: number | null;
  Pre_Screen_Raw_Data_2__c: string | null;
  Pre_Screen_Raw_Data__c: string | null;
  Prescreen_Result__c: string | null;
  Previous_Challenge_ID__c: string | null;
  Project_Experience_Months__c: number | null;
  Projects__c: string | null;
  Refer_a_Friend__c: string | null;
  Responsive_Notes__c: string | null;
  Screener_Determination__c: string | null;
  Security_Clearance__c: string | null;
  Source_Prescreen__c: string | null;
  Strongest_Programming_Languages__c: string | null;
  Teamwork_Experience__c: string | null;
  Tech_Screen_Appointment_Event_ID__c: string | null;
  Tech_Screen_Appointment_ID__c: string | null;
  Tech_Screen_Appointment_Status__c: string | null;
  Tech_Screen_Cancellation_Link__c: string | null;
  Tech_Screen_Date__c: DateString | null;
  Tech_Screen_Raw_Data__c: string | null;
  Tech_Screen_Result__c: string | null;
  Tech_Screen_Scheduling_Link__c: string | null;
  Bullhorn_ID__c: string | null;
  Total_Behavioral_Score__c: string | null;
  Total_Project_Score__c: string | null;
  Total_Technical_Score__c: string | null;
  Two_Year_Committment__c: string | null;
  Vaccination_Notes__c: string | null;
  Vaccination_Status__c: string | null;
  Webinar_Appointment_ID__c: string | null;
  Webinar_Appointment_Status__c: string | null;
  Webinar_Attended__c: string | null;
  Webinar_Date__c: DateString | null;
  Webinar_Link__c: string | null;
  Webinar_Poll_Response__c: string | null;
  Webinar_Registrant_ID__c: string | null;
  Webinar_Scheduling_Link__c: string | null;
  Willing_to_Relocate__c: string | null;
  Years_of_Experience_Self_Disclosed__c: string | null;
  Work_Authorization__c: string | null;
  Job__c: string | null;
  Application_N__c: number | null;
  Rejection_Reason__c: string | null;
  Willing_to_Relocate_Notes__c: string | null;
  Hobbies__c: string | null;
  Best_Attributes__c: string | null;
  Responsive__c: string | null;
  Snooze_Reason__c: string | null;
  Major_Notes__c: string | null;
  Rate_Us__c: number | null;
  Source_Prescreen_Notes__c: string | null;
  Strongest_Programming_Languages_Notes__c: string | null;
  Behavioral_Assessment_Adaptability__c: string | null;
  Behavioral_Assessment_Ownership__c: string | null;
  Project_Quality__c: number | null;
  Project_Technical_Explanation__c: number | null;
  Tech_Screen_Notes__c: string | null;
  Technical_Question_1_Score__c: string | null;
  Technical_Question_2_Score__c: string | null;
  Technical_Question_3_Score__c: string | null;
  Technical_Question_4_Score__c: string | null;
  Technical_Question_5_Score__c: string | null;
  Prescreen_Appointment_Status__c: string | null;
  Prescreen_Date__c: DateString | null;
  pandadoc__TrackingNumber__c: string | null;
  Webinar_ID__c: string | null;
  Webinar_Occurrence_ID__c: string | null;
  Application_Date__c: DateString | null;
  BA_Adaptability_Question__c: string | null;
  BA_Ownership_Answer__c: string | null;
  BA_Ownership_Question__c: string | null;
  Prescreen_Scheduling_Link__c: string | null;
  Prescreen_Appointment_ID__c: string | null;
  Tech_Screener__c: string | null;
  Candidate_Phone_Number__c: string | null;
  External_Tech_Screen_Link__c: string | null;
  Rejection_Stage__c: string | null;
};

type ParentReferences$OpportunityChangeEvent = {
  //
};

type ChildRelationships$OpportunityChangeEvent = {
  //
};

interface SObjectDefinition$OpportunityChangeEvent extends SObjectDefinition<'OpportunityChangeEvent'> {
    Name: 'OpportunityChangeEvent';
    Fields: Fields$OpportunityChangeEvent;
    ParentReferences: ParentReferences$OpportunityChangeEvent;
    ChildRelationships: ChildRelationships$OpportunityChangeEvent;
  }

type Fields$OpportunityCompetitor = {
  //
  Id: string;
  OpportunityId: string;
  CompetitorName: string | null;
  Strengths: string | null;
  Weaknesses: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$OpportunityCompetitor = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityCompetitor = {
  //
};

interface SObjectDefinition$OpportunityCompetitor extends SObjectDefinition<'OpportunityCompetitor'> {
    Name: 'OpportunityCompetitor';
    Fields: Fields$OpportunityCompetitor;
    ParentReferences: ParentReferences$OpportunityCompetitor;
    ChildRelationships: ChildRelationships$OpportunityCompetitor;
  }

type Fields$OpportunityContactRole = {
  //
  Id: string;
  OpportunityId: string;
  ContactId: string;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$OpportunityContactRole = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  Contact: SObjectDefinition$Contact;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityContactRole = {
  //
};

interface SObjectDefinition$OpportunityContactRole extends SObjectDefinition<'OpportunityContactRole'> {
    Name: 'OpportunityContactRole';
    Fields: Fields$OpportunityContactRole;
    ParentReferences: ParentReferences$OpportunityContactRole;
    ChildRelationships: ChildRelationships$OpportunityContactRole;
  }

type Fields$OpportunityContactRoleChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OpportunityId: string | null;
  ContactId: string | null;
  Role: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$OpportunityContactRoleChangeEvent = {
  //
};

type ChildRelationships$OpportunityContactRoleChangeEvent = {
  //
};

interface SObjectDefinition$OpportunityContactRoleChangeEvent extends SObjectDefinition<'OpportunityContactRoleChangeEvent'> {
    Name: 'OpportunityContactRoleChangeEvent';
    Fields: Fields$OpportunityContactRoleChangeEvent;
    ParentReferences: ParentReferences$OpportunityContactRoleChangeEvent;
    ChildRelationships: ChildRelationships$OpportunityContactRoleChangeEvent;
  }

type Fields$OpportunityFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$OpportunityFeed = {
  //
  Parent: SObjectDefinition$Opportunity;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$OpportunityFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$OpportunityFeed extends SObjectDefinition<'OpportunityFeed'> {
    Name: 'OpportunityFeed';
    Fields: Fields$OpportunityFeed;
    ParentReferences: ParentReferences$OpportunityFeed;
    ChildRelationships: ChildRelationships$OpportunityFeed;
  }

type Fields$OpportunityFieldHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  OpportunityId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$OpportunityFieldHistory = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityFieldHistory = {
  //
};

interface SObjectDefinition$OpportunityFieldHistory extends SObjectDefinition<'OpportunityFieldHistory'> {
    Name: 'OpportunityFieldHistory';
    Fields: Fields$OpportunityFieldHistory;
    ParentReferences: ParentReferences$OpportunityFieldHistory;
    ChildRelationships: ChildRelationships$OpportunityFieldHistory;
  }

type Fields$OpportunityHistory = {
  //
  Id: string;
  OpportunityId: string;
  CreatedById: string;
  CreatedDate: DateString;
  StageName: string;
  Amount: number | null;
  ExpectedRevenue: number | null;
  CloseDate: DateString | null;
  Probability: number | null;
  ForecastCategory: string | null;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  PrevAmount: number | null;
  PrevCloseDate: DateString | null;
};

type ParentReferences$OpportunityHistory = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityHistory = {
  //
  OpportunitiesAmountChanged: SObjectDefinition$Opportunity;
  OpportunitiesCloseDateChanged: SObjectDefinition$Opportunity;
};

interface SObjectDefinition$OpportunityHistory extends SObjectDefinition<'OpportunityHistory'> {
    Name: 'OpportunityHistory';
    Fields: Fields$OpportunityHistory;
    ParentReferences: ParentReferences$OpportunityHistory;
    ChildRelationships: ChildRelationships$OpportunityHistory;
  }

type Fields$OpportunityLineItem = {
  //
  Id: string;
  OpportunityId: string;
  SortOrder: number | null;
  PricebookEntryId: string | null;
  Product2Id: string | null;
  ProductCode: string | null;
  Name: string | null;
  Quantity: number;
  TotalPrice: number | null;
  UnitPrice: number | null;
  ListPrice: number | null;
  ServiceDate: DateString | null;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$OpportunityLineItem = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  PricebookEntry: SObjectDefinition$PricebookEntry | null;
  Product2: SObjectDefinition$Product2 | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityLineItem = {
  //
};

interface SObjectDefinition$OpportunityLineItem extends SObjectDefinition<'OpportunityLineItem'> {
    Name: 'OpportunityLineItem';
    Fields: Fields$OpportunityLineItem;
    ParentReferences: ParentReferences$OpportunityLineItem;
    ChildRelationships: ChildRelationships$OpportunityLineItem;
  }

type Fields$OpportunityPartner = {
  //
  Id: string;
  OpportunityId: string;
  AccountToId: string;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  ReversePartnerId: string | null;
};

type ParentReferences$OpportunityPartner = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  AccountTo: SObjectDefinition$Account;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityPartner = {
  //
};

interface SObjectDefinition$OpportunityPartner extends SObjectDefinition<'OpportunityPartner'> {
    Name: 'OpportunityPartner';
    Fields: Fields$OpportunityPartner;
    ParentReferences: ParentReferences$OpportunityPartner;
    ChildRelationships: ChildRelationships$OpportunityPartner;
  }

type Fields$OpportunityShare = {
  //
  Id: string;
  OpportunityId: string;
  UserOrGroupId: string;
  OpportunityAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$OpportunityShare = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityShare = {
  //
};

interface SObjectDefinition$OpportunityShare extends SObjectDefinition<'OpportunityShare'> {
    Name: 'OpportunityShare';
    Fields: Fields$OpportunityShare;
    ParentReferences: ParentReferences$OpportunityShare;
    ChildRelationships: ChildRelationships$OpportunityShare;
  }

type Fields$OpportunityStage = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  IsActive: boolean;
  SortOrder: number | null;
  IsClosed: boolean;
  IsWon: boolean;
  ForecastCategory: string;
  ForecastCategoryName: string;
  DefaultProbability: number | null;
  Description: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$OpportunityStage = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityStage = {
  //
};

interface SObjectDefinition$OpportunityStage extends SObjectDefinition<'OpportunityStage'> {
    Name: 'OpportunityStage';
    Fields: Fields$OpportunityStage;
    ParentReferences: ParentReferences$OpportunityStage;
    ChildRelationships: ChildRelationships$OpportunityStage;
  }

type Fields$OpportunityTeamMember = {
  //
  Id: string;
  OpportunityId: string;
  UserId: string;
  Name: string | null;
  PhotoUrl: string | null;
  Title: string | null;
  TeamMemberRole: string | null;
  OpportunityAccessLevel: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$OpportunityTeamMember = {
  //
  Opportunity: SObjectDefinition$Opportunity;
  User: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OpportunityTeamMember = {
  //
};

interface SObjectDefinition$OpportunityTeamMember extends SObjectDefinition<'OpportunityTeamMember'> {
    Name: 'OpportunityTeamMember';
    Fields: Fields$OpportunityTeamMember;
    ParentReferences: ParentReferences$OpportunityTeamMember;
    ChildRelationships: ChildRelationships$OpportunityTeamMember;
  }

type Fields$Order = {
  //
  Id: string;
  OwnerId: string;
  ContractId: string | null;
  AccountId: string | null;
  Pricebook2Id: string | null;
  OriginalOrderId: string | null;
  EffectiveDate: DateString;
  EndDate: DateString | null;
  IsReductionOrder: boolean;
  Status: string;
  Description: string | null;
  CustomerAuthorizedById: string | null;
  CompanyAuthorizedById: string | null;
  Type: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingStateCode: string | null;
  BillingCountryCode: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingStateCode: string | null;
  ShippingCountryCode: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  ActivatedDate: DateString | null;
  ActivatedById: string | null;
  StatusCode: string;
  OrderNumber: string;
  TotalAmount: number;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Order = {
  //
  Owner: SObjectDefinition$Name;
  Contract: SObjectDefinition$Contract | null;
  Account: SObjectDefinition$Account | null;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  OriginalOrder: SObjectDefinition$Order | null;
  CustomerAuthorizedBy: SObjectDefinition$Contact | null;
  CompanyAuthorizedBy: SObjectDefinition$User | null;
  ActivatedBy: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Order = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  Orders: SObjectDefinition$Order;
  Feeds: SObjectDefinition$OrderFeed;
  Histories: SObjectDefinition$OrderHistory;
  OrderItems: SObjectDefinition$OrderItem;
  Shares: SObjectDefinition$OrderShare;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Order extends SObjectDefinition<'Order'> {
    Name: 'Order';
    Fields: Fields$Order;
    ParentReferences: ParentReferences$Order;
    ChildRelationships: ChildRelationships$Order;
  }

type Fields$OrderChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  ContractId: string | null;
  AccountId: string | null;
  Pricebook2Id: string | null;
  OriginalOrderId: string | null;
  EffectiveDate: DateString | null;
  EndDate: DateString | null;
  IsReductionOrder: boolean;
  Status: string | null;
  Description: string | null;
  CustomerAuthorizedById: string | null;
  CompanyAuthorizedById: string | null;
  Type: string | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingStateCode: string | null;
  BillingCountryCode: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingStateCode: string | null;
  ShippingCountryCode: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  ActivatedDate: DateString | null;
  ActivatedById: string | null;
  StatusCode: string | null;
  OrderNumber: string;
  TotalAmount: number | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$OrderChangeEvent = {
  //
};

type ChildRelationships$OrderChangeEvent = {
  //
};

interface SObjectDefinition$OrderChangeEvent extends SObjectDefinition<'OrderChangeEvent'> {
    Name: 'OrderChangeEvent';
    Fields: Fields$OrderChangeEvent;
    ParentReferences: ParentReferences$OrderChangeEvent;
    ChildRelationships: ChildRelationships$OrderChangeEvent;
  }

type Fields$OrderFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$OrderFeed = {
  //
  Parent: SObjectDefinition$Order;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$OrderFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$OrderFeed extends SObjectDefinition<'OrderFeed'> {
    Name: 'OrderFeed';
    Fields: Fields$OrderFeed;
    ParentReferences: ParentReferences$OrderFeed;
    ChildRelationships: ChildRelationships$OrderFeed;
  }

type Fields$OrderHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  OrderId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$OrderHistory = {
  //
  Order: SObjectDefinition$Order;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderHistory = {
  //
};

interface SObjectDefinition$OrderHistory extends SObjectDefinition<'OrderHistory'> {
    Name: 'OrderHistory';
    Fields: Fields$OrderHistory;
    ParentReferences: ParentReferences$OrderHistory;
    ChildRelationships: ChildRelationships$OrderHistory;
  }

type Fields$OrderItem = {
  //
  Id: string;
  Product2Id: string | null;
  IsDeleted: boolean;
  OrderId: string;
  PricebookEntryId: string;
  OriginalOrderItemId: string | null;
  AvailableQuantity: number | null;
  Quantity: number;
  UnitPrice: number | null;
  ListPrice: number | null;
  TotalPrice: number | null;
  ServiceDate: DateString | null;
  EndDate: DateString | null;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OrderItemNumber: string;
};

type ParentReferences$OrderItem = {
  //
  Product2: SObjectDefinition$Product2 | null;
  Order: SObjectDefinition$Order;
  PricebookEntry: SObjectDefinition$PricebookEntry;
  OriginalOrderItem: SObjectDefinition$OrderItem | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderItem = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ChildOrderItems: SObjectDefinition$OrderItem;
  Feeds: SObjectDefinition$OrderItemFeed;
  Histories: SObjectDefinition$OrderItemHistory;
  ProcessExceptions: SObjectDefinition$ProcessException;
};

interface SObjectDefinition$OrderItem extends SObjectDefinition<'OrderItem'> {
    Name: 'OrderItem';
    Fields: Fields$OrderItem;
    ParentReferences: ParentReferences$OrderItem;
    ChildRelationships: ChildRelationships$OrderItem;
  }

type Fields$OrderItemChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OrderId: string | null;
  PricebookEntryId: string | null;
  OriginalOrderItemId: string | null;
  AvailableQuantity: number | null;
  Quantity: number | null;
  UnitPrice: number | null;
  ListPrice: number | null;
  ServiceDate: DateString | null;
  EndDate: DateString | null;
  Description: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  OrderItemNumber: string;
};

type ParentReferences$OrderItemChangeEvent = {
  //
};

type ChildRelationships$OrderItemChangeEvent = {
  //
};

interface SObjectDefinition$OrderItemChangeEvent extends SObjectDefinition<'OrderItemChangeEvent'> {
    Name: 'OrderItemChangeEvent';
    Fields: Fields$OrderItemChangeEvent;
    ParentReferences: ParentReferences$OrderItemChangeEvent;
    ChildRelationships: ChildRelationships$OrderItemChangeEvent;
  }

type Fields$OrderItemFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$OrderItemFeed = {
  //
  Parent: SObjectDefinition$OrderItem;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$OrderItemFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$OrderItemFeed extends SObjectDefinition<'OrderItemFeed'> {
    Name: 'OrderItemFeed';
    Fields: Fields$OrderItemFeed;
    ParentReferences: ParentReferences$OrderItemFeed;
    ChildRelationships: ChildRelationships$OrderItemFeed;
  }

type Fields$OrderItemHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  OrderItemId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$OrderItemHistory = {
  //
  OrderItem: SObjectDefinition$OrderItem;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderItemHistory = {
  //
};

interface SObjectDefinition$OrderItemHistory extends SObjectDefinition<'OrderItemHistory'> {
    Name: 'OrderItemHistory';
    Fields: Fields$OrderItemHistory;
    ParentReferences: ParentReferences$OrderItemHistory;
    ChildRelationships: ChildRelationships$OrderItemHistory;
  }

type Fields$OrderShare = {
  //
  Id: string;
  OrderId: string;
  UserOrGroupId: string;
  OrderAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$OrderShare = {
  //
  Order: SObjectDefinition$Order;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderShare = {
  //
};

interface SObjectDefinition$OrderShare extends SObjectDefinition<'OrderShare'> {
    Name: 'OrderShare';
    Fields: Fields$OrderShare;
    ParentReferences: ParentReferences$OrderShare;
    ChildRelationships: ChildRelationships$OrderShare;
  }

type Fields$OrderStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  StatusCode: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$OrderStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OrderStatus = {
  //
};

interface SObjectDefinition$OrderStatus extends SObjectDefinition<'OrderStatus'> {
    Name: 'OrderStatus';
    Fields: Fields$OrderStatus;
    ParentReferences: ParentReferences$OrderStatus;
    ChildRelationships: ChildRelationships$OrderStatus;
  }

type Fields$OrgLifecycleNotification = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LifecycleRequestType: string | null;
  LifecycleRequestId: string | null;
  OrgId: string | null;
  Status: string | null;
  StatusCode: string | null;
};

type ParentReferences$OrgLifecycleNotification = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$OrgLifecycleNotification = {
  //
};

interface SObjectDefinition$OrgLifecycleNotification extends SObjectDefinition<'OrgLifecycleNotification'> {
    Name: 'OrgLifecycleNotification';
    Fields: Fields$OrgLifecycleNotification;
    ParentReferences: ParentReferences$OrgLifecycleNotification;
    ChildRelationships: ChildRelationships$OrgLifecycleNotification;
  }

type Fields$OrgMetric = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LatestOrgMetricScanSummaryId: string | null;
  FeatureType: string | null;
  Category: string | null;
};

type ParentReferences$OrgMetric = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  LatestOrgMetricScanSummary: SObjectDefinition$OrgMetricScanSummary | null;
};

type ChildRelationships$OrgMetric = {
  //
  OrgMetric: SObjectDefinition$OrgMetricScanSummary;
};

interface SObjectDefinition$OrgMetric extends SObjectDefinition<'OrgMetric'> {
    Name: 'OrgMetric';
    Fields: Fields$OrgMetric;
    ParentReferences: ParentReferences$OrgMetric;
    ChildRelationships: ChildRelationships$OrgMetric;
  }

type Fields$OrgMetricScanResult = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OrgMetricScanSummaryId: string;
  Url: string | null;
  Object: string | null;
  Date: DateString | null;
  Type: string | null;
  Profile: number | null;
  User: string | null;
  Quantity: number | null;
  ItemStatus: string | null;
  Flags: number | null;
};

type ParentReferences$OrgMetricScanResult = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OrgMetricScanSummary: SObjectDefinition$OrgMetricScanSummary;
};

type ChildRelationships$OrgMetricScanResult = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$OrgMetricScanResult extends SObjectDefinition<'OrgMetricScanResult'> {
    Name: 'OrgMetricScanResult';
    Fields: Fields$OrgMetricScanResult;
    ParentReferences: ParentReferences$OrgMetricScanResult;
    ChildRelationships: ChildRelationships$OrgMetricScanResult;
  }

type Fields$OrgMetricScanSummary = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  OrgMetricId: string;
  Status: string | null;
  ImplementationEffort: string | null;
  ErrorMessage: string | null;
  ItemCount: number | null;
  FeatureLimit: number | null;
  Unit: string | null;
  PercentUsage: number | null;
  ScanDate: DateString | null;
};

type ParentReferences$OrgMetricScanSummary = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OrgMetric: SObjectDefinition$OrgMetric;
};

type ChildRelationships$OrgMetricScanSummary = {
  //
  OrgMetricScanSummary: SObjectDefinition$OrgMetricScanResult;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$OrgMetricScanSummary extends SObjectDefinition<'OrgMetricScanSummary'> {
    Name: 'OrgMetricScanSummary';
    Fields: Fields$OrgMetricScanSummary;
    ParentReferences: ParentReferences$OrgMetricScanSummary;
    ChildRelationships: ChildRelationships$OrgMetricScanSummary;
  }

type Fields$OrgWideEmailAddress = {
  //
  Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Address: string;
  DisplayName: string;
  IsAllowAllProfiles: boolean;
};

type ParentReferences$OrgWideEmailAddress = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OrgWideEmailAddress = {
  //
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$OrgWideEmailAddress extends SObjectDefinition<'OrgWideEmailAddress'> {
    Name: 'OrgWideEmailAddress';
    Fields: Fields$OrgWideEmailAddress;
    ParentReferences: ParentReferences$OrgWideEmailAddress;
    ChildRelationships: ChildRelationships$OrgWideEmailAddress;
  }

type Fields$Organization = {
  //
  Id: string;
  Name: string;
  Division: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  StateCode: string | null;
  CountryCode: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Phone: string | null;
  Fax: string | null;
  PrimaryContact: string | null;
  DefaultLocaleSidKey: string;
  TimeZoneSidKey: string;
  LanguageLocaleKey: string;
  ReceivesInfoEmails: boolean;
  ReceivesAdminInfoEmails: boolean;
  PreferencesRequireOpportunityProducts: boolean;
  PreferencesConsentManagementEnabled: boolean;
  PreferencesAutoSelectIndividualOnMerge: boolean;
  PreferencesLightningLoginEnabled: boolean;
  PreferencesOnlyLLPermUserAllowed: boolean;
  FiscalYearStartMonth: number | null;
  UsesStartDateAsFiscalYearName: boolean;
  DefaultAccountAccess: string | null;
  DefaultContactAccess: string | null;
  DefaultOpportunityAccess: string | null;
  DefaultLeadAccess: string | null;
  DefaultCaseAccess: string | null;
  DefaultCalendarAccess: string | null;
  DefaultPricebookAccess: string | null;
  DefaultCampaignAccess: string | null;
  SystemModstamp: DateString;
  ComplianceBccEmail: string | null;
  UiSkin: string | null;
  SignupCountryIsoCode: string | null;
  TrialExpirationDate: DateString | null;
  NumKnowledgeService: number | null;
  OrganizationType: string | null;
  NamespacePrefix: string | null;
  InstanceName: string | null;
  IsSandbox: boolean;
  WebToCaseDefaultOrigin: string | null;
  MonthlyPageViewsUsed: number | null;
  MonthlyPageViewsEntitlement: number | null;
  IsReadOnly: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$Organization = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Organization = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  CustomBrands: SObjectDefinition$CustomBrand;
};

interface SObjectDefinition$Organization extends SObjectDefinition<'Organization'> {
    Name: 'Organization';
    Fields: Fields$Organization;
    ParentReferences: ParentReferences$Organization;
    ChildRelationships: ChildRelationships$Organization;
  }

type Fields$OutgoingEmail = {
  //
  Id: string;
  ExternalId: string | null;
  ValidatedFromAddress: string | null;
  ToAddress: string | null;
  CcAddress: string | null;
  BccAddress: string | null;
  Subject: string | null;
  TextBody: string | null;
  HtmlBody: string | null;
  RelatedToId: string | null;
  WhoId: string | null;
  EmailTemplateId: string | null;
  InReplyTo: string | null;
  References: string | null;
  MessageId: string | null;
};

type ParentReferences$OutgoingEmail = {
  //
  RelatedTo: SObjectDefinition$Name | null;
  Who: SObjectDefinition$Name | null;
  EmailTemplate: SObjectDefinition$EmailTemplate | null;
};

type ChildRelationships$OutgoingEmail = {
  //
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  OutgoingEmailRelations: SObjectDefinition$OutgoingEmailRelation;
};

interface SObjectDefinition$OutgoingEmail extends SObjectDefinition<'OutgoingEmail'> {
    Name: 'OutgoingEmail';
    Fields: Fields$OutgoingEmail;
    ParentReferences: ParentReferences$OutgoingEmail;
    ChildRelationships: ChildRelationships$OutgoingEmail;
  }

type Fields$OutgoingEmailRelation = {
  //
  Id: string;
  ExternalId: string | null;
  OutgoingEmailId: string | null;
  RelationId: string | null;
  RelationAddress: string | null;
};

type ParentReferences$OutgoingEmailRelation = {
  //
  Relation: SObjectDefinition$Name | null;
};

type ChildRelationships$OutgoingEmailRelation = {
  //
};

interface SObjectDefinition$OutgoingEmailRelation extends SObjectDefinition<'OutgoingEmailRelation'> {
    Name: 'OutgoingEmailRelation';
    Fields: Fields$OutgoingEmailRelation;
    ParentReferences: ParentReferences$OutgoingEmailRelation;
    ChildRelationships: ChildRelationships$OutgoingEmailRelation;
  }

type Fields$OwnedContentDocument = {
  //
  Id: string;
  IsDeleted: boolean;
  OwnerId: string;
  ContentDocumentId: string | null;
  Title: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  FileType: string | null;
  ContentSize: number | null;
  FileExtension: string | null;
  ContentUrl: string | null;
  ExternalDataSourceName: string | null;
  ExternalDataSourceType: string | null;
};

type ParentReferences$OwnedContentDocument = {
  //
  Owner: SObjectDefinition$User;
  ContentDocument: SObjectDefinition$ContentDocument | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$OwnedContentDocument = {
  //
};

interface SObjectDefinition$OwnedContentDocument extends SObjectDefinition<'OwnedContentDocument'> {
    Name: 'OwnedContentDocument';
    Fields: Fields$OwnedContentDocument;
    ParentReferences: ParentReferences$OwnedContentDocument;
    ChildRelationships: ChildRelationships$OwnedContentDocument;
  }

type Fields$OwnerChangeOptionInfo = {
  //
  Id: string;
  DurableId: string | null;
  EntityDefinitionId: string | null;
  Name: string | null;
  Label: string | null;
  IsEditable: boolean;
  DefaultValue: boolean;
  ParentId: string | null;
};

type ParentReferences$OwnerChangeOptionInfo = {
  //
};

type ChildRelationships$OwnerChangeOptionInfo = {
  //
  ChildOwnerChangeOptionInfo: SObjectDefinition$OwnerChangeOptionInfo;
};

interface SObjectDefinition$OwnerChangeOptionInfo extends SObjectDefinition<'OwnerChangeOptionInfo'> {
    Name: 'OwnerChangeOptionInfo';
    Fields: Fields$OwnerChangeOptionInfo;
    ParentReferences: ParentReferences$OwnerChangeOptionInfo;
    ChildRelationships: ChildRelationships$OwnerChangeOptionInfo;
  }

type Fields$PTO_Request__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Comment__c: string | null;
  Adjusted_Total_Hours__c: number | null;
  Approval_Status__c: string | null;
  Contact__c: string | null;
  Hours__c: number | null;
  Request_Initiated_By__c: string | null;
  Start_Date__c: DateString | null;
  Status__c: string | null;
  Dates__c: string | null;
  End_Date__c: DateString | null;
  Total_Hours__c: number | null;
  Type__c: string | null;
};

type ParentReferences$PTO_Request__ChangeEvent = {
  //
};

type ChildRelationships$PTO_Request__ChangeEvent = {
  //
};

interface SObjectDefinition$PTO_Request__ChangeEvent extends SObjectDefinition<'PTO_Request__ChangeEvent'> {
    Name: 'PTO_Request__ChangeEvent';
    Fields: Fields$PTO_Request__ChangeEvent;
    ParentReferences: ParentReferences$PTO_Request__ChangeEvent;
    ChildRelationships: ChildRelationships$PTO_Request__ChangeEvent;
  }

type Fields$PTO_Request__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Comment__c: string | null;
  Adjusted_Total_Hours__c: number | null;
  Approval_Status__c: string | null;
  Contact__c: string | null;
  Hours__c: number;
  Request_Initiated_By__c: string | null;
  Start_Date__c: DateString;
  Status__c: string | null;
  Dates__c: string | null;
  End_Date__c: DateString | null;
  Total_Hours__c: number | null;
  Type__c: string | null;
};

type ParentReferences$PTO_Request__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$PTO_Request__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$PTO_Request__c extends SObjectDefinition<'PTO_Request__c'> {
    Name: 'PTO_Request__c';
    Fields: Fields$PTO_Request__c;
    ParentReferences: ParentReferences$PTO_Request__c;
    ChildRelationships: ChildRelationships$PTO_Request__c;
  }

type Fields$PackageLicense = {
  //
  Id: string;
  Status: string;
  IsProvisioned: boolean;
  AllowedLicenses: number;
  UsedLicenses: number;
  ExpirationDate: DateString | null;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  NamespacePrefix: string;
};

type ParentReferences$PackageLicense = {
  //
};

type ChildRelationships$PackageLicense = {
  //
};

interface SObjectDefinition$PackageLicense extends SObjectDefinition<'PackageLicense'> {
    Name: 'PackageLicense';
    Fields: Fields$PackageLicense;
    ParentReferences: ParentReferences$PackageLicense;
    ChildRelationships: ChildRelationships$PackageLicense;
  }

type Fields$Partner = {
  //
  Id: string;
  OpportunityId: string | null;
  AccountFromId: string | null;
  AccountToId: string;
  Role: string | null;
  IsPrimary: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  ReversePartnerId: string | null;
};

type ParentReferences$Partner = {
  //
  Opportunity: SObjectDefinition$Opportunity | null;
  AccountFrom: SObjectDefinition$Account | null;
  AccountTo: SObjectDefinition$Account;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Partner = {
  //
};

interface SObjectDefinition$Partner extends SObjectDefinition<'Partner'> {
    Name: 'Partner';
    Fields: Fields$Partner;
    ParentReferences: ParentReferences$Partner;
    ChildRelationships: ChildRelationships$Partner;
  }

type Fields$PartnerRole = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  ReverseRole: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$PartnerRole = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PartnerRole = {
  //
};

interface SObjectDefinition$PartnerRole extends SObjectDefinition<'PartnerRole'> {
    Name: 'PartnerRole';
    Fields: Fields$PartnerRole;
    ParentReferences: ParentReferences$PartnerRole;
    ChildRelationships: ChildRelationships$PartnerRole;
  }

type Fields$PartyConsent = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  PartyId: string;
  Action: string;
  PrivacyConsentStatus: string;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
};

type ParentReferences$PartyConsent = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Party: SObjectDefinition$Individual;
};

type ChildRelationships$PartyConsent = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  Feeds: SObjectDefinition$PartyConsentFeed;
  Histories: SObjectDefinition$PartyConsentHistory;
  Shares: SObjectDefinition$PartyConsentShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$PartyConsent extends SObjectDefinition<'PartyConsent'> {
    Name: 'PartyConsent';
    Fields: Fields$PartyConsent;
    ParentReferences: ParentReferences$PartyConsent;
    ChildRelationships: ChildRelationships$PartyConsent;
  }

type Fields$PartyConsentChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  PartyId: string | null;
  Action: string | null;
  PrivacyConsentStatus: string | null;
  CaptureDate: DateString | null;
  CaptureContactPointType: string | null;
  CaptureSource: string | null;
};

type ParentReferences$PartyConsentChangeEvent = {
  //
};

type ChildRelationships$PartyConsentChangeEvent = {
  //
};

interface SObjectDefinition$PartyConsentChangeEvent extends SObjectDefinition<'PartyConsentChangeEvent'> {
    Name: 'PartyConsentChangeEvent';
    Fields: Fields$PartyConsentChangeEvent;
    ParentReferences: ParentReferences$PartyConsentChangeEvent;
    ChildRelationships: ChildRelationships$PartyConsentChangeEvent;
  }

type Fields$PartyConsentFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$PartyConsentFeed = {
  //
  Parent: SObjectDefinition$PartyConsent;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$PartyConsentFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$PartyConsentFeed extends SObjectDefinition<'PartyConsentFeed'> {
    Name: 'PartyConsentFeed';
    Fields: Fields$PartyConsentFeed;
    ParentReferences: ParentReferences$PartyConsentFeed;
    ChildRelationships: ChildRelationships$PartyConsentFeed;
  }

type Fields$PartyConsentHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PartyConsentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PartyConsentHistory = {
  //
  PartyConsent: SObjectDefinition$PartyConsent;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PartyConsentHistory = {
  //
};

interface SObjectDefinition$PartyConsentHistory extends SObjectDefinition<'PartyConsentHistory'> {
    Name: 'PartyConsentHistory';
    Fields: Fields$PartyConsentHistory;
    ParentReferences: ParentReferences$PartyConsentHistory;
    ChildRelationships: ChildRelationships$PartyConsentHistory;
  }

type Fields$PartyConsentShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PartyConsentShare = {
  //
  Parent: SObjectDefinition$PartyConsent;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PartyConsentShare = {
  //
};

interface SObjectDefinition$PartyConsentShare extends SObjectDefinition<'PartyConsentShare'> {
    Name: 'PartyConsentShare';
    Fields: Fields$PartyConsentShare;
    ParentReferences: ParentReferences$PartyConsentShare;
    ChildRelationships: ChildRelationships$PartyConsentShare;
  }

type Fields$Pay_Period_Year__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Contact__c: string | null;
  End_Date__c: DateString | null;
  PTO_Carryover__c: number | null;
  Start_Date__c: DateString | null;
  Year__c: string | null;
  PTO_Balance_2__c: number | null;
  PTO_Balance__c: number | null;
  PTO_Earned__c: number | null;
  PTO_Pending_Approval__c: number | null;
  PTO_Scheduled__c: number | null;
  PTO_Taken__c: number | null;
  PTO_Earned_Override__c: number | null;
};

type ParentReferences$Pay_Period_Year__ChangeEvent = {
  //
};

type ChildRelationships$Pay_Period_Year__ChangeEvent = {
  //
};

interface SObjectDefinition$Pay_Period_Year__ChangeEvent extends SObjectDefinition<'Pay_Period_Year__ChangeEvent'> {
    Name: 'Pay_Period_Year__ChangeEvent';
    Fields: Fields$Pay_Period_Year__ChangeEvent;
    ParentReferences: ParentReferences$Pay_Period_Year__ChangeEvent;
    ChildRelationships: ChildRelationships$Pay_Period_Year__ChangeEvent;
  }

type Fields$Pay_Period_Year__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Contact__c: string | null;
  End_Date__c: DateString | null;
  PTO_Carryover__c: number | null;
  Start_Date__c: DateString | null;
  Year__c: string | null;
  PTO_Balance_2__c: number | null;
  PTO_Balance__c: number | null;
  PTO_Earned__c: number | null;
  PTO_Pending_Approval__c: number | null;
  PTO_Scheduled__c: number | null;
  PTO_Taken__c: number | null;
  PTO_Earned_Override__c: number | null;
};

type ParentReferences$Pay_Period_Year__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Pay_Period_Year__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Pay_Period_Year__c extends SObjectDefinition<'Pay_Period_Year__c'> {
    Name: 'Pay_Period_Year__c';
    Fields: Fields$Pay_Period_Year__c;
    ParentReferences: ParentReferences$Pay_Period_Year__c;
    ChildRelationships: ChildRelationships$Pay_Period_Year__c;
  }

type Fields$Pay_Period__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Contact__c: string | null;
  Earned_Data__c: string | null;
  End_Date__c: DateString | null;
  LWP_Hours__c: number | null;
  PTO_Balance__c: number | null;
  PTO_Carryover__c: number | null;
  PTO_Earned__c: number | null;
  PTO_Pending_Approval__c: number | null;
  PTO_Scheduled__c: number | null;
  PTO_Taken__c: number | null;
  Payroll_Periods_Data__c: string | null;
  Start_Date__c: DateString | null;
  Pay_Period_Year__c: string | null;
  PTO_Balance_wo_Carryover__c: number | null;
  Status__c: string | null;
  PTO_Earned_Override__c: number | null;
  PTO_Earned_Final__c: number | null;
};

type ParentReferences$Pay_Period__ChangeEvent = {
  //
};

type ChildRelationships$Pay_Period__ChangeEvent = {
  //
};

interface SObjectDefinition$Pay_Period__ChangeEvent extends SObjectDefinition<'Pay_Period__ChangeEvent'> {
    Name: 'Pay_Period__ChangeEvent';
    Fields: Fields$Pay_Period__ChangeEvent;
    ParentReferences: ParentReferences$Pay_Period__ChangeEvent;
    ChildRelationships: ChildRelationships$Pay_Period__ChangeEvent;
  }

type Fields$Pay_Period__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Contact__c: string | null;
  Earned_Data__c: string | null;
  End_Date__c: DateString;
  LWP_Hours__c: number | null;
  PTO_Balance__c: number | null;
  PTO_Carryover__c: number | null;
  PTO_Earned__c: number | null;
  PTO_Pending_Approval__c: number | null;
  PTO_Scheduled__c: number | null;
  PTO_Taken__c: number | null;
  Payroll_Periods_Data__c: string | null;
  Start_Date__c: DateString;
  Pay_Period_Year__c: string;
  PTO_Balance_wo_Carryover__c: number | null;
  Status__c: string | null;
  PTO_Earned_Override__c: number | null;
  PTO_Earned_Final__c: number | null;
};

type ParentReferences$Pay_Period__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact__r: SObjectDefinition$Contact | null;
  Pay_Period_Year__r: SObjectDefinition$Pay_Period_Year__c;
};

type ChildRelationships$Pay_Period__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Pay_Period__c extends SObjectDefinition<'Pay_Period__c'> {
    Name: 'Pay_Period__c';
    Fields: Fields$Pay_Period__c;
    ParentReferences: ParentReferences$Pay_Period__c;
    ChildRelationships: ChildRelationships$Pay_Period__c;
  }

type Fields$Payroll_Config__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Data__c: string | null;
};

type ParentReferences$Payroll_Config__ChangeEvent = {
  //
};

type ChildRelationships$Payroll_Config__ChangeEvent = {
  //
};

interface SObjectDefinition$Payroll_Config__ChangeEvent extends SObjectDefinition<'Payroll_Config__ChangeEvent'> {
    Name: 'Payroll_Config__ChangeEvent';
    Fields: Fields$Payroll_Config__ChangeEvent;
    ParentReferences: ParentReferences$Payroll_Config__ChangeEvent;
    ChildRelationships: ChildRelationships$Payroll_Config__ChangeEvent;
  }

type Fields$Payroll_Config__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Data__c: string | null;
};

type ParentReferences$Payroll_Config__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Payroll_Config__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Payroll_Config__c extends SObjectDefinition<'Payroll_Config__c'> {
    Name: 'Payroll_Config__c';
    Fields: Fields$Payroll_Config__c;
    ParentReferences: ParentReferences$Payroll_Config__c;
    ChildRelationships: ChildRelationships$Payroll_Config__c;
  }

type Fields$Payroll_Period_Adjustment__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Payroll_Period_Snapshot__c: string | null;
  Hours__c: number | null;
  Payroll_Date__c: DateString | null;
  Timesheet_Line_Name__c: string | null;
  Timesheet_Line__c: string | null;
  Timesheet_Line_Group_Id__c: string | null;
};

type ParentReferences$Payroll_Period_Adjustment__ChangeEvent = {
  //
};

type ChildRelationships$Payroll_Period_Adjustment__ChangeEvent = {
  //
};

interface SObjectDefinition$Payroll_Period_Adjustment__ChangeEvent extends SObjectDefinition<'Payroll_Period_Adjustment__ChangeEvent'> {
    Name: 'Payroll_Period_Adjustment__ChangeEvent';
    Fields: Fields$Payroll_Period_Adjustment__ChangeEvent;
    ParentReferences: ParentReferences$Payroll_Period_Adjustment__ChangeEvent;
    ChildRelationships: ChildRelationships$Payroll_Period_Adjustment__ChangeEvent;
  }

type Fields$Payroll_Period_Adjustment__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Payroll_Period_Snapshot__c: string;
  Hours__c: number;
  Payroll_Date__c: DateString | null;
  Timesheet_Line_Name__c: string | null;
  Timesheet_Line__c: string | null;
  Timesheet_Line_Group_Id__c: string | null;
};

type ParentReferences$Payroll_Period_Adjustment__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Payroll_Period_Snapshot__r: SObjectDefinition$Payroll_Period_Snapshot__c;
  Timesheet_Line__r: SObjectDefinition$Timesheet_Line__c | null;
};

type ChildRelationships$Payroll_Period_Adjustment__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Payroll_Period_Adjustment__c extends SObjectDefinition<'Payroll_Period_Adjustment__c'> {
    Name: 'Payroll_Period_Adjustment__c';
    Fields: Fields$Payroll_Period_Adjustment__c;
    ParentReferences: ParentReferences$Payroll_Period_Adjustment__c;
    ChildRelationships: ChildRelationships$Payroll_Period_Adjustment__c;
  }

type Fields$Payroll_Period_Snapshot__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Payroll_Period__c: string | null;
  Data_Override__c: string | null;
  Data__c: string | null;
  Timesheet__c: string | null;
};

type ParentReferences$Payroll_Period_Snapshot__ChangeEvent = {
  //
};

type ChildRelationships$Payroll_Period_Snapshot__ChangeEvent = {
  //
};

interface SObjectDefinition$Payroll_Period_Snapshot__ChangeEvent extends SObjectDefinition<'Payroll_Period_Snapshot__ChangeEvent'> {
    Name: 'Payroll_Period_Snapshot__ChangeEvent';
    Fields: Fields$Payroll_Period_Snapshot__ChangeEvent;
    ParentReferences: ParentReferences$Payroll_Period_Snapshot__ChangeEvent;
    ChildRelationships: ChildRelationships$Payroll_Period_Snapshot__ChangeEvent;
  }

type Fields$Payroll_Period_Snapshot__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Payroll_Period__c: string;
  Data_Override__c: string | null;
  Data__c: string | null;
  Timesheet__c: string | null;
};

type ParentReferences$Payroll_Period_Snapshot__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Payroll_Period__r: SObjectDefinition$Payroll_Period__c;
  Timesheet__r: SObjectDefinition$Timesheet__c | null;
};

type ChildRelationships$Payroll_Period_Snapshot__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Payroll_Period_Snapshot__c extends SObjectDefinition<'Payroll_Period_Snapshot__c'> {
    Name: 'Payroll_Period_Snapshot__c';
    Fields: Fields$Payroll_Period_Snapshot__c;
    ParentReferences: ParentReferences$Payroll_Period_Snapshot__c;
    ChildRelationships: ChildRelationships$Payroll_Period_Snapshot__c;
  }

type Fields$Payroll_Period__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Start_Date__c: DateString | null;
};

type ParentReferences$Payroll_Period__ChangeEvent = {
  //
};

type ChildRelationships$Payroll_Period__ChangeEvent = {
  //
};

interface SObjectDefinition$Payroll_Period__ChangeEvent extends SObjectDefinition<'Payroll_Period__ChangeEvent'> {
    Name: 'Payroll_Period__ChangeEvent';
    Fields: Fields$Payroll_Period__ChangeEvent;
    ParentReferences: ParentReferences$Payroll_Period__ChangeEvent;
    ChildRelationships: ChildRelationships$Payroll_Period__ChangeEvent;
  }

type Fields$Payroll_Period__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Start_Date__c: DateString;
};

type ParentReferences$Payroll_Period__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Payroll_Period__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Payroll_Period__c extends SObjectDefinition<'Payroll_Period__c'> {
    Name: 'Payroll_Period__c';
    Fields: Fields$Payroll_Period__c;
    ParentReferences: ParentReferences$Payroll_Period__c;
    ChildRelationships: ChildRelationships$Payroll_Period__c;
  }

type Fields$Period = {
  //
  Id: string;
  FiscalYearSettingsId: string | null;
  Type: string | null;
  StartDate: DateString;
  EndDate: DateString;
  SystemModstamp: DateString;
  IsForecastPeriod: boolean;
  QuarterLabel: string | null;
  PeriodLabel: string | null;
  Number: number | null;
  FullyQualifiedLabel: string | null;
};

type ParentReferences$Period = {
  //
  FiscalYearSettings: SObjectDefinition$FiscalYearSettings | null;
};

type ChildRelationships$Period = {
  //
};

interface SObjectDefinition$Period extends SObjectDefinition<'Period'> {
    Name: 'Period';
    Fields: Fields$Period;
    ParentReferences: ParentReferences$Period;
    ChildRelationships: ChildRelationships$Period;
  }

type Fields$PermissionSet = {
  //
  Id: string;
  Name: string;
  Label: string;
  LicenseId: string | null;
  ProfileId: string | null;
  IsOwnedByProfile: boolean;
  IsCustom: boolean;
  PermissionsEmailSingle: boolean;
  PermissionsEmailMass: boolean;
  PermissionsEditTask: boolean;
  PermissionsEditEvent: boolean;
  PermissionsExportReport: boolean;
  PermissionsImportPersonal: boolean;
  PermissionsDataExport: boolean;
  PermissionsManageUsers: boolean;
  PermissionsEditPublicFilters: boolean;
  PermissionsEditPublicTemplates: boolean;
  PermissionsModifyAllData: boolean;
  PermissionsEditBillingInfo: boolean;
  PermissionsManageCases: boolean;
  PermissionsMassInlineEdit: boolean;
  PermissionsManageSolutions: boolean;
  PermissionsCustomizeApplication: boolean;
  PermissionsEditReadonlyFields: boolean;
  PermissionsRunReports: boolean;
  PermissionsViewSetup: boolean;
  PermissionsTransferAnyEntity: boolean;
  PermissionsNewReportBuilder: boolean;
  PermissionsActivateContract: boolean;
  PermissionsActivateOrder: boolean;
  PermissionsImportLeads: boolean;
  PermissionsManageLeads: boolean;
  PermissionsTransferAnyLead: boolean;
  PermissionsViewAllData: boolean;
  PermissionsEditPublicDocuments: boolean;
  PermissionsViewEncryptedData: boolean;
  PermissionsEditBrandTemplates: boolean;
  PermissionsEditHtmlTemplates: boolean;
  PermissionsChatterInternalUser: boolean;
  PermissionsDeleteActivatedContract: boolean;
  PermissionsChatterInviteExternalUsers: boolean;
  PermissionsSendSitRequests: boolean;
  PermissionsOverrideForecasts: boolean;
  PermissionsViewAllForecasts: boolean;
  PermissionsApiUserOnly: boolean;
  PermissionsManageRemoteAccess: boolean;
  PermissionsCanUseNewDashboardBuilder: boolean;
  PermissionsManageCategories: boolean;
  PermissionsConvertLeads: boolean;
  PermissionsPasswordNeverExpires: boolean;
  PermissionsUseTeamReassignWizards: boolean;
  PermissionsEditActivatedOrders: boolean;
  PermissionsInstallPackaging: boolean;
  PermissionsPublishPackaging: boolean;
  PermissionsChatterOwnGroups: boolean;
  PermissionsEditOppLineItemUnitPrice: boolean;
  PermissionsCreatePackaging: boolean;
  PermissionsBulkApiHardDelete: boolean;
  PermissionsInboundMigrationToolsUser: boolean;
  PermissionsSolutionImport: boolean;
  PermissionsManageCallCenters: boolean;
  PermissionsManageSynonyms: boolean;
  PermissionsOutboundMigrationToolsUser: boolean;
  PermissionsViewContent: boolean;
  PermissionsManageEmailClientConfig: boolean;
  PermissionsEnableNotifications: boolean;
  PermissionsManageDataIntegrations: boolean;
  PermissionsDistributeFromPersWksp: boolean;
  PermissionsViewDataCategories: boolean;
  PermissionsManageDataCategories: boolean;
  PermissionsAuthorApex: boolean;
  PermissionsManageMobile: boolean;
  PermissionsApiEnabled: boolean;
  PermissionsManageCustomReportTypes: boolean;
  PermissionsEditCaseComments: boolean;
  PermissionsTransferAnyCase: boolean;
  PermissionsContentAdministrator: boolean;
  PermissionsCreateWorkspaces: boolean;
  PermissionsManageContentPermissions: boolean;
  PermissionsManageContentProperties: boolean;
  PermissionsManageContentTypes: boolean;
  PermissionsScheduleJob: boolean;
  PermissionsManageExchangeConfig: boolean;
  PermissionsManageAnalyticSnapshots: boolean;
  PermissionsScheduleReports: boolean;
  PermissionsManageBusinessHourHolidays: boolean;
  PermissionsManageDynamicDashboards: boolean;
  PermissionsCustomSidebarOnAllPages: boolean;
  PermissionsManageInteraction: boolean;
  PermissionsViewMyTeamsDashboards: boolean;
  PermissionsModerateChatter: boolean;
  PermissionsResetPasswords: boolean;
  PermissionsFlowUFLRequired: boolean;
  PermissionsCanInsertFeedSystemFields: boolean;
  PermissionsActivitiesAccess: boolean;
  PermissionsEmailTemplateManagement: boolean;
  PermissionsEmailAdministration: boolean;
  PermissionsManageChatterMessages: boolean;
  PermissionsAllowEmailIC: boolean;
  PermissionsChatterFileLink: boolean;
  PermissionsForceTwoFactor: boolean;
  PermissionsViewEventLogFiles: boolean;
  PermissionsManageNetworks: boolean;
  PermissionsViewCaseInteraction: boolean;
  PermissionsManageAuthProviders: boolean;
  PermissionsRunFlow: boolean;
  PermissionsManageQuotas: boolean;
  PermissionsCreateCustomizeDashboards: boolean;
  PermissionsCreateDashboardFolders: boolean;
  PermissionsViewPublicDashboards: boolean;
  PermissionsManageDashbdsInPubFolders: boolean;
  PermissionsCreateCustomizeReports: boolean;
  PermissionsCreateReportFolders: boolean;
  PermissionsViewPublicReports: boolean;
  PermissionsManageReportsInPubFolders: boolean;
  PermissionsEditMyDashboards: boolean;
  PermissionsEditMyReports: boolean;
  PermissionsViewAllUsers: boolean;
  PermissionsConnectOrgToEnvironmentHub: boolean;
  PermissionsCreateCustomizeFilters: boolean;
  PermissionsContentHubUser: boolean;
  PermissionsGovernNetworks: boolean;
  PermissionsSalesConsole: boolean;
  PermissionsTwoFactorApi: boolean;
  PermissionsDeleteTopics: boolean;
  PermissionsEditTopics: boolean;
  PermissionsCreateTopics: boolean;
  PermissionsAssignTopics: boolean;
  PermissionsIdentityEnabled: boolean;
  PermissionsIdentityConnect: boolean;
  PermissionsContentWorkspaces: boolean;
  PermissionsCreateWorkBadgeDefinition: boolean;
  PermissionsCustomMobileAppsAccess: boolean;
  PermissionsViewHelpLink: boolean;
  PermissionsManageProfilesPermissionsets: boolean;
  PermissionsAssignPermissionSets: boolean;
  PermissionsManageRoles: boolean;
  PermissionsManageIpAddresses: boolean;
  PermissionsManageSharing: boolean;
  PermissionsManageInternalUsers: boolean;
  PermissionsManagePasswordPolicies: boolean;
  PermissionsManageLoginAccessPolicies: boolean;
  PermissionsManageCustomPermissions: boolean;
  PermissionsCanVerifyComment: boolean;
  PermissionsManageUnlistedGroups: boolean;
  PermissionsStdAutomaticActivityCapture: boolean;
  PermissionsInsightsAppDashboardEditor: boolean;
  PermissionsManageTwoFactor: boolean;
  PermissionsInsightsAppUser: boolean;
  PermissionsInsightsAppAdmin: boolean;
  PermissionsInsightsAppEltEditor: boolean;
  PermissionsInsightsAppUploadUser: boolean;
  PermissionsInsightsCreateApplication: boolean;
  PermissionsLightningExperienceUser: boolean;
  PermissionsConfigCustomRecs: boolean;
  PermissionsSubmitMacrosAllowed: boolean;
  PermissionsBulkMacrosAllowed: boolean;
  PermissionsManageSessionPermissionSets: boolean;
  PermissionsManageTemplatedApp: boolean;
  PermissionsUseTemplatedApp: boolean;
  PermissionsSendAnnouncementEmails: boolean;
  PermissionsChatterEditOwnPost: boolean;
  PermissionsChatterEditOwnRecordPost: boolean;
  PermissionsWaveTabularDownload: boolean;
  PermissionsManageSandboxes: boolean;
  PermissionsAutomaticActivityCapture: boolean;
  PermissionsImportCustomObjects: boolean;
  PermissionsSalesforceIQInbox: boolean;
  PermissionsDelegatedTwoFactor: boolean;
  PermissionsChatterComposeUiCodesnippet: boolean;
  PermissionsSelectFilesFromSalesforce: boolean;
  PermissionsModerateNetworkUsers: boolean;
  PermissionsMergeTopics: boolean;
  PermissionsEditIQFields: boolean;
  PermissionsSubscribeToLightningReports: boolean;
  PermissionsManagePvtRptsAndDashbds: boolean;
  PermissionsAllowLightningLogin: boolean;
  PermissionsCampaignInfluence2: boolean;
  PermissionsViewDataAssessment: boolean;
  PermissionsRemoveDirectMessageMembers: boolean;
  PermissionsCanApproveFeedPost: boolean;
  PermissionsAddDirectMessageMembers: boolean;
  PermissionsAllowViewEditConvertedLeads: boolean;
  PermissionsSocialInsightsLogoAdmin: boolean;
  PermissionsShowCompanyNameAsUserBadge: boolean;
  PermissionsAccessCMC: boolean;
  PermissionsViewHealthCheck: boolean;
  PermissionsManageHealthCheck: boolean;
  PermissionsPackaging2: boolean;
  PermissionsManageCertificates: boolean;
  PermissionsCreateReportInLightning: boolean;
  PermissionsPreventClassicExperience: boolean;
  PermissionsHideReadByList: boolean;
  PermissionsListEmailSend: boolean;
  PermissionsFeedPinning: boolean;
  PermissionsChangeDashboardColors: boolean;
  PermissionsManageRecommendationStrategies: boolean;
  PermissionsManagePropositions: boolean;
  PermissionsCloseConversations: boolean;
  PermissionsSubscribeReportRolesGrps: boolean;
  PermissionsSubscribeDashboardRolesGrps: boolean;
  PermissionsUseWebLink: boolean;
  PermissionsEditASEFields: boolean;
  PermissionsHasUnlimitedNBAExecutions: boolean;
  PermissionsViewOnlyEmbeddedAppUser: boolean;
  PermissionsSendExternalEmailAvailable: boolean;
  PermissionsViewAllActivities: boolean;
  PermissionsSubscribeReportToOtherUsers: boolean;
  PermissionsLightningConsoleAllowedForUser: boolean;
  PermissionsSubscribeReportsRunAsUser: boolean;
  PermissionsSubscribeToLightningDashboards: boolean;
  PermissionsSubscribeDashboardToOtherUsers: boolean;
  PermissionsCreateLtngTempInPub: boolean;
  PermissionsTransactionalEmailSend: boolean;
  PermissionsViewPrivateStaticResources: boolean;
  PermissionsCreateLtngTempFolder: boolean;
  PermissionsApexRestServices: boolean;
  PermissionsGiveRecognitionBadge: boolean;
  PermissionsUseMySearch: boolean;
  PermissionsLtngPromoReserved01UserPerm: boolean;
  PermissionsManageSubscriptions: boolean;
  PermissionsWaveManagePrivateAssetsUser: boolean;
  PermissionsCanEditDataPrepRecipe: boolean;
  PermissionsAddAnalyticsRemoteConnections: boolean;
  PermissionsManageSurveys: boolean;
  PermissionsUseAssistantDialog: boolean;
  PermissionsUseQuerySuggestions: boolean;
  PermissionsRecordVisibilityAPI: boolean;
  PermissionsViewRoles: boolean;
  PermissionsCanManageMaps: boolean;
  PermissionsLMOutboundMessagingUserPerm: boolean;
  PermissionsModifyDataClassification: boolean;
  PermissionsPrivacyDataAccess: boolean;
  PermissionsQueryAllFiles: boolean;
  PermissionsModifyMetadata: boolean;
  PermissionsManageCMS: boolean;
  PermissionsSandboxTestingInCommunityApp: boolean;
  PermissionsViewFlowUsageAndFlowEventData: boolean;
  PermissionsCanEditPrompts: boolean;
  PermissionsViewUserPII: boolean;
  PermissionsManageHubConnections: boolean;
  PermissionsB2BMarketingAnalyticsUser: boolean;
  PermissionsTraceXdsQueries: boolean;
  PermissionsViewAllCustomSettings: boolean;
  PermissionsViewAllForeignKeyNames: boolean;
  PermissionsAddWaveNotificationRecipients: boolean;
  PermissionsHeadlessCMSAccess: boolean;
  PermissionsLMEndMessagingSessionUserPerm: boolean;
  PermissionsConsentApiUpdate: boolean;
  PermissionsAccessContentBuilder: boolean;
  PermissionsAccountSwitcherUser: boolean;
  PermissionsManageC360AConnections: boolean;
  PermissionsManageReleaseUpdates: boolean;
  PermissionsViewAllProfiles: boolean;
  PermissionsSkipIdentityConfirmation: boolean;
  PermissionsSendCustomNotifications: boolean;
  PermissionsPackaging2Delete: boolean;
  PermissionsViewRestrictionAndScopingRules: boolean;
  PermissionsFSCComprehensiveUserAccess: boolean;
  PermissionsMicrosoftTeamsUser: boolean;
  PermissionsManageTrustMeasures: boolean;
  PermissionsViewTrustMeasures: boolean;
  PermissionsIsotopeCToCUser: boolean;
  PermissionsHasUnlimitedErbScoringRequests: boolean;
  PermissionsIsotopeAccess: boolean;
  PermissionsIsotopeLEX: boolean;
  PermissionsQuipMetricsAccess: boolean;
  PermissionsQuipUserEngagementMetrics: boolean;
  PermissionsManageExternalConnections: boolean;
  PermissionsUseSubscriptionEmails: boolean;
  PermissionsAIViewInsightObjects: boolean;
  PermissionsAICreateInsightObjects: boolean;
  PermissionsNativeWebviewScrolling: boolean;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  NamespacePrefix: string | null;
  HasActivationRequired: boolean;
  PermissionSetGroupId: string | null;
  Type: string | null;
};

type ParentReferences$PermissionSet = {
  //
  License: SObjectDefinition$Name | null;
  Profile: SObjectDefinition$Profile | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PermissionSetGroup: SObjectDefinition$PermissionSetGroup | null;
};

type ChildRelationships$PermissionSet = {
  //
  FieldPerms: SObjectDefinition$FieldPermissions;
  ObjectPerms: SObjectDefinition$ObjectPermissions;
  Assignments: SObjectDefinition$PermissionSetAssignment;
  PermissionSetGroupComponents: SObjectDefinition$PermissionSetGroupComponent;
  SessionActivations: SObjectDefinition$SessionPermSetActivation;
  SetupEntityAccessItems: SObjectDefinition$SetupEntityAccess;
};

interface SObjectDefinition$PermissionSet extends SObjectDefinition<'PermissionSet'> {
    Name: 'PermissionSet';
    Fields: Fields$PermissionSet;
    ParentReferences: ParentReferences$PermissionSet;
    ChildRelationships: ChildRelationships$PermissionSet;
  }

type Fields$PermissionSetAssignment = {
  //
  Id: string;
  PermissionSetId: string | null;
  PermissionSetGroupId: string | null;
  AssigneeId: string;
  SystemModstamp: DateString;
};

type ParentReferences$PermissionSetAssignment = {
  //
  PermissionSet: SObjectDefinition$PermissionSet | null;
  PermissionSetGroup: SObjectDefinition$PermissionSetGroup | null;
  Assignee: SObjectDefinition$User;
};

type ChildRelationships$PermissionSetAssignment = {
  //
};

interface SObjectDefinition$PermissionSetAssignment extends SObjectDefinition<'PermissionSetAssignment'> {
    Name: 'PermissionSetAssignment';
    Fields: Fields$PermissionSetAssignment;
    ParentReferences: ParentReferences$PermissionSetAssignment;
    ChildRelationships: ChildRelationships$PermissionSetAssignment;
  }

type Fields$PermissionSetGroup = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
  Status: string;
};

type ParentReferences$PermissionSetGroup = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PermissionSetGroup = {
  //
  Assignments: SObjectDefinition$PermissionSetAssignment;
  PermissionSetGroupComponents: SObjectDefinition$PermissionSetGroupComponent;
};

interface SObjectDefinition$PermissionSetGroup extends SObjectDefinition<'PermissionSetGroup'> {
    Name: 'PermissionSetGroup';
    Fields: Fields$PermissionSetGroup;
    ParentReferences: ParentReferences$PermissionSetGroup;
    ChildRelationships: ChildRelationships$PermissionSetGroup;
  }

type Fields$PermissionSetGroupComponent = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PermissionSetGroupId: string;
  PermissionSetId: string;
};

type ParentReferences$PermissionSetGroupComponent = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PermissionSetGroup: SObjectDefinition$PermissionSetGroup;
  PermissionSet: SObjectDefinition$PermissionSet;
};

type ChildRelationships$PermissionSetGroupComponent = {
  //
};

interface SObjectDefinition$PermissionSetGroupComponent extends SObjectDefinition<'PermissionSetGroupComponent'> {
    Name: 'PermissionSetGroupComponent';
    Fields: Fields$PermissionSetGroupComponent;
    ParentReferences: ParentReferences$PermissionSetGroupComponent;
    ChildRelationships: ChildRelationships$PermissionSetGroupComponent;
  }

type Fields$PermissionSetLicense = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PermissionSetLicenseKey: string;
  TotalLicenses: number;
  Status: string;
  ExpirationDate: DateString | null;
  MaximumPermissionsEmailSingle: boolean;
  MaximumPermissionsEmailMass: boolean;
  MaximumPermissionsEditTask: boolean;
  MaximumPermissionsEditEvent: boolean;
  MaximumPermissionsExportReport: boolean;
  MaximumPermissionsImportPersonal: boolean;
  MaximumPermissionsDataExport: boolean;
  MaximumPermissionsManageUsers: boolean;
  MaximumPermissionsEditPublicFilters: boolean;
  MaximumPermissionsEditPublicTemplates: boolean;
  MaximumPermissionsModifyAllData: boolean;
  MaximumPermissionsEditBillingInfo: boolean;
  MaximumPermissionsManageCases: boolean;
  MaximumPermissionsMassInlineEdit: boolean;
  MaximumPermissionsManageSolutions: boolean;
  MaximumPermissionsCustomizeApplication: boolean;
  MaximumPermissionsEditReadonlyFields: boolean;
  MaximumPermissionsRunReports: boolean;
  MaximumPermissionsViewSetup: boolean;
  MaximumPermissionsTransferAnyEntity: boolean;
  MaximumPermissionsNewReportBuilder: boolean;
  MaximumPermissionsActivateContract: boolean;
  MaximumPermissionsActivateOrder: boolean;
  MaximumPermissionsImportLeads: boolean;
  MaximumPermissionsManageLeads: boolean;
  MaximumPermissionsTransferAnyLead: boolean;
  MaximumPermissionsViewAllData: boolean;
  MaximumPermissionsEditPublicDocuments: boolean;
  MaximumPermissionsViewEncryptedData: boolean;
  MaximumPermissionsEditBrandTemplates: boolean;
  MaximumPermissionsEditHtmlTemplates: boolean;
  MaximumPermissionsChatterInternalUser: boolean;
  MaximumPermissionsDeleteActivatedContract: boolean;
  MaximumPermissionsChatterInviteExternalUsers: boolean;
  MaximumPermissionsSendSitRequests: boolean;
  MaximumPermissionsOverrideForecasts: boolean;
  MaximumPermissionsViewAllForecasts: boolean;
  MaximumPermissionsApiUserOnly: boolean;
  MaximumPermissionsManageRemoteAccess: boolean;
  MaximumPermissionsCanUseNewDashboardBuilder: boolean;
  MaximumPermissionsManageCategories: boolean;
  MaximumPermissionsConvertLeads: boolean;
  MaximumPermissionsPasswordNeverExpires: boolean;
  MaximumPermissionsUseTeamReassignWizards: boolean;
  MaximumPermissionsEditActivatedOrders: boolean;
  MaximumPermissionsInstallPackaging: boolean;
  MaximumPermissionsPublishPackaging: boolean;
  MaximumPermissionsChatterOwnGroups: boolean;
  MaximumPermissionsEditOppLineItemUnitPrice: boolean;
  MaximumPermissionsCreatePackaging: boolean;
  MaximumPermissionsBulkApiHardDelete: boolean;
  MaximumPermissionsInboundMigrationToolsUser: boolean;
  MaximumPermissionsSolutionImport: boolean;
  MaximumPermissionsManageCallCenters: boolean;
  MaximumPermissionsManageSynonyms: boolean;
  MaximumPermissionsOutboundMigrationToolsUser: boolean;
  MaximumPermissionsViewContent: boolean;
  MaximumPermissionsManageEmailClientConfig: boolean;
  MaximumPermissionsEnableNotifications: boolean;
  MaximumPermissionsManageDataIntegrations: boolean;
  MaximumPermissionsDistributeFromPersWksp: boolean;
  MaximumPermissionsViewDataCategories: boolean;
  MaximumPermissionsManageDataCategories: boolean;
  MaximumPermissionsAuthorApex: boolean;
  MaximumPermissionsManageMobile: boolean;
  MaximumPermissionsApiEnabled: boolean;
  MaximumPermissionsManageCustomReportTypes: boolean;
  MaximumPermissionsEditCaseComments: boolean;
  MaximumPermissionsTransferAnyCase: boolean;
  MaximumPermissionsContentAdministrator: boolean;
  MaximumPermissionsCreateWorkspaces: boolean;
  MaximumPermissionsManageContentPermissions: boolean;
  MaximumPermissionsManageContentProperties: boolean;
  MaximumPermissionsManageContentTypes: boolean;
  MaximumPermissionsScheduleJob: boolean;
  MaximumPermissionsManageExchangeConfig: boolean;
  MaximumPermissionsManageAnalyticSnapshots: boolean;
  MaximumPermissionsScheduleReports: boolean;
  MaximumPermissionsManageBusinessHourHolidays: boolean;
  MaximumPermissionsManageDynamicDashboards: boolean;
  MaximumPermissionsCustomSidebarOnAllPages: boolean;
  MaximumPermissionsManageInteraction: boolean;
  MaximumPermissionsViewMyTeamsDashboards: boolean;
  MaximumPermissionsModerateChatter: boolean;
  MaximumPermissionsResetPasswords: boolean;
  MaximumPermissionsFlowUFLRequired: boolean;
  MaximumPermissionsCanInsertFeedSystemFields: boolean;
  MaximumPermissionsActivitiesAccess: boolean;
  MaximumPermissionsEmailTemplateManagement: boolean;
  MaximumPermissionsEmailAdministration: boolean;
  MaximumPermissionsManageChatterMessages: boolean;
  MaximumPermissionsAllowEmailIC: boolean;
  MaximumPermissionsChatterFileLink: boolean;
  MaximumPermissionsForceTwoFactor: boolean;
  MaximumPermissionsViewEventLogFiles: boolean;
  MaximumPermissionsManageNetworks: boolean;
  MaximumPermissionsViewCaseInteraction: boolean;
  MaximumPermissionsManageAuthProviders: boolean;
  MaximumPermissionsRunFlow: boolean;
  MaximumPermissionsManageQuotas: boolean;
  MaximumPermissionsCreateCustomizeDashboards: boolean;
  MaximumPermissionsCreateDashboardFolders: boolean;
  MaximumPermissionsViewPublicDashboards: boolean;
  MaximumPermissionsManageDashbdsInPubFolders: boolean;
  MaximumPermissionsCreateCustomizeReports: boolean;
  MaximumPermissionsCreateReportFolders: boolean;
  MaximumPermissionsViewPublicReports: boolean;
  MaximumPermissionsManageReportsInPubFolders: boolean;
  MaximumPermissionsEditMyDashboards: boolean;
  MaximumPermissionsEditMyReports: boolean;
  MaximumPermissionsViewAllUsers: boolean;
  MaximumPermissionsConnectOrgToEnvironmentHub: boolean;
  MaximumPermissionsCreateCustomizeFilters: boolean;
  MaximumPermissionsContentHubUser: boolean;
  MaximumPermissionsGovernNetworks: boolean;
  MaximumPermissionsSalesConsole: boolean;
  MaximumPermissionsTwoFactorApi: boolean;
  MaximumPermissionsDeleteTopics: boolean;
  MaximumPermissionsEditTopics: boolean;
  MaximumPermissionsCreateTopics: boolean;
  MaximumPermissionsAssignTopics: boolean;
  MaximumPermissionsIdentityEnabled: boolean;
  MaximumPermissionsIdentityConnect: boolean;
  MaximumPermissionsContentWorkspaces: boolean;
  MaximumPermissionsCreateWorkBadgeDefinition: boolean;
  MaximumPermissionsCustomMobileAppsAccess: boolean;
  MaximumPermissionsViewHelpLink: boolean;
  MaximumPermissionsManageProfilesPermissionsets: boolean;
  MaximumPermissionsAssignPermissionSets: boolean;
  MaximumPermissionsManageRoles: boolean;
  MaximumPermissionsManageIpAddresses: boolean;
  MaximumPermissionsManageSharing: boolean;
  MaximumPermissionsManageInternalUsers: boolean;
  MaximumPermissionsManagePasswordPolicies: boolean;
  MaximumPermissionsManageLoginAccessPolicies: boolean;
  MaximumPermissionsManageCustomPermissions: boolean;
  MaximumPermissionsCanVerifyComment: boolean;
  MaximumPermissionsManageUnlistedGroups: boolean;
  MaximumPermissionsStdAutomaticActivityCapture: boolean;
  MaximumPermissionsInsightsAppDashboardEditor: boolean;
  MaximumPermissionsManageTwoFactor: boolean;
  MaximumPermissionsInsightsAppUser: boolean;
  MaximumPermissionsInsightsAppAdmin: boolean;
  MaximumPermissionsInsightsAppEltEditor: boolean;
  MaximumPermissionsInsightsAppUploadUser: boolean;
  MaximumPermissionsInsightsCreateApplication: boolean;
  MaximumPermissionsLightningExperienceUser: boolean;
  MaximumPermissionsConfigCustomRecs: boolean;
  MaximumPermissionsSubmitMacrosAllowed: boolean;
  MaximumPermissionsBulkMacrosAllowed: boolean;
  MaximumPermissionsManageSessionPermissionSets: boolean;
  MaximumPermissionsManageTemplatedApp: boolean;
  MaximumPermissionsUseTemplatedApp: boolean;
  MaximumPermissionsSendAnnouncementEmails: boolean;
  MaximumPermissionsChatterEditOwnPost: boolean;
  MaximumPermissionsChatterEditOwnRecordPost: boolean;
  MaximumPermissionsWaveTabularDownload: boolean;
  MaximumPermissionsManageSandboxes: boolean;
  MaximumPermissionsAutomaticActivityCapture: boolean;
  MaximumPermissionsImportCustomObjects: boolean;
  MaximumPermissionsSalesforceIQInbox: boolean;
  MaximumPermissionsDelegatedTwoFactor: boolean;
  MaximumPermissionsChatterComposeUiCodesnippet: boolean;
  MaximumPermissionsSelectFilesFromSalesforce: boolean;
  MaximumPermissionsModerateNetworkUsers: boolean;
  MaximumPermissionsMergeTopics: boolean;
  MaximumPermissionsEditIQFields: boolean;
  MaximumPermissionsSubscribeToLightningReports: boolean;
  MaximumPermissionsManagePvtRptsAndDashbds: boolean;
  MaximumPermissionsAllowLightningLogin: boolean;
  MaximumPermissionsCampaignInfluence2: boolean;
  MaximumPermissionsViewDataAssessment: boolean;
  MaximumPermissionsRemoveDirectMessageMembers: boolean;
  MaximumPermissionsCanApproveFeedPost: boolean;
  MaximumPermissionsAddDirectMessageMembers: boolean;
  MaximumPermissionsAllowViewEditConvertedLeads: boolean;
  MaximumPermissionsSocialInsightsLogoAdmin: boolean;
  MaximumPermissionsShowCompanyNameAsUserBadge: boolean;
  MaximumPermissionsAccessCMC: boolean;
  MaximumPermissionsViewHealthCheck: boolean;
  MaximumPermissionsManageHealthCheck: boolean;
  MaximumPermissionsPackaging2: boolean;
  MaximumPermissionsManageCertificates: boolean;
  MaximumPermissionsCreateReportInLightning: boolean;
  MaximumPermissionsPreventClassicExperience: boolean;
  MaximumPermissionsHideReadByList: boolean;
  MaximumPermissionsListEmailSend: boolean;
  MaximumPermissionsFeedPinning: boolean;
  MaximumPermissionsChangeDashboardColors: boolean;
  MaximumPermissionsManageRecommendationStrategies: boolean;
  MaximumPermissionsManagePropositions: boolean;
  MaximumPermissionsCloseConversations: boolean;
  MaximumPermissionsSubscribeReportRolesGrps: boolean;
  MaximumPermissionsSubscribeDashboardRolesGrps: boolean;
  MaximumPermissionsUseWebLink: boolean;
  MaximumPermissionsEditASEFields: boolean;
  MaximumPermissionsHasUnlimitedNBAExecutions: boolean;
  MaximumPermissionsViewOnlyEmbeddedAppUser: boolean;
  MaximumPermissionsSendExternalEmailAvailable: boolean;
  MaximumPermissionsViewAllActivities: boolean;
  MaximumPermissionsSubscribeReportToOtherUsers: boolean;
  MaximumPermissionsLightningConsoleAllowedForUser: boolean;
  MaximumPermissionsSubscribeReportsRunAsUser: boolean;
  MaximumPermissionsSubscribeToLightningDashboards: boolean;
  MaximumPermissionsSubscribeDashboardToOtherUsers: boolean;
  MaximumPermissionsCreateLtngTempInPub: boolean;
  MaximumPermissionsTransactionalEmailSend: boolean;
  MaximumPermissionsViewPrivateStaticResources: boolean;
  MaximumPermissionsCreateLtngTempFolder: boolean;
  MaximumPermissionsApexRestServices: boolean;
  MaximumPermissionsGiveRecognitionBadge: boolean;
  MaximumPermissionsUseMySearch: boolean;
  MaximumPermissionsLtngPromoReserved01UserPerm: boolean;
  MaximumPermissionsManageSubscriptions: boolean;
  MaximumPermissionsWaveManagePrivateAssetsUser: boolean;
  MaximumPermissionsCanEditDataPrepRecipe: boolean;
  MaximumPermissionsAddAnalyticsRemoteConnections: boolean;
  MaximumPermissionsManageSurveys: boolean;
  MaximumPermissionsUseAssistantDialog: boolean;
  MaximumPermissionsUseQuerySuggestions: boolean;
  MaximumPermissionsRecordVisibilityAPI: boolean;
  MaximumPermissionsViewRoles: boolean;
  MaximumPermissionsCanManageMaps: boolean;
  MaximumPermissionsLMOutboundMessagingUserPerm: boolean;
  MaximumPermissionsModifyDataClassification: boolean;
  MaximumPermissionsPrivacyDataAccess: boolean;
  MaximumPermissionsQueryAllFiles: boolean;
  MaximumPermissionsModifyMetadata: boolean;
  MaximumPermissionsManageCMS: boolean;
  MaximumPermissionsSandboxTestingInCommunityApp: boolean;
  MaximumPermissionsViewFlowUsageAndFlowEventData: boolean;
  MaximumPermissionsCanEditPrompts: boolean;
  MaximumPermissionsViewUserPII: boolean;
  MaximumPermissionsManageHubConnections: boolean;
  MaximumPermissionsB2BMarketingAnalyticsUser: boolean;
  MaximumPermissionsTraceXdsQueries: boolean;
  MaximumPermissionsViewAllCustomSettings: boolean;
  MaximumPermissionsViewAllForeignKeyNames: boolean;
  MaximumPermissionsAddWaveNotificationRecipients: boolean;
  MaximumPermissionsHeadlessCMSAccess: boolean;
  MaximumPermissionsLMEndMessagingSessionUserPerm: boolean;
  MaximumPermissionsConsentApiUpdate: boolean;
  MaximumPermissionsAccessContentBuilder: boolean;
  MaximumPermissionsAccountSwitcherUser: boolean;
  MaximumPermissionsManageC360AConnections: boolean;
  MaximumPermissionsManageReleaseUpdates: boolean;
  MaximumPermissionsViewAllProfiles: boolean;
  MaximumPermissionsSkipIdentityConfirmation: boolean;
  MaximumPermissionsSendCustomNotifications: boolean;
  MaximumPermissionsPackaging2Delete: boolean;
  MaximumPermissionsViewRestrictionAndScopingRules: boolean;
  MaximumPermissionsFSCComprehensiveUserAccess: boolean;
  MaximumPermissionsMicrosoftTeamsUser: boolean;
  MaximumPermissionsManageTrustMeasures: boolean;
  MaximumPermissionsViewTrustMeasures: boolean;
  MaximumPermissionsIsotopeCToCUser: boolean;
  MaximumPermissionsHasUnlimitedErbScoringRequests: boolean;
  MaximumPermissionsIsotopeAccess: boolean;
  MaximumPermissionsIsotopeLEX: boolean;
  MaximumPermissionsQuipMetricsAccess: boolean;
  MaximumPermissionsQuipUserEngagementMetrics: boolean;
  MaximumPermissionsManageExternalConnections: boolean;
  MaximumPermissionsUseSubscriptionEmails: boolean;
  MaximumPermissionsAIViewInsightObjects: boolean;
  MaximumPermissionsAICreateInsightObjects: boolean;
  MaximumPermissionsNativeWebviewScrolling: boolean;
  UsedLicenses: number;
};

type ParentReferences$PermissionSetLicense = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PermissionSetLicense = {
  //
  GrantedByLicenses: SObjectDefinition$GrantedByLicense;
  PermissionSetLicenseAssignments: SObjectDefinition$PermissionSetLicenseAssign;
};

interface SObjectDefinition$PermissionSetLicense extends SObjectDefinition<'PermissionSetLicense'> {
    Name: 'PermissionSetLicense';
    Fields: Fields$PermissionSetLicense;
    ParentReferences: ParentReferences$PermissionSetLicense;
    ChildRelationships: ChildRelationships$PermissionSetLicense;
  }

type Fields$PermissionSetLicenseAssign = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PermissionSetLicenseId: string;
  AssigneeId: string;
};

type ParentReferences$PermissionSetLicenseAssign = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PermissionSetLicense: SObjectDefinition$PermissionSetLicense;
  Assignee: SObjectDefinition$User;
};

type ChildRelationships$PermissionSetLicenseAssign = {
  //
};

interface SObjectDefinition$PermissionSetLicenseAssign extends SObjectDefinition<'PermissionSetLicenseAssign'> {
    Name: 'PermissionSetLicenseAssign';
    Fields: Fields$PermissionSetLicenseAssign;
    ParentReferences: ParentReferences$PermissionSetLicenseAssign;
    ChildRelationships: ChildRelationships$PermissionSetLicenseAssign;
  }

type Fields$PermissionSetTabSetting = {
  //
  Id: string;
  ParentId: string;
  Visibility: string;
  Name: string;
  SystemModstamp: DateString;
};

type ParentReferences$PermissionSetTabSetting = {
  //
  Parent: SObjectDefinition$PermissionSet;
};

type ChildRelationships$PermissionSetTabSetting = {
  //
};

interface SObjectDefinition$PermissionSetTabSetting extends SObjectDefinition<'PermissionSetTabSetting'> {
    Name: 'PermissionSetTabSetting';
    Fields: Fields$PermissionSetTabSetting;
    ParentReferences: ParentReferences$PermissionSetTabSetting;
    ChildRelationships: ChildRelationships$PermissionSetTabSetting;
  }

type Fields$PicklistValueInfo = {
  //
  Id: string;
  DurableId: string | null;
  Value: string | null;
  Label: string | null;
  IsDefaultValue: boolean;
  IsActive: boolean;
  ValidFor: string | null;
  EntityParticleId: string | null;
};

type ParentReferences$PicklistValueInfo = {
  //
};

type ChildRelationships$PicklistValueInfo = {
  //
};

interface SObjectDefinition$PicklistValueInfo extends SObjectDefinition<'PicklistValueInfo'> {
    Name: 'PicklistValueInfo';
    Fields: Fields$PicklistValueInfo;
    ParentReferences: ParentReferences$PicklistValueInfo;
    ChildRelationships: ChildRelationships$PicklistValueInfo;
  }

type Fields$PlatformAction = {
  //
  Id: string;
  ExternalId: string | null;
  LastModifiedDate: DateString | null;
  Label: string;
  Type: string;
  Subtype: string | null;
  ApiName: string | null;
  ActionTarget: string | null;
  ActionTargetType: string | null;
  ConfirmationMessage: string | null;
  GroupId: string | null;
  IsGroupDefault: boolean;
  Category: string | null;
  InvocationStatus: string | null;
  InvokedByUserId: string | null;
  SourceEntity: string;
  ActionListContext: string | null;
  DeviceFormat: string | null;
  RetrievalMode: string | null;
  IconContentType: string | null;
  IconHeight: number | null;
  IconWidth: number | null;
  IconUrl: string | null;
  IsMassAction: boolean;
  PrimaryColor: string | null;
  RelatedSourceEntity: string | null;
  Section: string | null;
  RelatedListRecordId: string | null;
  TargetUrl: string | null;
  TargetObject: string | null;
  OpenType: string | null;
};

type ParentReferences$PlatformAction = {
  //
  InvokedByUser: SObjectDefinition$User | null;
};

type ChildRelationships$PlatformAction = {
  //
};

interface SObjectDefinition$PlatformAction extends SObjectDefinition<'PlatformAction'> {
    Name: 'PlatformAction';
    Fields: Fields$PlatformAction;
    ParentReferences: ParentReferences$PlatformAction;
    ChildRelationships: ChildRelationships$PlatformAction;
  }

type Fields$PlatformCachePartition = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
  IsDefaultPartition: boolean;
};

type ParentReferences$PlatformCachePartition = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PlatformCachePartition = {
  //
  PlatforCachePartitionTypes: SObjectDefinition$PlatformCachePartitionType;
};

interface SObjectDefinition$PlatformCachePartition extends SObjectDefinition<'PlatformCachePartition'> {
    Name: 'PlatformCachePartition';
    Fields: Fields$PlatformCachePartition;
    ParentReferences: ParentReferences$PlatformCachePartition;
    ChildRelationships: ChildRelationships$PlatformCachePartition;
  }

type Fields$PlatformCachePartitionType = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PlatformCachePartitionId: string;
  CacheType: string;
  AllocatedCapacity: number | null;
  AllocatedPurchasedCapacity: number | null;
  AllocatedTrialCapacity: number | null;
  AllocatedPartnerCapacity: number | null;
};

type ParentReferences$PlatformCachePartitionType = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PlatformCachePartition: SObjectDefinition$PlatformCachePartition;
};

type ChildRelationships$PlatformCachePartitionType = {
  //
};

interface SObjectDefinition$PlatformCachePartitionType extends SObjectDefinition<'PlatformCachePartitionType'> {
    Name: 'PlatformCachePartitionType';
    Fields: Fields$PlatformCachePartitionType;
    ParentReferences: ParentReferences$PlatformCachePartitionType;
    ChildRelationships: ChildRelationships$PlatformCachePartitionType;
  }

type Fields$PlatformEventUsageMetric = {
  //
  Id: string;
  ExternalId: string | null;
  Name: string;
  StartDate: DateString | null;
  EndDate: DateString | null;
  Value: string | null;
};

type ParentReferences$PlatformEventUsageMetric = {
  //
};

type ChildRelationships$PlatformEventUsageMetric = {
  //
};

interface SObjectDefinition$PlatformEventUsageMetric extends SObjectDefinition<'PlatformEventUsageMetric'> {
    Name: 'PlatformEventUsageMetric';
    Fields: Fields$PlatformEventUsageMetric;
    ParentReferences: ParentReferences$PlatformEventUsageMetric;
    ChildRelationships: ChildRelationships$PlatformEventUsageMetric;
  }

type Fields$PlatformStatusAlertEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  EventIdentifier: string | null;
  UserId: string | null;
  Username: string | null;
  EventDate: DateString | null;
  RelatedEventIdentifier: string | null;
  RequestId: string | null;
  ServiceName: string | null;
  ServiceJobId: string | null;
  StatusType: string | null;
  ComponentName: string | null;
  SubComponentName: string | null;
  Subject: string | null;
  ApiErrorCode: string | null;
  ExtendedErrorCode: string | null;
};

type ParentReferences$PlatformStatusAlertEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$PlatformStatusAlertEvent = {
  //
};

interface SObjectDefinition$PlatformStatusAlertEvent extends SObjectDefinition<'PlatformStatusAlertEvent'> {
    Name: 'PlatformStatusAlertEvent';
    Fields: Fields$PlatformStatusAlertEvent;
    ParentReferences: ParentReferences$PlatformStatusAlertEvent;
    ChildRelationships: ChildRelationships$PlatformStatusAlertEvent;
  }

type Fields$Portal_User__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Auth_Provider__c: string | null;
  Email__c: string | null;
  External_ID__c: string | null;
  Interview_Requested__c: string | null;
  Last_Login_Date__c: DateString | null;
  Name__c: string | null;
  Starred__c: string | null;
  Password__c: string | null;
  Is_Reset_Password_Required__c: boolean;
  Status__c: string | null;
  Is_Blocked__c: boolean;
  Password_Reset_Token__c: string | null;
  Status_Declined_Reason__c: string | null;
  Contact__c: string | null;
  Contact_Not_Required__c: boolean;
};

type ParentReferences$Portal_User__ChangeEvent = {
  //
};

type ChildRelationships$Portal_User__ChangeEvent = {
  //
};

interface SObjectDefinition$Portal_User__ChangeEvent extends SObjectDefinition<'Portal_User__ChangeEvent'> {
    Name: 'Portal_User__ChangeEvent';
    Fields: Fields$Portal_User__ChangeEvent;
    ParentReferences: ParentReferences$Portal_User__ChangeEvent;
    ChildRelationships: ChildRelationships$Portal_User__ChangeEvent;
  }

type Fields$Portal_User__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Auth_Provider__c: string | null;
  Email__c: string;
  External_ID__c: string | null;
  Interview_Requested__c: string | null;
  Last_Login_Date__c: DateString | null;
  Name__c: string | null;
  Starred__c: string | null;
  Password__c: string | null;
  Is_Reset_Password_Required__c: boolean;
  Status__c: string | null;
  Is_Blocked__c: boolean;
  Password_Reset_Token__c: string | null;
  Status_Declined_Reason__c: string | null;
  Contact__c: string | null;
  Contact_Not_Required__c: boolean;
};

type ParentReferences$Portal_User__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Portal_User__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Portal_User__c extends SObjectDefinition<'Portal_User__c'> {
    Name: 'Portal_User__c';
    Fields: Fields$Portal_User__c;
    ParentReferences: ParentReferences$Portal_User__c;
    ChildRelationships: ChildRelationships$Portal_User__c;
  }

type Fields$Pricebook2 = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsActive: boolean;
  IsArchived: boolean;
  Description: string | null;
  IsStandard: boolean;
};

type ParentReferences$Pricebook2 = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Pricebook2 = {
  //
  Contracts: SObjectDefinition$Contract;
  Opportunities: SObjectDefinition$Opportunity;
  Orders: SObjectDefinition$Order;
  Histories: SObjectDefinition$Pricebook2History;
  PricebookEntries: SObjectDefinition$PricebookEntry;
  Quotes: SObjectDefinition$Quote;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$Pricebook2 extends SObjectDefinition<'Pricebook2'> {
    Name: 'Pricebook2';
    Fields: Fields$Pricebook2;
    ParentReferences: ParentReferences$Pricebook2;
    ChildRelationships: ChildRelationships$Pricebook2;
  }

type Fields$Pricebook2ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  IsActive: boolean;
  IsArchived: boolean;
  Description: string | null;
  IsStandard: boolean;
};

type ParentReferences$Pricebook2ChangeEvent = {
  //
};

type ChildRelationships$Pricebook2ChangeEvent = {
  //
};

interface SObjectDefinition$Pricebook2ChangeEvent extends SObjectDefinition<'Pricebook2ChangeEvent'> {
    Name: 'Pricebook2ChangeEvent';
    Fields: Fields$Pricebook2ChangeEvent;
    ParentReferences: ParentReferences$Pricebook2ChangeEvent;
    ChildRelationships: ChildRelationships$Pricebook2ChangeEvent;
  }

type Fields$Pricebook2History = {
  //
  Id: string;
  IsDeleted: boolean;
  Pricebook2Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Pricebook2History = {
  //
  Pricebook2: SObjectDefinition$Pricebook2;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Pricebook2History = {
  //
};

interface SObjectDefinition$Pricebook2History extends SObjectDefinition<'Pricebook2History'> {
    Name: 'Pricebook2History';
    Fields: Fields$Pricebook2History;
    ParentReferences: ParentReferences$Pricebook2History;
    ChildRelationships: ChildRelationships$Pricebook2History;
  }

type Fields$PricebookEntry = {
  //
  Id: string;
  Name: string | null;
  Pricebook2Id: string;
  Product2Id: string;
  UnitPrice: number;
  IsActive: boolean;
  UseStandardPrice: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProductCode: string | null;
  IsDeleted: boolean;
  IsArchived: boolean;
};

type ParentReferences$PricebookEntry = {
  //
  Pricebook2: SObjectDefinition$Pricebook2;
  Product2: SObjectDefinition$Product2;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PricebookEntry = {
  //
  OpportunityLineItems: SObjectDefinition$OpportunityLineItem;
  OrderItems: SObjectDefinition$OrderItem;
  Histories: SObjectDefinition$PricebookEntryHistory;
  QuoteLineItems: SObjectDefinition$QuoteLineItem;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$PricebookEntry extends SObjectDefinition<'PricebookEntry'> {
    Name: 'PricebookEntry';
    Fields: Fields$PricebookEntry;
    ParentReferences: ParentReferences$PricebookEntry;
    ChildRelationships: ChildRelationships$PricebookEntry;
  }

type Fields$PricebookEntryHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  PricebookEntryId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$PricebookEntryHistory = {
  //
  PricebookEntry: SObjectDefinition$PricebookEntry;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$PricebookEntryHistory = {
  //
};

interface SObjectDefinition$PricebookEntryHistory extends SObjectDefinition<'PricebookEntryHistory'> {
    Name: 'PricebookEntryHistory';
    Fields: Fields$PricebookEntryHistory;
    ParentReferences: ParentReferences$PricebookEntryHistory;
    ChildRelationships: ChildRelationships$PricebookEntryHistory;
  }

type Fields$ProcessDefinition = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  Type: string;
  Description: string | null;
  TableEnumOrId: string;
  LockType: string;
  State: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessDefinition = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessDefinition = {
  //
};

interface SObjectDefinition$ProcessDefinition extends SObjectDefinition<'ProcessDefinition'> {
    Name: 'ProcessDefinition';
    Fields: Fields$ProcessDefinition;
    ParentReferences: ParentReferences$ProcessDefinition;
    ChildRelationships: ChildRelationships$ProcessDefinition;
  }

type Fields$ProcessException = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  ProcessExceptionNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  AttachedToId: string;
  Message: string;
  StatusCategory: string;
  Status: string;
  Category: string | null;
  Severity: string | null;
  Priority: string | null;
  CaseId: string | null;
  ExternalReference: string | null;
  SeverityCategory: string | null;
  Description: string | null;
};

type ParentReferences$ProcessException = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AttachedTo: SObjectDefinition$Name;
  Case: SObjectDefinition$Case | null;
};

type ChildRelationships$ProcessException = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Emails: SObjectDefinition$EmailMessage;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  Shares: SObjectDefinition$ProcessExceptionShare;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$ProcessException extends SObjectDefinition<'ProcessException'> {
    Name: 'ProcessException';
    Fields: Fields$ProcessException;
    ParentReferences: ParentReferences$ProcessException;
    ChildRelationships: ChildRelationships$ProcessException;
  }

type Fields$ProcessExceptionEvent = {
  //
  ReplayId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  AttachedToId: string;
  Message: string;
  Description: string | null;
  ExceptionType: string;
  Severity: string | null;
  BackgroundOperationId: string | null;
  ExternalReference: string | null;
};

type ParentReferences$ProcessExceptionEvent = {
  //
  CreatedBy: SObjectDefinition$User;
  AttachedTo: SObjectDefinition$Name;
  BackgroundOperation: SObjectDefinition$BackgroundOperation | null;
};

type ChildRelationships$ProcessExceptionEvent = {
  //
};

interface SObjectDefinition$ProcessExceptionEvent extends SObjectDefinition<'ProcessExceptionEvent'> {
    Name: 'ProcessExceptionEvent';
    Fields: Fields$ProcessExceptionEvent;
    ParentReferences: ParentReferences$ProcessExceptionEvent;
    ChildRelationships: ChildRelationships$ProcessExceptionEvent;
  }

type Fields$ProcessExceptionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ProcessExceptionShare = {
  //
  Parent: SObjectDefinition$ProcessException;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessExceptionShare = {
  //
};

interface SObjectDefinition$ProcessExceptionShare extends SObjectDefinition<'ProcessExceptionShare'> {
    Name: 'ProcessExceptionShare';
    Fields: Fields$ProcessExceptionShare;
    ParentReferences: ParentReferences$ProcessExceptionShare;
    ChildRelationships: ChildRelationships$ProcessExceptionShare;
  }

type Fields$ProcessInstance = {
  //
  Id: string;
  ProcessDefinitionId: string;
  TargetObjectId: string;
  Status: string;
  CompletedDate: DateString | null;
  LastActorId: string | null;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
  SubmittedById: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessInstance = {
  //
  ProcessDefinition: SObjectDefinition$ProcessDefinition;
  TargetObject: SObjectDefinition$Name;
  LastActor: SObjectDefinition$User | null;
  SubmittedBy: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessInstance = {
  //
  StepsAndWorkitems: SObjectDefinition$ProcessInstanceHistory;
  Nodes: SObjectDefinition$ProcessInstanceNode;
  Steps: SObjectDefinition$ProcessInstanceStep;
  Workitems: SObjectDefinition$ProcessInstanceWorkitem;
};

interface SObjectDefinition$ProcessInstance extends SObjectDefinition<'ProcessInstance'> {
    Name: 'ProcessInstance';
    Fields: Fields$ProcessInstance;
    ParentReferences: ParentReferences$ProcessInstance;
    ChildRelationships: ChildRelationships$ProcessInstance;
  }

type Fields$ProcessInstanceHistory = {
  //
  Id: string;
  IsPending: boolean;
  ProcessInstanceId: string;
  TargetObjectId: string | null;
  StepStatus: string | null;
  ProcessNodeId: string | null;
  OriginalActorId: string;
  ActorId: string;
  RemindersSent: number | null;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
  Comments: string | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessInstanceHistory = {
  //
  ProcessInstance: SObjectDefinition$ProcessInstance;
  TargetObject: SObjectDefinition$Name | null;
  ProcessNode: SObjectDefinition$ProcessNode | null;
  OriginalActor: SObjectDefinition$Name;
  Actor: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessInstanceHistory = {
  //
};

interface SObjectDefinition$ProcessInstanceHistory extends SObjectDefinition<'ProcessInstanceHistory'> {
    Name: 'ProcessInstanceHistory';
    Fields: Fields$ProcessInstanceHistory;
    ParentReferences: ParentReferences$ProcessInstanceHistory;
    ChildRelationships: ChildRelationships$ProcessInstanceHistory;
  }

type Fields$ProcessInstanceNode = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProcessInstanceId: string;
  ProcessNodeId: string;
  NodeStatus: string | null;
  CompletedDate: DateString | null;
  LastActorId: string | null;
  ProcessNodeName: string | null;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
};

type ParentReferences$ProcessInstanceNode = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ProcessInstance: SObjectDefinition$ProcessInstance;
  ProcessNode: SObjectDefinition$ProcessNode;
  LastActor: SObjectDefinition$User | null;
};

type ChildRelationships$ProcessInstanceNode = {
  //
};

interface SObjectDefinition$ProcessInstanceNode extends SObjectDefinition<'ProcessInstanceNode'> {
    Name: 'ProcessInstanceNode';
    Fields: Fields$ProcessInstanceNode;
    ParentReferences: ParentReferences$ProcessInstanceNode;
    ChildRelationships: ChildRelationships$ProcessInstanceNode;
  }

type Fields$ProcessInstanceStep = {
  //
  Id: string;
  ProcessInstanceId: string;
  StepStatus: string | null;
  OriginalActorId: string;
  ActorId: string;
  Comments: string | null;
  StepNodeId: string | null;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessInstanceStep = {
  //
  ProcessInstance: SObjectDefinition$ProcessInstance;
  OriginalActor: SObjectDefinition$Name;
  Actor: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessInstanceStep = {
  //
};

interface SObjectDefinition$ProcessInstanceStep extends SObjectDefinition<'ProcessInstanceStep'> {
    Name: 'ProcessInstanceStep';
    Fields: Fields$ProcessInstanceStep;
    ParentReferences: ParentReferences$ProcessInstanceStep;
    ChildRelationships: ChildRelationships$ProcessInstanceStep;
  }

type Fields$ProcessInstanceWorkitem = {
  //
  Id: string;
  ProcessInstanceId: string;
  OriginalActorId: string;
  ActorId: string;
  ElapsedTimeInDays: number | null;
  ElapsedTimeInHours: number | null;
  ElapsedTimeInMinutes: number | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessInstanceWorkitem = {
  //
  ProcessInstance: SObjectDefinition$ProcessInstance;
  OriginalActor: SObjectDefinition$Name;
  Actor: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProcessInstanceWorkitem = {
  //
};

interface SObjectDefinition$ProcessInstanceWorkitem extends SObjectDefinition<'ProcessInstanceWorkitem'> {
    Name: 'ProcessInstanceWorkitem';
    Fields: Fields$ProcessInstanceWorkitem;
    ParentReferences: ParentReferences$ProcessInstanceWorkitem;
    ChildRelationships: ChildRelationships$ProcessInstanceWorkitem;
  }

type Fields$ProcessNode = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  ProcessDefinitionId: string;
  Description: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$ProcessNode = {
  //
  ProcessDefinition: SObjectDefinition$ProcessDefinition;
};

type ChildRelationships$ProcessNode = {
  //
};

interface SObjectDefinition$ProcessNode extends SObjectDefinition<'ProcessNode'> {
    Name: 'ProcessNode';
    Fields: Fields$ProcessNode;
    ParentReferences: ParentReferences$ProcessNode;
    ChildRelationships: ChildRelationships$ProcessNode;
  }

type Fields$Product2 = {
  //
  Id: string;
  Name: string;
  ProductCode: string | null;
  Description: string | null;
  IsActive: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Family: string | null;
  ExternalDataSourceId: string | null;
  ExternalId: string | null;
  DisplayUrl: string | null;
  QuantityUnitOfMeasure: string | null;
  IsDeleted: boolean;
  IsArchived: boolean;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  StockKeepingUnit: string | null;
};

type ParentReferences$Product2 = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Product2 = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Assets: SObjectDefinition$Asset;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  PricebookEntries: SObjectDefinition$PricebookEntry;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$Product2Feed;
  Histories: SObjectDefinition$Product2History;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$Product2 extends SObjectDefinition<'Product2'> {
    Name: 'Product2';
    Fields: Fields$Product2;
    ParentReferences: ParentReferences$Product2;
    ChildRelationships: ChildRelationships$Product2;
  }

type Fields$Product2ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  ProductCode: string | null;
  Description: string | null;
  IsActive: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Family: string | null;
  ExternalDataSourceId: string | null;
  ExternalId: string | null;
  DisplayUrl: string | null;
  QuantityUnitOfMeasure: string | null;
  IsArchived: boolean;
  StockKeepingUnit: string | null;
};

type ParentReferences$Product2ChangeEvent = {
  //
};

type ChildRelationships$Product2ChangeEvent = {
  //
};

interface SObjectDefinition$Product2ChangeEvent extends SObjectDefinition<'Product2ChangeEvent'> {
    Name: 'Product2ChangeEvent';
    Fields: Fields$Product2ChangeEvent;
    ParentReferences: ParentReferences$Product2ChangeEvent;
    ChildRelationships: ChildRelationships$Product2ChangeEvent;
  }

type Fields$Product2Feed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$Product2Feed = {
  //
  Parent: SObjectDefinition$Product2;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$Product2Feed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$Product2Feed extends SObjectDefinition<'Product2Feed'> {
    Name: 'Product2Feed';
    Fields: Fields$Product2Feed;
    ParentReferences: ParentReferences$Product2Feed;
    ChildRelationships: ChildRelationships$Product2Feed;
  }

type Fields$Product2History = {
  //
  Id: string;
  IsDeleted: boolean;
  Product2Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Product2History = {
  //
  Product2: SObjectDefinition$Product2;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Product2History = {
  //
};

interface SObjectDefinition$Product2History extends SObjectDefinition<'Product2History'> {
    Name: 'Product2History';
    Fields: Fields$Product2History;
    ParentReferences: ParentReferences$Product2History;
    ChildRelationships: ChildRelationships$Product2History;
  }

type Fields$Profile = {
  //
  Id: string;
  Name: string;
  PermissionsEmailSingle: boolean;
  PermissionsEmailMass: boolean;
  PermissionsEditTask: boolean;
  PermissionsEditEvent: boolean;
  PermissionsExportReport: boolean;
  PermissionsImportPersonal: boolean;
  PermissionsDataExport: boolean;
  PermissionsManageUsers: boolean;
  PermissionsEditPublicFilters: boolean;
  PermissionsEditPublicTemplates: boolean;
  PermissionsModifyAllData: boolean;
  PermissionsEditBillingInfo: boolean;
  PermissionsManageCases: boolean;
  PermissionsMassInlineEdit: boolean;
  PermissionsManageSolutions: boolean;
  PermissionsCustomizeApplication: boolean;
  PermissionsEditReadonlyFields: boolean;
  PermissionsRunReports: boolean;
  PermissionsViewSetup: boolean;
  PermissionsTransferAnyEntity: boolean;
  PermissionsNewReportBuilder: boolean;
  PermissionsActivateContract: boolean;
  PermissionsActivateOrder: boolean;
  PermissionsImportLeads: boolean;
  PermissionsManageLeads: boolean;
  PermissionsTransferAnyLead: boolean;
  PermissionsViewAllData: boolean;
  PermissionsEditPublicDocuments: boolean;
  PermissionsViewEncryptedData: boolean;
  PermissionsEditBrandTemplates: boolean;
  PermissionsEditHtmlTemplates: boolean;
  PermissionsChatterInternalUser: boolean;
  PermissionsDeleteActivatedContract: boolean;
  PermissionsChatterInviteExternalUsers: boolean;
  PermissionsSendSitRequests: boolean;
  PermissionsOverrideForecasts: boolean;
  PermissionsViewAllForecasts: boolean;
  PermissionsApiUserOnly: boolean;
  PermissionsManageRemoteAccess: boolean;
  PermissionsCanUseNewDashboardBuilder: boolean;
  PermissionsManageCategories: boolean;
  PermissionsConvertLeads: boolean;
  PermissionsPasswordNeverExpires: boolean;
  PermissionsUseTeamReassignWizards: boolean;
  PermissionsEditActivatedOrders: boolean;
  PermissionsInstallMultiforce: boolean;
  PermissionsPublishMultiforce: boolean;
  PermissionsChatterOwnGroups: boolean;
  PermissionsEditOppLineItemUnitPrice: boolean;
  PermissionsCreateMultiforce: boolean;
  PermissionsBulkApiHardDelete: boolean;
  PermissionsInboundMigrationToolsUser: boolean;
  PermissionsSolutionImport: boolean;
  PermissionsManageCallCenters: boolean;
  PermissionsManageSynonyms: boolean;
  PermissionsOutboundMigrationToolsUser: boolean;
  PermissionsViewContent: boolean;
  PermissionsManageEmailClientConfig: boolean;
  PermissionsEnableNotifications: boolean;
  PermissionsManageDataIntegrations: boolean;
  PermissionsDistributeFromPersWksp: boolean;
  PermissionsViewDataCategories: boolean;
  PermissionsManageDataCategories: boolean;
  PermissionsAuthorApex: boolean;
  PermissionsManageMobile: boolean;
  PermissionsApiEnabled: boolean;
  PermissionsManageCustomReportTypes: boolean;
  PermissionsEditCaseComments: boolean;
  PermissionsTransferAnyCase: boolean;
  PermissionsContentAdministrator: boolean;
  PermissionsCreateWorkspaces: boolean;
  PermissionsManageContentPermissions: boolean;
  PermissionsManageContentProperties: boolean;
  PermissionsManageContentTypes: boolean;
  PermissionsScheduleJob: boolean;
  PermissionsManageExchangeConfig: boolean;
  PermissionsManageAnalyticSnapshots: boolean;
  PermissionsScheduleReports: boolean;
  PermissionsManageBusinessHourHolidays: boolean;
  PermissionsManageDynamicDashboards: boolean;
  PermissionsCustomSidebarOnAllPages: boolean;
  PermissionsManageInteraction: boolean;
  PermissionsViewMyTeamsDashboards: boolean;
  PermissionsModerateChatter: boolean;
  PermissionsResetPasswords: boolean;
  PermissionsFlowUFLRequired: boolean;
  PermissionsCanInsertFeedSystemFields: boolean;
  PermissionsActivitiesAccess: boolean;
  PermissionsEmailTemplateManagement: boolean;
  PermissionsEmailAdministration: boolean;
  PermissionsManageChatterMessages: boolean;
  PermissionsAllowEmailIC: boolean;
  PermissionsChatterFileLink: boolean;
  PermissionsForceTwoFactor: boolean;
  PermissionsViewEventLogFiles: boolean;
  PermissionsManageNetworks: boolean;
  PermissionsViewCaseInteraction: boolean;
  PermissionsManageAuthProviders: boolean;
  PermissionsRunFlow: boolean;
  PermissionsManageQuotas: boolean;
  PermissionsCreateCustomizeDashboards: boolean;
  PermissionsCreateDashboardFolders: boolean;
  PermissionsViewPublicDashboards: boolean;
  PermissionsManageDashbdsInPubFolders: boolean;
  PermissionsCreateCustomizeReports: boolean;
  PermissionsCreateReportFolders: boolean;
  PermissionsViewPublicReports: boolean;
  PermissionsManageReportsInPubFolders: boolean;
  PermissionsEditMyDashboards: boolean;
  PermissionsEditMyReports: boolean;
  PermissionsViewAllUsers: boolean;
  PermissionsConnectOrgToEnvironmentHub: boolean;
  PermissionsCreateCustomizeFilters: boolean;
  PermissionsContentHubUser: boolean;
  PermissionsGovernNetworks: boolean;
  PermissionsSalesConsole: boolean;
  PermissionsTwoFactorApi: boolean;
  PermissionsDeleteTopics: boolean;
  PermissionsEditTopics: boolean;
  PermissionsCreateTopics: boolean;
  PermissionsAssignTopics: boolean;
  PermissionsIdentityEnabled: boolean;
  PermissionsIdentityConnect: boolean;
  PermissionsContentWorkspaces: boolean;
  PermissionsCreateWorkBadgeDefinition: boolean;
  PermissionsCustomMobileAppsAccess: boolean;
  PermissionsViewHelpLink: boolean;
  PermissionsManageProfilesPermissionsets: boolean;
  PermissionsAssignPermissionSets: boolean;
  PermissionsManageRoles: boolean;
  PermissionsManageIpAddresses: boolean;
  PermissionsManageSharing: boolean;
  PermissionsManageInternalUsers: boolean;
  PermissionsManagePasswordPolicies: boolean;
  PermissionsManageLoginAccessPolicies: boolean;
  PermissionsManageCustomPermissions: boolean;
  PermissionsCanVerifyComment: boolean;
  PermissionsManageUnlistedGroups: boolean;
  PermissionsStdAutomaticActivityCapture: boolean;
  PermissionsInsightsAppDashboardEditor: boolean;
  PermissionsManageTwoFactor: boolean;
  PermissionsInsightsAppUser: boolean;
  PermissionsInsightsAppAdmin: boolean;
  PermissionsInsightsAppEltEditor: boolean;
  PermissionsInsightsAppUploadUser: boolean;
  PermissionsInsightsCreateApplication: boolean;
  PermissionsLightningExperienceUser: boolean;
  PermissionsConfigCustomRecs: boolean;
  PermissionsSubmitMacrosAllowed: boolean;
  PermissionsBulkMacrosAllowed: boolean;
  PermissionsManageSessionPermissionSets: boolean;
  PermissionsManageTemplatedApp: boolean;
  PermissionsUseTemplatedApp: boolean;
  PermissionsSendAnnouncementEmails: boolean;
  PermissionsChatterEditOwnPost: boolean;
  PermissionsChatterEditOwnRecordPost: boolean;
  PermissionsWaveTabularDownload: boolean;
  PermissionsManageSandboxes: boolean;
  PermissionsAutomaticActivityCapture: boolean;
  PermissionsImportCustomObjects: boolean;
  PermissionsSalesforceIQInbox: boolean;
  PermissionsDelegatedTwoFactor: boolean;
  PermissionsChatterComposeUiCodesnippet: boolean;
  PermissionsSelectFilesFromSalesforce: boolean;
  PermissionsModerateNetworkUsers: boolean;
  PermissionsMergeTopics: boolean;
  PermissionsEditIQFields: boolean;
  PermissionsSubscribeToLightningReports: boolean;
  PermissionsManagePvtRptsAndDashbds: boolean;
  PermissionsAllowLightningLogin: boolean;
  PermissionsCampaignInfluence2: boolean;
  PermissionsViewDataAssessment: boolean;
  PermissionsRemoveDirectMessageMembers: boolean;
  PermissionsCanApproveFeedPost: boolean;
  PermissionsAddDirectMessageMembers: boolean;
  PermissionsAllowViewEditConvertedLeads: boolean;
  PermissionsSocialInsightsLogoAdmin: boolean;
  PermissionsShowCompanyNameAsUserBadge: boolean;
  PermissionsAccessCMC: boolean;
  PermissionsViewHealthCheck: boolean;
  PermissionsManageHealthCheck: boolean;
  PermissionsPackaging2: boolean;
  PermissionsManageCertificates: boolean;
  PermissionsCreateReportInLightning: boolean;
  PermissionsPreventClassicExperience: boolean;
  PermissionsHideReadByList: boolean;
  PermissionsListEmailSend: boolean;
  PermissionsFeedPinning: boolean;
  PermissionsChangeDashboardColors: boolean;
  PermissionsManageRecommendationStrategies: boolean;
  PermissionsManagePropositions: boolean;
  PermissionsCloseConversations: boolean;
  PermissionsSubscribeReportRolesGrps: boolean;
  PermissionsSubscribeDashboardRolesGrps: boolean;
  PermissionsUseWebLink: boolean;
  PermissionsEditASEFields: boolean;
  PermissionsHasUnlimitedNBAExecutions: boolean;
  PermissionsViewOnlyEmbeddedAppUser: boolean;
  PermissionsSendExternalEmailAvailable: boolean;
  PermissionsViewAllActivities: boolean;
  PermissionsSubscribeReportToOtherUsers: boolean;
  PermissionsLightningConsoleAllowedForUser: boolean;
  PermissionsSubscribeReportsRunAsUser: boolean;
  PermissionsSubscribeToLightningDashboards: boolean;
  PermissionsSubscribeDashboardToOtherUsers: boolean;
  PermissionsCreateLtngTempInPub: boolean;
  PermissionsTransactionalEmailSend: boolean;
  PermissionsViewPrivateStaticResources: boolean;
  PermissionsCreateLtngTempFolder: boolean;
  PermissionsApexRestServices: boolean;
  PermissionsGiveRecognitionBadge: boolean;
  PermissionsUseMySearch: boolean;
  PermissionsLtngPromoReserved01UserPerm: boolean;
  PermissionsManageSubscriptions: boolean;
  PermissionsWaveManagePrivateAssetsUser: boolean;
  PermissionsCanEditDataPrepRecipe: boolean;
  PermissionsAddAnalyticsRemoteConnections: boolean;
  PermissionsManageSurveys: boolean;
  PermissionsUseAssistantDialog: boolean;
  PermissionsUseQuerySuggestions: boolean;
  PermissionsRecordVisibilityAPI: boolean;
  PermissionsViewRoles: boolean;
  PermissionsCanManageMaps: boolean;
  PermissionsLMOutboundMessagingUserPerm: boolean;
  PermissionsModifyDataClassification: boolean;
  PermissionsPrivacyDataAccess: boolean;
  PermissionsQueryAllFiles: boolean;
  PermissionsModifyMetadata: boolean;
  PermissionsManageCMS: boolean;
  PermissionsSandboxTestingInCommunityApp: boolean;
  PermissionsViewFlowUsageAndFlowEventData: boolean;
  PermissionsCanEditPrompts: boolean;
  PermissionsViewUserPII: boolean;
  PermissionsManageHubConnections: boolean;
  PermissionsB2BMarketingAnalyticsUser: boolean;
  PermissionsTraceXdsQueries: boolean;
  PermissionsViewAllCustomSettings: boolean;
  PermissionsViewAllForeignKeyNames: boolean;
  PermissionsAddWaveNotificationRecipients: boolean;
  PermissionsHeadlessCMSAccess: boolean;
  PermissionsLMEndMessagingSessionUserPerm: boolean;
  PermissionsConsentApiUpdate: boolean;
  PermissionsAccessContentBuilder: boolean;
  PermissionsAccountSwitcherUser: boolean;
  PermissionsManageC360AConnections: boolean;
  PermissionsManageReleaseUpdates: boolean;
  PermissionsViewAllProfiles: boolean;
  PermissionsSkipIdentityConfirmation: boolean;
  PermissionsSendCustomNotifications: boolean;
  PermissionsPackaging2Delete: boolean;
  PermissionsViewRestrictionAndScopingRules: boolean;
  PermissionsFSCComprehensiveUserAccess: boolean;
  PermissionsMicrosoftTeamsUser: boolean;
  PermissionsManageTrustMeasures: boolean;
  PermissionsViewTrustMeasures: boolean;
  PermissionsIsotopeCToCUser: boolean;
  PermissionsHasUnlimitedErbScoringRequests: boolean;
  PermissionsIsotopeAccess: boolean;
  PermissionsIsotopeLEX: boolean;
  PermissionsQuipMetricsAccess: boolean;
  PermissionsQuipUserEngagementMetrics: boolean;
  PermissionsManageExternalConnections: boolean;
  PermissionsUseSubscriptionEmails: boolean;
  PermissionsAIViewInsightObjects: boolean;
  PermissionsAICreateInsightObjects: boolean;
  PermissionsNativeWebviewScrolling: boolean;
  UserLicenseId: string;
  UserType: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Profile = {
  //
  UserLicense: SObjectDefinition$UserLicense;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Profile = {
  //
  Users: SObjectDefinition$User;
};

interface SObjectDefinition$Profile extends SObjectDefinition<'Profile'> {
    Name: 'Profile';
    Fields: Fields$Profile;
    ParentReferences: ParentReferences$Profile;
    ChildRelationships: ChildRelationships$Profile;
  }

type Fields$ProfileSkill = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  UserCount: number | null;
  Description: string | null;
};

type ParentReferences$ProfileSkill = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkill = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$ProfileSkillFeed;
  Histories: SObjectDefinition$ProfileSkillHistory;
  Shares: SObjectDefinition$ProfileSkillShare;
  ProfileSkillUserChildren: SObjectDefinition$ProfileSkillUser;
};

interface SObjectDefinition$ProfileSkill extends SObjectDefinition<'ProfileSkill'> {
    Name: 'ProfileSkill';
    Fields: Fields$ProfileSkill;
    ParentReferences: ParentReferences$ProfileSkill;
    ChildRelationships: ChildRelationships$ProfileSkill;
  }

type Fields$ProfileSkillEndorsement = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProfileSkillUserId: string;
  UserId: string | null;
};

type ParentReferences$ProfileSkillEndorsement = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ProfileSkillUser: SObjectDefinition$ProfileSkillUser;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$ProfileSkillEndorsement = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$ProfileSkillEndorsementFeed;
  Histories: SObjectDefinition$ProfileSkillEndorsementHistory;
};

interface SObjectDefinition$ProfileSkillEndorsement extends SObjectDefinition<'ProfileSkillEndorsement'> {
    Name: 'ProfileSkillEndorsement';
    Fields: Fields$ProfileSkillEndorsement;
    ParentReferences: ParentReferences$ProfileSkillEndorsement;
    ChildRelationships: ChildRelationships$ProfileSkillEndorsement;
  }

type Fields$ProfileSkillEndorsementFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ProfileSkillEndorsementFeed = {
  //
  Parent: SObjectDefinition$ProfileSkillEndorsement;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ProfileSkillEndorsementFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ProfileSkillEndorsementFeed extends SObjectDefinition<'ProfileSkillEndorsementFeed'> {
    Name: 'ProfileSkillEndorsementFeed';
    Fields: Fields$ProfileSkillEndorsementFeed;
    ParentReferences: ParentReferences$ProfileSkillEndorsementFeed;
    ChildRelationships: ChildRelationships$ProfileSkillEndorsementFeed;
  }

type Fields$ProfileSkillEndorsementHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ProfileSkillEndorsementId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ProfileSkillEndorsementHistory = {
  //
  ProfileSkillEndorsement: SObjectDefinition$ProfileSkillEndorsement;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkillEndorsementHistory = {
  //
};

interface SObjectDefinition$ProfileSkillEndorsementHistory extends SObjectDefinition<'ProfileSkillEndorsementHistory'> {
    Name: 'ProfileSkillEndorsementHistory';
    Fields: Fields$ProfileSkillEndorsementHistory;
    ParentReferences: ParentReferences$ProfileSkillEndorsementHistory;
    ChildRelationships: ChildRelationships$ProfileSkillEndorsementHistory;
  }

type Fields$ProfileSkillFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ProfileSkillFeed = {
  //
  Parent: SObjectDefinition$ProfileSkill;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ProfileSkillFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ProfileSkillFeed extends SObjectDefinition<'ProfileSkillFeed'> {
    Name: 'ProfileSkillFeed';
    Fields: Fields$ProfileSkillFeed;
    ParentReferences: ParentReferences$ProfileSkillFeed;
    ChildRelationships: ChildRelationships$ProfileSkillFeed;
  }

type Fields$ProfileSkillHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ProfileSkillId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ProfileSkillHistory = {
  //
  ProfileSkill: SObjectDefinition$ProfileSkill;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkillHistory = {
  //
};

interface SObjectDefinition$ProfileSkillHistory extends SObjectDefinition<'ProfileSkillHistory'> {
    Name: 'ProfileSkillHistory';
    Fields: Fields$ProfileSkillHistory;
    ParentReferences: ParentReferences$ProfileSkillHistory;
    ChildRelationships: ChildRelationships$ProfileSkillHistory;
  }

type Fields$ProfileSkillShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$ProfileSkillShare = {
  //
  Parent: SObjectDefinition$ProfileSkill;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkillShare = {
  //
};

interface SObjectDefinition$ProfileSkillShare extends SObjectDefinition<'ProfileSkillShare'> {
    Name: 'ProfileSkillShare';
    Fields: Fields$ProfileSkillShare;
    ParentReferences: ParentReferences$ProfileSkillShare;
    ChildRelationships: ChildRelationships$ProfileSkillShare;
  }

type Fields$ProfileSkillUser = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ProfileSkillId: string;
  UserId: string | null;
  EndorsementCount: number | null;
};

type ParentReferences$ProfileSkillUser = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ProfileSkill: SObjectDefinition$ProfileSkill;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$ProfileSkillUser = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  ProfileSkillUserEndorsements: SObjectDefinition$ProfileSkillEndorsement;
  Feeds: SObjectDefinition$ProfileSkillUserFeed;
  Histories: SObjectDefinition$ProfileSkillUserHistory;
};

interface SObjectDefinition$ProfileSkillUser extends SObjectDefinition<'ProfileSkillUser'> {
    Name: 'ProfileSkillUser';
    Fields: Fields$ProfileSkillUser;
    ParentReferences: ParentReferences$ProfileSkillUser;
    ChildRelationships: ChildRelationships$ProfileSkillUser;
  }

type Fields$ProfileSkillUserFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ProfileSkillUserFeed = {
  //
  Parent: SObjectDefinition$ProfileSkillUser;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ProfileSkillUserFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ProfileSkillUserFeed extends SObjectDefinition<'ProfileSkillUserFeed'> {
    Name: 'ProfileSkillUserFeed';
    Fields: Fields$ProfileSkillUserFeed;
    ParentReferences: ParentReferences$ProfileSkillUserFeed;
    ChildRelationships: ChildRelationships$ProfileSkillUserFeed;
  }

type Fields$ProfileSkillUserHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  ProfileSkillUserId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$ProfileSkillUserHistory = {
  //
  ProfileSkillUser: SObjectDefinition$ProfileSkillUser;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$ProfileSkillUserHistory = {
  //
};

interface SObjectDefinition$ProfileSkillUserHistory extends SObjectDefinition<'ProfileSkillUserHistory'> {
    Name: 'ProfileSkillUserHistory';
    Fields: Fields$ProfileSkillUserHistory;
    ParentReferences: ParentReferences$ProfileSkillUserHistory;
    ChildRelationships: ChildRelationships$ProfileSkillUserHistory;
  }

type Fields$Prompt = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Prompt = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Prompt = {
  //
};

interface SObjectDefinition$Prompt extends SObjectDefinition<'Prompt'> {
    Name: 'Prompt';
    Fields: Fields$Prompt;
    ParentReferences: ParentReferences$Prompt;
    ChildRelationships: ChildRelationships$Prompt;
  }

type Fields$PromptAction = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  PromptVersionId: string;
  UserId: string;
  TimesDisplayed: number | null;
  TimesActionTaken: number | null;
  TimesDismissed: number | null;
  LastDisplayDate: DateString | null;
  LastResult: string | null;
  LastResultDate: DateString | null;
  StepNumber: number | null;
  StepCount: number | null;
};

type ParentReferences$PromptAction = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PromptVersion: SObjectDefinition$PromptVersion;
  User: SObjectDefinition$User;
};

type ChildRelationships$PromptAction = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$PromptActionShare;
};

interface SObjectDefinition$PromptAction extends SObjectDefinition<'PromptAction'> {
    Name: 'PromptAction';
    Fields: Fields$PromptAction;
    ParentReferences: ParentReferences$PromptAction;
    ChildRelationships: ChildRelationships$PromptAction;
  }

type Fields$PromptActionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$PromptActionShare = {
  //
  Parent: SObjectDefinition$PromptAction;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PromptActionShare = {
  //
};

interface SObjectDefinition$PromptActionShare extends SObjectDefinition<'PromptActionShare'> {
    Name: 'PromptActionShare';
    Fields: Fields$PromptActionShare;
    ParentReferences: ParentReferences$PromptActionShare;
    ChildRelationships: ChildRelationships$PromptActionShare;
  }

type Fields$PromptVersion = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  MasterLabel: string;
  Description: string | null;
  DisplayType: string;
  DisplayPosition: string | null;
  TimesToDisplay: number | null;
  DelayDays: number | null;
  StartDate: DateString | null;
  EndDate: DateString | null;
  UserAccess: string | null;
  IsPublished: boolean;
  PublishedDate: DateString | null;
  PublishedByUserId: string | null;
  Header: string | null;
  DismissButtonLabel: string | null;
  ShouldDisplayActionButton: boolean;
  ActionButtonLabel: string | null;
  ActionButtonLink: string | null;
  Title: string;
  VersionNumber: number;
  TargetPageType: string | null;
  TargetPageKey1: string | null;
  TargetPageKey2: string | null;
  TargetAppNamespacePrefix: string | null;
  TargetAppDeveloperName: string | null;
  Body: string;
  ShouldIgnoreGlobalDelay: boolean;
  UserProfileAccess: string | null;
  VideoLink: string | null;
  StepNumber: number | null;
  ThemeColor: string | null;
  ThemeSaturation: string | null;
  IndexWithIsPublished: string | null;
  IndexWithoutIsPublished: string | null;
};

type ParentReferences$PromptVersion = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Prompt;
  PublishedByUser: SObjectDefinition$User | null;
};

type ChildRelationships$PromptVersion = {
  //
};

interface SObjectDefinition$PromptVersion extends SObjectDefinition<'PromptVersion'> {
    Name: 'PromptVersion';
    Fields: Fields$PromptVersion;
    ParentReferences: ParentReferences$PromptVersion;
    ChildRelationships: ChildRelationships$PromptVersion;
  }

type Fields$Publisher = {
  //
  Id: string;
  DurableId: string | null;
  Name: string | null;
  NamespacePrefix: string | null;
  IsSalesforce: boolean;
  MajorVersion: number | null;
  MinorVersion: number | null;
};

type ParentReferences$Publisher = {
  //
};

type ChildRelationships$Publisher = {
  //
  InstalledEntityDefinitions: SObjectDefinition$EntityDefinition;
  InstalledFieldDefinitions: SObjectDefinition$FieldDefinition;
};

interface SObjectDefinition$Publisher extends SObjectDefinition<'Publisher'> {
    Name: 'Publisher';
    Fields: Fields$Publisher;
    ParentReferences: ParentReferences$Publisher;
    ChildRelationships: ChildRelationships$Publisher;
  }

type Fields$Purchase_Order_Line__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Purchase_Order__c: string | null;
  Resource__c: string | null;
  Daily_Bill_Rate__c: number | null;
  Performance_Start__c: DateString | null;
  Performance_End__c: DateString | null;
  Job_Title__c: string | null;
  Bill_Rate__c: number | null;
  End_Client__c: string | null;
  Conversion_Fee__c: number | null;
  Hiring_Manager__c: string | null;
  Project_Name__c: string | null;
  Company_Name__c: string | null;
  PO_Number__c: string | null;
};

type ParentReferences$Purchase_Order_Line__ChangeEvent = {
  //
};

type ChildRelationships$Purchase_Order_Line__ChangeEvent = {
  //
};

interface SObjectDefinition$Purchase_Order_Line__ChangeEvent extends SObjectDefinition<'Purchase_Order_Line__ChangeEvent'> {
    Name: 'Purchase_Order_Line__ChangeEvent';
    Fields: Fields$Purchase_Order_Line__ChangeEvent;
    ParentReferences: ParentReferences$Purchase_Order_Line__ChangeEvent;
    ChildRelationships: ChildRelationships$Purchase_Order_Line__ChangeEvent;
  }

type Fields$Purchase_Order_Line__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Purchase_Order_Line__History = {
  //
  Parent: SObjectDefinition$Purchase_Order_Line__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Purchase_Order_Line__History = {
  //
};

interface SObjectDefinition$Purchase_Order_Line__History extends SObjectDefinition<'Purchase_Order_Line__History'> {
    Name: 'Purchase_Order_Line__History';
    Fields: Fields$Purchase_Order_Line__History;
    ParentReferences: ParentReferences$Purchase_Order_Line__History;
    ChildRelationships: ChildRelationships$Purchase_Order_Line__History;
  }

type Fields$Purchase_Order_Line__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Purchase_Order__c: string;
  Resource__c: string | null;
  Daily_Bill_Rate__c: number | null;
  Performance_Start__c: DateString | null;
  Performance_End__c: DateString | null;
  Job_Title__c: string | null;
  Bill_Rate__c: number | null;
  End_Client__c: string | null;
  Conversion_Fee__c: number | null;
  Hiring_Manager__c: string | null;
  Project_Name__c: string | null;
  Company_Name__c: string | null;
  PO_Number__c: string | null;
};

type ParentReferences$Purchase_Order_Line__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Purchase_Order__r: SObjectDefinition$Purchase_Order__c;
  Resource__r: SObjectDefinition$Contact | null;
  Hiring_Manager__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Purchase_Order_Line__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Histories: SObjectDefinition$Purchase_Order_Line__History;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Purchase_Order_Line__c extends SObjectDefinition<'Purchase_Order_Line__c'> {
    Name: 'Purchase_Order_Line__c';
    Fields: Fields$Purchase_Order_Line__c;
    ParentReferences: ParentReferences$Purchase_Order_Line__c;
    ChildRelationships: ChildRelationships$Purchase_Order_Line__c;
  }

type Fields$Purchase_Order__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  PO_Number__c: string | null;
  Company_Name__c: string | null;
  Prime_Contract_Number__c: string | null;
  Billing_Email_Address_2__c: string | null;
  Billable_Client__c: string | null;
  Buyer__c: string | null;
  Payment_Terms__c: string | null;
  Billing_Email_Address__c: string | null;
  Resources_Count__c: number | null;
  Billing_Inquiry_Email__c: string | null;
  Sub_Contract_Nmb__c: string | null;
};

type ParentReferences$Purchase_Order__ChangeEvent = {
  //
};

type ChildRelationships$Purchase_Order__ChangeEvent = {
  //
};

interface SObjectDefinition$Purchase_Order__ChangeEvent extends SObjectDefinition<'Purchase_Order__ChangeEvent'> {
    Name: 'Purchase_Order__ChangeEvent';
    Fields: Fields$Purchase_Order__ChangeEvent;
    ParentReferences: ParentReferences$Purchase_Order__ChangeEvent;
    ChildRelationships: ChildRelationships$Purchase_Order__ChangeEvent;
  }

type Fields$Purchase_Order__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Purchase_Order__History = {
  //
  Parent: SObjectDefinition$Purchase_Order__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Purchase_Order__History = {
  //
};

interface SObjectDefinition$Purchase_Order__History extends SObjectDefinition<'Purchase_Order__History'> {
    Name: 'Purchase_Order__History';
    Fields: Fields$Purchase_Order__History;
    ParentReferences: ParentReferences$Purchase_Order__History;
    ChildRelationships: ChildRelationships$Purchase_Order__History;
  }

type Fields$Purchase_Order__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  PO_Number__c: string | null;
  Company_Name__c: string | null;
  Prime_Contract_Number__c: string | null;
  Billing_Email_Address_2__c: string | null;
  Billable_Client__c: string | null;
  Buyer__c: string | null;
  Payment_Terms__c: string | null;
  Billing_Email_Address__c: string | null;
  Resources_Count__c: number | null;
  Billing_Inquiry_Email__c: string | null;
  Sub_Contract_Nmb__c: string | null;
};

type ParentReferences$Purchase_Order__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Company_Name__r: SObjectDefinition$Account | null;
  Billable_Client__r: SObjectDefinition$Account | null;
  Buyer__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Purchase_Order__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Histories: SObjectDefinition$Purchase_Order__History;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Purchase_Order__c extends SObjectDefinition<'Purchase_Order__c'> {
    Name: 'Purchase_Order__c';
    Fields: Fields$Purchase_Order__c;
    ParentReferences: ParentReferences$Purchase_Order__c;
    ChildRelationships: ChildRelationships$Purchase_Order__c;
  }

type Fields$PushTopic = {
  //
  Id: string;
  Name: string;
  Query: string;
  ApiVersion: number;
  IsActive: boolean;
  NotifyForFields: string;
  NotifyForOperations: string;
  Description: string | null;
  NotifyForOperationCreate: boolean;
  NotifyForOperationUpdate: boolean;
  NotifyForOperationDelete: boolean;
  NotifyForOperationUndelete: boolean;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$PushTopic = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$PushTopic = {
  //
};

interface SObjectDefinition$PushTopic extends SObjectDefinition<'PushTopic'> {
    Name: 'PushTopic';
    Fields: Fields$PushTopic;
    ParentReferences: ParentReferences$PushTopic;
    ChildRelationships: ChildRelationships$PushTopic;
  }

type Fields$QueueSobject = {
  //
  Id: string;
  QueueId: string;
  SobjectType: string;
  CreatedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$QueueSobject = {
  //
  Queue: SObjectDefinition$Group;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$QueueSobject = {
  //
};

interface SObjectDefinition$QueueSobject extends SObjectDefinition<'QueueSobject'> {
    Name: 'QueueSobject';
    Fields: Fields$QueueSobject;
    ParentReferences: ParentReferences$QueueSobject;
    ChildRelationships: ChildRelationships$QueueSobject;
  }

type Fields$QuickText = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Message: string;
  Category: string | null;
  Channel: string | null;
  IsInsertable: boolean;
  SourceType: string | null;
};

type ParentReferences$QuickText = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuickText = {
  //
  Histories: SObjectDefinition$QuickTextHistory;
  Shares: SObjectDefinition$QuickTextShare;
};

interface SObjectDefinition$QuickText extends SObjectDefinition<'QuickText'> {
    Name: 'QuickText';
    Fields: Fields$QuickText;
    ParentReferences: ParentReferences$QuickText;
    ChildRelationships: ChildRelationships$QuickText;
  }

type Fields$QuickTextChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Message: string | null;
  Category: string | null;
  Channel: string | null;
  IsInsertable: boolean;
  SourceType: string | null;
};

type ParentReferences$QuickTextChangeEvent = {
  //
};

type ChildRelationships$QuickTextChangeEvent = {
  //
};

interface SObjectDefinition$QuickTextChangeEvent extends SObjectDefinition<'QuickTextChangeEvent'> {
    Name: 'QuickTextChangeEvent';
    Fields: Fields$QuickTextChangeEvent;
    ParentReferences: ParentReferences$QuickTextChangeEvent;
    ChildRelationships: ChildRelationships$QuickTextChangeEvent;
  }

type Fields$QuickTextHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  QuickTextId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$QuickTextHistory = {
  //
  QuickText: SObjectDefinition$QuickText;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$QuickTextHistory = {
  //
};

interface SObjectDefinition$QuickTextHistory extends SObjectDefinition<'QuickTextHistory'> {
    Name: 'QuickTextHistory';
    Fields: Fields$QuickTextHistory;
    ParentReferences: ParentReferences$QuickTextHistory;
    ChildRelationships: ChildRelationships$QuickTextHistory;
  }

type Fields$QuickTextShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$QuickTextShare = {
  //
  Parent: SObjectDefinition$QuickText;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuickTextShare = {
  //
};

interface SObjectDefinition$QuickTextShare extends SObjectDefinition<'QuickTextShare'> {
    Name: 'QuickTextShare';
    Fields: Fields$QuickTextShare;
    ParentReferences: ParentReferences$QuickTextShare;
    ChildRelationships: ChildRelationships$QuickTextShare;
  }

type Fields$QuickTextUsage = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  QuickTextId: string;
  Channel: string | null;
  LaunchSource: string | null;
  LoggedTime: DateString | null;
  UserId: string | null;
  AppContext: string | null;
};

type ParentReferences$QuickTextUsage = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  QuickText: SObjectDefinition$QuickText;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$QuickTextUsage = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$QuickTextUsageShare;
};

interface SObjectDefinition$QuickTextUsage extends SObjectDefinition<'QuickTextUsage'> {
    Name: 'QuickTextUsage';
    Fields: Fields$QuickTextUsage;
    ParentReferences: ParentReferences$QuickTextUsage;
    ChildRelationships: ChildRelationships$QuickTextUsage;
  }

type Fields$QuickTextUsageShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$QuickTextUsageShare = {
  //
  Parent: SObjectDefinition$QuickTextUsage;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuickTextUsageShare = {
  //
};

interface SObjectDefinition$QuickTextUsageShare extends SObjectDefinition<'QuickTextUsageShare'> {
    Name: 'QuickTextUsageShare';
    Fields: Fields$QuickTextUsageShare;
    ParentReferences: ParentReferences$QuickTextUsageShare;
    ChildRelationships: ChildRelationships$QuickTextUsageShare;
  }

type Fields$Quote = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  OpportunityId: string;
  Pricebook2Id: string | null;
  ContactId: string | null;
  QuoteNumber: string;
  IsSyncing: boolean;
  ShippingHandling: number | null;
  Tax: number | null;
  Status: string | null;
  ExpirationDate: DateString | null;
  Description: string | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  LineItemCount: number | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingStateCode: string | null;
  BillingCountryCode: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingStateCode: string | null;
  ShippingCountryCode: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  QuoteToStreet: string | null;
  QuoteToCity: string | null;
  QuoteToState: string | null;
  QuoteToPostalCode: string | null;
  QuoteToCountry: string | null;
  QuoteToStateCode: string | null;
  QuoteToCountryCode: string | null;
  QuoteToLatitude: number | null;
  QuoteToLongitude: number | null;
  QuoteToGeocodeAccuracy: string | null;
  QuoteToAddress: Address | null;
  AdditionalStreet: string | null;
  AdditionalCity: string | null;
  AdditionalState: string | null;
  AdditionalPostalCode: string | null;
  AdditionalCountry: string | null;
  AdditionalStateCode: string | null;
  AdditionalCountryCode: string | null;
  AdditionalLatitude: number | null;
  AdditionalLongitude: number | null;
  AdditionalGeocodeAccuracy: string | null;
  AdditionalAddress: Address | null;
  BillingName: string | null;
  ShippingName: string | null;
  QuoteToName: string | null;
  AdditionalName: string | null;
  Email: string | null;
  Phone: string | null;
  Fax: string | null;
  ContractId: string | null;
  AccountId: string | null;
  Discount: number | null;
  GrandTotal: number | null;
  CanCreateQuoteLineItems: boolean;
};

type ParentReferences$Quote = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Opportunity: SObjectDefinition$Opportunity;
  Pricebook2: SObjectDefinition$Pricebook2 | null;
  Contact: SObjectDefinition$Contact | null;
  Contract: SObjectDefinition$Contract | null;
  Account: SObjectDefinition$Account | null;
};

type ChildRelationships$Quote = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  QuoteDocuments: SObjectDefinition$QuoteDocument;
  Feeds: SObjectDefinition$QuoteFeed;
  QuoteLineItems: SObjectDefinition$QuoteLineItem;
  Shares: SObjectDefinition$QuoteShare;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
};

interface SObjectDefinition$Quote extends SObjectDefinition<'Quote'> {
    Name: 'Quote';
    Fields: Fields$Quote;
    ParentReferences: ParentReferences$Quote;
    ChildRelationships: ChildRelationships$Quote;
  }

type Fields$QuoteChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  OpportunityId: string | null;
  Pricebook2Id: string | null;
  ContactId: string | null;
  QuoteNumber: string;
  IsSyncing: boolean;
  ShippingHandling: number | null;
  Tax: number | null;
  Status: string | null;
  ExpirationDate: DateString | null;
  Description: string | null;
  Subtotal: number | null;
  TotalPrice: number | null;
  LineItemCount: number | null;
  BillingStreet: string | null;
  BillingCity: string | null;
  BillingState: string | null;
  BillingPostalCode: string | null;
  BillingCountry: string | null;
  BillingStateCode: string | null;
  BillingCountryCode: string | null;
  BillingLatitude: number | null;
  BillingLongitude: number | null;
  BillingGeocodeAccuracy: string | null;
  BillingAddress: Address | null;
  ShippingStreet: string | null;
  ShippingCity: string | null;
  ShippingState: string | null;
  ShippingPostalCode: string | null;
  ShippingCountry: string | null;
  ShippingStateCode: string | null;
  ShippingCountryCode: string | null;
  ShippingLatitude: number | null;
  ShippingLongitude: number | null;
  ShippingGeocodeAccuracy: string | null;
  ShippingAddress: Address | null;
  QuoteToStreet: string | null;
  QuoteToCity: string | null;
  QuoteToState: string | null;
  QuoteToPostalCode: string | null;
  QuoteToCountry: string | null;
  QuoteToStateCode: string | null;
  QuoteToCountryCode: string | null;
  QuoteToLatitude: number | null;
  QuoteToLongitude: number | null;
  QuoteToGeocodeAccuracy: string | null;
  QuoteToAddress: Address | null;
  AdditionalStreet: string | null;
  AdditionalCity: string | null;
  AdditionalState: string | null;
  AdditionalPostalCode: string | null;
  AdditionalCountry: string | null;
  AdditionalStateCode: string | null;
  AdditionalCountryCode: string | null;
  AdditionalLatitude: number | null;
  AdditionalLongitude: number | null;
  AdditionalGeocodeAccuracy: string | null;
  AdditionalAddress: Address | null;
  BillingName: string | null;
  ShippingName: string | null;
  QuoteToName: string | null;
  AdditionalName: string | null;
  Email: string | null;
  Phone: string | null;
  Fax: string | null;
  ContractId: string | null;
};

type ParentReferences$QuoteChangeEvent = {
  //
};

type ChildRelationships$QuoteChangeEvent = {
  //
};

interface SObjectDefinition$QuoteChangeEvent extends SObjectDefinition<'QuoteChangeEvent'> {
    Name: 'QuoteChangeEvent';
    Fields: Fields$QuoteChangeEvent;
    ParentReferences: ParentReferences$QuoteChangeEvent;
    ChildRelationships: ChildRelationships$QuoteChangeEvent;
  }

type Fields$QuoteDocument = {
  //
  Id: string;
  Name: string;
  QuoteId: string;
  ContentVersionDocumentId: string;
  Document: BlobString | null;
  GrandTotal: number | null;
  Discount: number | null;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$QuoteDocument = {
  //
  Quote: SObjectDefinition$Quote;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuoteDocument = {
  //
};

interface SObjectDefinition$QuoteDocument extends SObjectDefinition<'QuoteDocument'> {
    Name: 'QuoteDocument';
    Fields: Fields$QuoteDocument;
    ParentReferences: ParentReferences$QuoteDocument;
    ChildRelationships: ChildRelationships$QuoteDocument;
  }

type Fields$QuoteFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$QuoteFeed = {
  //
  Parent: SObjectDefinition$Quote;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$QuoteFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$QuoteFeed extends SObjectDefinition<'QuoteFeed'> {
    Name: 'QuoteFeed';
    Fields: Fields$QuoteFeed;
    ParentReferences: ParentReferences$QuoteFeed;
    ChildRelationships: ChildRelationships$QuoteFeed;
  }

type Fields$QuoteLineItem = {
  //
  Id: string;
  IsDeleted: boolean;
  LineNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  QuoteId: string;
  PricebookEntryId: string;
  OpportunityLineItemId: string | null;
  Quantity: number;
  UnitPrice: number;
  Discount: number | null;
  Description: string | null;
  ServiceDate: DateString | null;
  Product2Id: string;
  SortOrder: number | null;
  ListPrice: number | null;
  Subtotal: number | null;
  TotalPrice: number | null;
};

type ParentReferences$QuoteLineItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Quote: SObjectDefinition$Quote;
  PricebookEntry: SObjectDefinition$PricebookEntry;
  OpportunityLineItem: SObjectDefinition$OpportunityLineItem | null;
  Product2: SObjectDefinition$Product2;
};

type ChildRelationships$QuoteLineItem = {
  //
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$QuoteLineItem extends SObjectDefinition<'QuoteLineItem'> {
    Name: 'QuoteLineItem';
    Fields: Fields$QuoteLineItem;
    ParentReferences: ParentReferences$QuoteLineItem;
    ChildRelationships: ChildRelationships$QuoteLineItem;
  }

type Fields$QuoteLineItemChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  LineNumber: string;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  QuoteId: string | null;
  PricebookEntryId: string | null;
  OpportunityLineItemId: string | null;
  Quantity: number | null;
  UnitPrice: number | null;
  Discount: number | null;
  Description: string | null;
  ServiceDate: DateString | null;
  Product2Id: string | null;
  SortOrder: number | null;
};

type ParentReferences$QuoteLineItemChangeEvent = {
  //
};

type ChildRelationships$QuoteLineItemChangeEvent = {
  //
};

interface SObjectDefinition$QuoteLineItemChangeEvent extends SObjectDefinition<'QuoteLineItemChangeEvent'> {
    Name: 'QuoteLineItemChangeEvent';
    Fields: Fields$QuoteLineItemChangeEvent;
    ParentReferences: ParentReferences$QuoteLineItemChangeEvent;
    ChildRelationships: ChildRelationships$QuoteLineItemChangeEvent;
  }

type Fields$QuoteShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$QuoteShare = {
  //
  Parent: SObjectDefinition$Quote;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuoteShare = {
  //
};

interface SObjectDefinition$QuoteShare extends SObjectDefinition<'QuoteShare'> {
    Name: 'QuoteShare';
    Fields: Fields$QuoteShare;
    ParentReferences: ParentReferences$QuoteShare;
    ChildRelationships: ChildRelationships$QuoteShare;
  }

type Fields$QuoteTemplateRichTextData = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Data: string | null;
};

type ParentReferences$QuoteTemplateRichTextData = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$QuoteTemplateRichTextData = {
  //
};

interface SObjectDefinition$QuoteTemplateRichTextData extends SObjectDefinition<'QuoteTemplateRichTextData'> {
    Name: 'QuoteTemplateRichTextData';
    Fields: Fields$QuoteTemplateRichTextData;
    ParentReferences: ParentReferences$QuoteTemplateRichTextData;
    ChildRelationships: ChildRelationships$QuoteTemplateRichTextData;
  }

type Fields$RecentlyViewed = {
  //
  Id: string;
  Name: string | null;
  LastName: string | null;
  FirstName: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Type: string | null;
  Alias: string | null;
  UserRoleId: string | null;
  RecordTypeId: string | null;
  IsActive: boolean;
  ProfileId: string | null;
  Title: string | null;
  Email: string | null;
  Phone: string | null;
  NameOrAlias: string | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Language: string | null;
};

type ParentReferences$RecentlyViewed = {
  //
  UserRole: SObjectDefinition$UserRole | null;
  RecordType: SObjectDefinition$RecordType | null;
  Profile: SObjectDefinition$Profile | null;
};

type ChildRelationships$RecentlyViewed = {
  //
};

interface SObjectDefinition$RecentlyViewed extends SObjectDefinition<'RecentlyViewed'> {
    Name: 'RecentlyViewed';
    Fields: Fields$RecentlyViewed;
    ParentReferences: ParentReferences$RecentlyViewed;
    ChildRelationships: ChildRelationships$RecentlyViewed;
  }

type Fields$Recommendation = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ActionReference: string;
  Description: string;
  ImageId: string | null;
  AcceptanceLabel: string;
  RejectionLabel: string;
  IsActionActive: boolean;
  ExternalId: string | null;
  RecommendationMode: string | null;
  RecommendationScore: number | null;
};

type ParentReferences$Recommendation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Image: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$Recommendation = {
  //
};

interface SObjectDefinition$Recommendation extends SObjectDefinition<'Recommendation'> {
    Name: 'Recommendation';
    Fields: Fields$Recommendation;
    ParentReferences: ParentReferences$Recommendation;
    ChildRelationships: ChildRelationships$Recommendation;
  }

type Fields$RecommendationChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Description: string | null;
  ImageId: string | null;
  AcceptanceLabel: string | null;
  RejectionLabel: string | null;
  ExternalId: string | null;
  RecommendationMode: string | null;
  RecommendationScore: number | null;
};

type ParentReferences$RecommendationChangeEvent = {
  //
};

type ChildRelationships$RecommendationChangeEvent = {
  //
};

interface SObjectDefinition$RecommendationChangeEvent extends SObjectDefinition<'RecommendationChangeEvent'> {
    Name: 'RecommendationChangeEvent';
    Fields: Fields$RecommendationChangeEvent;
    ParentReferences: ParentReferences$RecommendationChangeEvent;
    ChildRelationships: ChildRelationships$RecommendationChangeEvent;
  }

type Fields$RecordAction = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  RecordId: string;
  FlowDefinition: string | null;
  FlowInterviewId: string | null;
  Order: number;
  Status: string | null;
  Pinned: string | null;
  ActionType: string | null;
  ActionDefinition: string | null;
  IsMandatory: boolean;
  IsUiRemoveHidden: boolean;
};

type ParentReferences$RecordAction = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Record: SObjectDefinition$Name;
  FlowInterview: SObjectDefinition$FlowInterview | null;
};

type ChildRelationships$RecordAction = {
  //
};

interface SObjectDefinition$RecordAction extends SObjectDefinition<'RecordAction'> {
    Name: 'RecordAction';
    Fields: Fields$RecordAction;
    ParentReferences: ParentReferences$RecordAction;
    ChildRelationships: ChildRelationships$RecordAction;
  }

type Fields$RecordActionHistory = {
  //
  Id: string;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  ParentRecordId: string;
  ActionDefinitionApiName: string;
  ActionDefinitionLabel: string;
  ActionType: string;
  State: string;
  UserId: string;
  RecordActionId: string;
  LoggedTime: DateString;
  Pinned: string | null;
  IsMandatory: boolean;
};

type ParentReferences$RecordActionHistory = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ParentRecord: SObjectDefinition$Name;
  User: SObjectDefinition$User;
};

type ChildRelationships$RecordActionHistory = {
  //
};

interface SObjectDefinition$RecordActionHistory extends SObjectDefinition<'RecordActionHistory'> {
    Name: 'RecordActionHistory';
    Fields: Fields$RecordActionHistory;
    ParentReferences: ParentReferences$RecordActionHistory;
    ChildRelationships: ChildRelationships$RecordActionHistory;
  }

type Fields$RecordType = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  NamespacePrefix: string | null;
  Description: string | null;
  BusinessProcessId: string | null;
  SobjectType: string;
  IsActive: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$RecordType = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RecordType = {
  //
};

interface SObjectDefinition$RecordType extends SObjectDefinition<'RecordType'> {
    Name: 'RecordType';
    Fields: Fields$RecordType;
    ParentReferences: ParentReferences$RecordType;
    ChildRelationships: ChildRelationships$RecordType;
  }

type Fields$RedirectWhitelistUrl = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Url: string;
};

type ParentReferences$RedirectWhitelistUrl = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$RedirectWhitelistUrl = {
  //
};

interface SObjectDefinition$RedirectWhitelistUrl extends SObjectDefinition<'RedirectWhitelistUrl'> {
    Name: 'RedirectWhitelistUrl';
    Fields: Fields$RedirectWhitelistUrl;
    ParentReferences: ParentReferences$RedirectWhitelistUrl;
    ChildRelationships: ChildRelationships$RedirectWhitelistUrl;
  }

type Fields$RelationshipDomain = {
  //
  Id: string;
  DurableId: string | null;
  ParentSobjectId: string | null;
  ChildSobjectId: string | null;
  FieldId: string | null;
  RelationshipInfoId: string | null;
  RelationshipName: string | null;
  IsCascadeDelete: boolean;
  IsDeprecatedAndHidden: boolean;
  IsRestrictedDelete: boolean;
  JunctionIdListNames: any | null;
};

type ParentReferences$RelationshipDomain = {
  //
};

type ChildRelationships$RelationshipDomain = {
  //
};

interface SObjectDefinition$RelationshipDomain extends SObjectDefinition<'RelationshipDomain'> {
    Name: 'RelationshipDomain';
    Fields: Fields$RelationshipDomain;
    ParentReferences: ParentReferences$RelationshipDomain;
    ChildRelationships: ChildRelationships$RelationshipDomain;
  }

type Fields$RelationshipInfo = {
  //
  Id: string;
  DurableId: string | null;
  ChildSobjectId: string | null;
  FieldId: string | null;
  IsCascadeDelete: boolean;
  IsDeprecatedAndHidden: boolean;
  IsRestrictedDelete: boolean;
  JunctionIdListNames: any | null;
};

type ParentReferences$RelationshipInfo = {
  //
};

type ChildRelationships$RelationshipInfo = {
  //
  RelationshipDomains: SObjectDefinition$RelationshipDomain;
};

interface SObjectDefinition$RelationshipInfo extends SObjectDefinition<'RelationshipInfo'> {
    Name: 'RelationshipInfo';
    Fields: Fields$RelationshipInfo;
    ParentReferences: ParentReferences$RelationshipInfo;
    ChildRelationships: ChildRelationships$RelationshipInfo;
  }

type Fields$Report = {
  //
  Id: string;
  OwnerId: string;
  FolderName: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
  Name: string;
  Description: string | null;
  DeveloperName: string;
  NamespacePrefix: string | null;
  LastRunDate: DateString | null;
  SystemModstamp: DateString;
  Format: string;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
};

type ParentReferences$Report = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Report = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Feeds: SObjectDefinition$ReportFeed;
};

interface SObjectDefinition$Report extends SObjectDefinition<'Report'> {
    Name: 'Report';
    Fields: Fields$Report;
    ParentReferences: ParentReferences$Report;
    ChildRelationships: ChildRelationships$Report;
  }

type Fields$ReportFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$ReportFeed = {
  //
  Parent: SObjectDefinition$Report;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$ReportFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$ReportFeed extends SObjectDefinition<'ReportFeed'> {
    Name: 'ReportFeed';
    Fields: Fields$ReportFeed;
    ParentReferences: ParentReferences$ReportFeed;
    ChildRelationships: ChildRelationships$ReportFeed;
  }

type Fields$Resource__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Status__c: string | null;
};

type ParentReferences$Resource__ChangeEvent = {
  //
};

type ChildRelationships$Resource__ChangeEvent = {
  //
};

interface SObjectDefinition$Resource__ChangeEvent extends SObjectDefinition<'Resource__ChangeEvent'> {
    Name: 'Resource__ChangeEvent';
    Fields: Fields$Resource__ChangeEvent;
    ParentReferences: ParentReferences$Resource__ChangeEvent;
    ChildRelationships: ChildRelationships$Resource__ChangeEvent;
  }

type Fields$Resource__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Status__c: string | null;
};

type ParentReferences$Resource__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Resource__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Resource__c extends SObjectDefinition<'Resource__c'> {
    Name: 'Resource__c';
    Fields: Fields$Resource__c;
    ParentReferences: ParentReferences$Resource__c;
    ChildRelationships: ChildRelationships$Resource__c;
  }

type Fields$SPSamlAttributes = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Key: string;
  Value: string;
  ConnectivityId: string | null;
};

type ParentReferences$SPSamlAttributes = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Connectivity: SObjectDefinition$ConnectedApplication | null;
};

type ChildRelationships$SPSamlAttributes = {
  //
};

interface SObjectDefinition$SPSamlAttributes extends SObjectDefinition<'SPSamlAttributes'> {
    Name: 'SPSamlAttributes';
    Fields: Fields$SPSamlAttributes;
    ParentReferences: ParentReferences$SPSamlAttributes;
    ChildRelationships: ChildRelationships$SPSamlAttributes;
  }

type Fields$SamlSsoConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Version: string;
  Issuer: string;
  OptionsSpInitBinding: boolean;
  OptionsUserProvisioning: boolean;
  OptionsUseConfigRequestMethod: boolean;
  AttributeFormat: string | null;
  AttributeName: string | null;
  Audience: string;
  IdentityMapping: string;
  IdentityLocation: string;
  SamlJitHandlerId: string | null;
  ExecutionUserId: string | null;
  LoginUrl: string | null;
  LogoutUrl: string | null;
  ErrorUrl: string | null;
  ValidationCert: string;
  RequestSignatureMethod: string | null;
  SingleLogoutUrl: string | null;
  SingleLogoutBinding: string | null;
};

type ParentReferences$SamlSsoConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SamlJitHandler: SObjectDefinition$ApexClass | null;
  ExecutionUser: SObjectDefinition$User | null;
};

type ChildRelationships$SamlSsoConfig = {
  //
};

interface SObjectDefinition$SamlSsoConfig extends SObjectDefinition<'SamlSsoConfig'> {
    Name: 'SamlSsoConfig';
    Fields: Fields$SamlSsoConfig;
    ParentReferences: ParentReferences$SamlSsoConfig;
    ChildRelationships: ChildRelationships$SamlSsoConfig;
  }

type Fields$Scontrol = {
  //
  Id: string;
  Name: string;
  DeveloperName: string;
  Description: string | null;
  EncodingKey: string;
  HtmlWrapper: string;
  Filename: string | null;
  BodyLength: number;
  Binary: BlobString | null;
  ContentSource: string | null;
  SupportsCaching: boolean;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$Scontrol = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Scontrol = {
  //
};

interface SObjectDefinition$Scontrol extends SObjectDefinition<'Scontrol'> {
    Name: 'Scontrol';
    Fields: Fields$Scontrol;
    ParentReferences: ParentReferences$Scontrol;
    ChildRelationships: ChildRelationships$Scontrol;
  }

type Fields$SearchLayout = {
  //
  Id: string;
  DurableId: string | null;
  Label: string | null;
  LayoutType: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  EntityDefinitionId: string | null;
  FieldsDisplayed: any | null;
  ButtonsDisplayed: any | null;
  Profile: string | null;
  ProfileName: string | null;
  ListLayout: string | null;
};

type ParentReferences$SearchLayout = {
  //
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SearchLayout = {
  //
};

interface SObjectDefinition$SearchLayout extends SObjectDefinition<'SearchLayout'> {
    Name: 'SearchLayout';
    Fields: Fields$SearchLayout;
    ParentReferences: ParentReferences$SearchLayout;
    ChildRelationships: ChildRelationships$SearchLayout;
  }

type Fields$SecurityCustomBaseline = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Baseline: string | null;
  IsDefault: boolean;
};

type ParentReferences$SecurityCustomBaseline = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SecurityCustomBaseline = {
  //
};

interface SObjectDefinition$SecurityCustomBaseline extends SObjectDefinition<'SecurityCustomBaseline'> {
    Name: 'SecurityCustomBaseline';
    Fields: Fields$SecurityCustomBaseline;
    ParentReferences: ParentReferences$SecurityCustomBaseline;
    ChildRelationships: ChildRelationships$SecurityCustomBaseline;
  }

type Fields$SessionPermSetActivation = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AuthSessionId: string;
  PermissionSetId: string | null;
  UserId: string;
  Description: string | null;
};

type ParentReferences$SessionPermSetActivation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AuthSession: SObjectDefinition$AuthSession;
  PermissionSet: SObjectDefinition$PermissionSet | null;
  User: SObjectDefinition$User;
};

type ChildRelationships$SessionPermSetActivation = {
  //
};

interface SObjectDefinition$SessionPermSetActivation extends SObjectDefinition<'SessionPermSetActivation'> {
    Name: 'SessionPermSetActivation';
    Fields: Fields$SessionPermSetActivation;
    ParentReferences: ParentReferences$SessionPermSetActivation;
    ChildRelationships: ChildRelationships$SessionPermSetActivation;
  }

type Fields$Settlement_Fee__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Settlement__c: string | null;
  Amount__c: number | null;
  Pay_Date__c: DateString | null;
};

type ParentReferences$Settlement_Fee__ChangeEvent = {
  //
};

type ChildRelationships$Settlement_Fee__ChangeEvent = {
  //
};

interface SObjectDefinition$Settlement_Fee__ChangeEvent extends SObjectDefinition<'Settlement_Fee__ChangeEvent'> {
    Name: 'Settlement_Fee__ChangeEvent';
    Fields: Fields$Settlement_Fee__ChangeEvent;
    ParentReferences: ParentReferences$Settlement_Fee__ChangeEvent;
    ChildRelationships: ChildRelationships$Settlement_Fee__ChangeEvent;
  }

type Fields$Settlement_Fee__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Settlement__c: string;
  Amount__c: number | null;
  Pay_Date__c: DateString | null;
};

type ParentReferences$Settlement_Fee__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Settlement__r: SObjectDefinition$Settlement__c;
};

type ChildRelationships$Settlement_Fee__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Settlement_Fee__c extends SObjectDefinition<'Settlement_Fee__c'> {
    Name: 'Settlement_Fee__c';
    Fields: Fields$Settlement_Fee__c;
    ParentReferences: ParentReferences$Settlement_Fee__c;
    ChildRelationships: ChildRelationships$Settlement_Fee__c;
  }

type Fields$Settlement_Payment_Schedule__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Settlement__c: string | null;
  Amount__c: number | null;
  Start_Date__c: DateString | null;
};

type ParentReferences$Settlement_Payment_Schedule__ChangeEvent = {
  //
};

type ChildRelationships$Settlement_Payment_Schedule__ChangeEvent = {
  //
};

interface SObjectDefinition$Settlement_Payment_Schedule__ChangeEvent extends SObjectDefinition<'Settlement_Payment_Schedule__ChangeEvent'> {
    Name: 'Settlement_Payment_Schedule__ChangeEvent';
    Fields: Fields$Settlement_Payment_Schedule__ChangeEvent;
    ParentReferences: ParentReferences$Settlement_Payment_Schedule__ChangeEvent;
    ChildRelationships: ChildRelationships$Settlement_Payment_Schedule__ChangeEvent;
  }

type Fields$Settlement_Payment_Schedule__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Settlement__c: string;
  Amount__c: number | null;
  Start_Date__c: DateString | null;
};

type ParentReferences$Settlement_Payment_Schedule__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Settlement__r: SObjectDefinition$Settlement__c;
};

type ChildRelationships$Settlement_Payment_Schedule__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Settlement_Payment_Schedule__c extends SObjectDefinition<'Settlement_Payment_Schedule__c'> {
    Name: 'Settlement_Payment_Schedule__c';
    Fields: Fields$Settlement_Payment_Schedule__c;
    ParentReferences: ParentReferences$Settlement_Payment_Schedule__c;
    ChildRelationships: ChildRelationships$Settlement_Payment_Schedule__c;
  }

type Fields$Settlement__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Write_off__c: number | null;
  Total_Fees__c: number | null;
  Notes__c: string | null;
  Resource__c: string | null;
  Settlement_Date__c: DateString | null;
  Status__c: string | null;
  Total_Payments__c: number | null;
  Amount__c: number | null;
  Balance__c: number | null;
};

type ParentReferences$Settlement__ChangeEvent = {
  //
};

type ChildRelationships$Settlement__ChangeEvent = {
  //
};

interface SObjectDefinition$Settlement__ChangeEvent extends SObjectDefinition<'Settlement__ChangeEvent'> {
    Name: 'Settlement__ChangeEvent';
    Fields: Fields$Settlement__ChangeEvent;
    ParentReferences: ParentReferences$Settlement__ChangeEvent;
    ChildRelationships: ChildRelationships$Settlement__ChangeEvent;
  }

type Fields$Settlement__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Write_off__c: number | null;
  Total_Fees__c: number | null;
  Notes__c: string | null;
  Resource__c: string | null;
  Settlement_Date__c: DateString | null;
  Status__c: string | null;
  Total_Payments__c: number | null;
  Amount__c: number;
  Balance__c: number | null;
};

type ParentReferences$Settlement__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Resource__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Settlement__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Settlement__c extends SObjectDefinition<'Settlement__c'> {
    Name: 'Settlement__c';
    Fields: Fields$Settlement__c;
    ParentReferences: ParentReferences$Settlement__c;
    ChildRelationships: ChildRelationships$Settlement__c;
  }

type Fields$SetupAssistantStep = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AssistantType: string;
  IsComplete: boolean;
};

type ParentReferences$SetupAssistantStep = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SetupAssistantStep = {
  //
};

interface SObjectDefinition$SetupAssistantStep extends SObjectDefinition<'SetupAssistantStep'> {
    Name: 'SetupAssistantStep';
    Fields: Fields$SetupAssistantStep;
    ParentReferences: ParentReferences$SetupAssistantStep;
    ChildRelationships: ChildRelationships$SetupAssistantStep;
  }

type Fields$SetupAuditTrail = {
  //
  Id: string;
  Action: string;
  Section: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  Display: string | null;
  DelegateUser: string | null;
  ResponsibleNamespacePrefix: string | null;
  CreatedByContext: string | null;
  CreatedByIssuer: string | null;
};

type ParentReferences$SetupAuditTrail = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$SetupAuditTrail = {
  //
};

interface SObjectDefinition$SetupAuditTrail extends SObjectDefinition<'SetupAuditTrail'> {
    Name: 'SetupAuditTrail';
    Fields: Fields$SetupAuditTrail;
    ParentReferences: ParentReferences$SetupAuditTrail;
    ChildRelationships: ChildRelationships$SetupAuditTrail;
  }

type Fields$SetupEntityAccess = {
  //
  Id: string;
  ParentId: string;
  SetupEntityId: string;
  SetupEntityType: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$SetupEntityAccess = {
  //
  Parent: SObjectDefinition$PermissionSet;
};

type ChildRelationships$SetupEntityAccess = {
  //
};

interface SObjectDefinition$SetupEntityAccess extends SObjectDefinition<'SetupEntityAccess'> {
    Name: 'SetupEntityAccess';
    Fields: Fields$SetupEntityAccess;
    ParentReferences: ParentReferences$SetupEntityAccess;
    ChildRelationships: ChildRelationships$SetupEntityAccess;
  }

type Fields$Site = {
  //
  Id: string;
  Name: string;
  Subdomain: string | null;
  UrlPathPrefix: string | null;
  GuestUserId: string | null;
  Status: string;
  AdminId: string;
  OptionsEnableFeeds: boolean;
  OptionsRequireHttps: boolean;
  OptionsAllowGuestPaymentsApi: boolean;
  OptionsHasStoredPathPrefix: boolean;
  OptionsAllowHomePage: boolean;
  OptionsAllowStandardIdeasPages: boolean;
  OptionsAllowStandardSearch: boolean;
  OptionsAllowStandardLookups: boolean;
  OptionsAllowStandardAnswersPages: boolean;
  OptionsAllowGuestSupportApi: boolean;
  OptionsAllowStandardPortalPages: boolean;
  OptionsCspUpgradeInsecureRequests: boolean;
  OptionsContentSniffingProtection: boolean;
  OptionsBrowserXssProtection: boolean;
  OptionsReferrerPolicyOriginWhenCrossOrigin: boolean;
  Description: string | null;
  MasterLabel: string;
  AnalyticsTrackingCode: string | null;
  SiteType: string;
  ClickjackProtectionLevel: string;
  DailyBandwidthLimit: number | null;
  DailyBandwidthUsed: number | null;
  DailyRequestTimeLimit: number | null;
  DailyRequestTimeUsed: number | null;
  MonthlyPageViewsEntitlement: number | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  GuestRecordDefaultOwnerId: string | null;
};

type ParentReferences$Site = {
  //
  GuestUser: SObjectDefinition$User | null;
  Admin: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  GuestRecordDefaultOwner: SObjectDefinition$User | null;
};

type ChildRelationships$Site = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  SiteDomainPaths: SObjectDefinition$DomainSite;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Feeds: SObjectDefinition$SiteFeed;
  Histories: SObjectDefinition$SiteHistory;
  SiteIframeWhiteListUrls: SObjectDefinition$SiteIframeWhiteListUrl;
};

interface SObjectDefinition$Site extends SObjectDefinition<'Site'> {
    Name: 'Site';
    Fields: Fields$Site;
    ParentReferences: ParentReferences$Site;
    ChildRelationships: ChildRelationships$Site;
  }

type Fields$SiteDetail = {
  //
  Id: string;
  DurableId: string | null;
  IsRegistrationEnabled: boolean;
  SecureUrl: string | null;
};

type ParentReferences$SiteDetail = {
  //
};

type ChildRelationships$SiteDetail = {
  //
};

interface SObjectDefinition$SiteDetail extends SObjectDefinition<'SiteDetail'> {
    Name: 'SiteDetail';
    Fields: Fields$SiteDetail;
    ParentReferences: ParentReferences$SiteDetail;
    ChildRelationships: ChildRelationships$SiteDetail;
  }

type Fields$SiteFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$SiteFeed = {
  //
  Parent: SObjectDefinition$Site;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$SiteFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$SiteFeed extends SObjectDefinition<'SiteFeed'> {
    Name: 'SiteFeed';
    Fields: Fields$SiteFeed;
    ParentReferences: ParentReferences$SiteFeed;
    ChildRelationships: ChildRelationships$SiteFeed;
  }

type Fields$SiteHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  SiteId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$SiteHistory = {
  //
  Site: SObjectDefinition$Site;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$SiteHistory = {
  //
};

interface SObjectDefinition$SiteHistory extends SObjectDefinition<'SiteHistory'> {
    Name: 'SiteHistory';
    Fields: Fields$SiteHistory;
    ParentReferences: ParentReferences$SiteHistory;
    ChildRelationships: ChildRelationships$SiteHistory;
  }

type Fields$SiteIframeWhiteListUrl = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SiteId: string;
  Url: string | null;
};

type ParentReferences$SiteIframeWhiteListUrl = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Site: SObjectDefinition$Site;
};

type ChildRelationships$SiteIframeWhiteListUrl = {
  //
};

interface SObjectDefinition$SiteIframeWhiteListUrl extends SObjectDefinition<'SiteIframeWhiteListUrl'> {
    Name: 'SiteIframeWhiteListUrl';
    Fields: Fields$SiteIframeWhiteListUrl;
    ParentReferences: ParentReferences$SiteIframeWhiteListUrl;
    ChildRelationships: ChildRelationships$SiteIframeWhiteListUrl;
  }

type Fields$SocialPersona = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string;
  Provider: string;
  ExternalId: string | null;
  IsDefault: boolean;
  ExternalPictureURL: string | null;
  ProfileUrl: string | null;
  TopicType: string | null;
  IsBlacklisted: boolean;
  RealName: string | null;
  IsFollowingUs: boolean;
  AreWeFollowing: boolean;
  MediaType: string | null;
  Bio: string | null;
  Followers: number | null;
  Following: number | null;
  NumberOfFriends: number | null;
  ListedCount: number | null;
  MediaProvider: string | null;
  ProfileType: string | null;
  R6SourceId: string | null;
  NumberOfTweets: number | null;
  SourceApp: string | null;
  AuthorLabels: string | null;
  IsVerified: boolean;
  InfluencerScore: number | null;
  AvatarUrl: string | null;
};

type ParentReferences$SocialPersona = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name;
};

type ChildRelationships$SocialPersona = {
  //
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$SocialPersonaHistory;
  Posts: SObjectDefinition$SocialPost;
};

interface SObjectDefinition$SocialPersona extends SObjectDefinition<'SocialPersona'> {
    Name: 'SocialPersona';
    Fields: Fields$SocialPersona;
    ParentReferences: ParentReferences$SocialPersona;
    ChildRelationships: ChildRelationships$SocialPersona;
  }

type Fields$SocialPersonaHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  SocialPersonaId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$SocialPersonaHistory = {
  //
  SocialPersona: SObjectDefinition$SocialPersona;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$SocialPersonaHistory = {
  //
};

interface SObjectDefinition$SocialPersonaHistory extends SObjectDefinition<'SocialPersonaHistory'> {
    Name: 'SocialPersonaHistory';
    Fields: Fields$SocialPersonaHistory;
    ParentReferences: ParentReferences$SocialPersonaHistory;
    ChildRelationships: ChildRelationships$SocialPersonaHistory;
  }

type Fields$SocialPost = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string | null;
  PersonaId: string | null;
  WhoId: string | null;
  ReplyToId: string | null;
  Headline: string | null;
  Content: string | null;
  Posted: DateString;
  PostUrl: string | null;
  Provider: string | null;
  Handle: string | null;
  SpamRating: string | null;
  MediaType: string | null;
  MediaProvider: string | null;
  Sentiment: string | null;
  PostPriority: string | null;
  Status: string | null;
  StatusMessage: string | null;
  Recipient: string | null;
  RecipientType: string | null;
  MessageType: string | null;
  R6PostId: string | null;
  R6TopicId: string | null;
  R6SourceId: string | null;
  TopicType: string | null;
  ExternalPostId: string | null;
  HarvestDate: DateString | null;
  IsOutbound: boolean;
  PostTags: string | null;
  SourceTags: string | null;
  Classification: string | null;
  ThreadSize: number | null;
  CommentCount: number | null;
  Shares: number | null;
  ViewCount: number | null;
  InboundLinkCount: number | null;
  UniqueCommentors: number | null;
  LikesAndVotes: number | null;
  TopicProfileName: string | null;
  KeywordGroupName: string | null;
  EngagementLevel: string | null;
  AssignedTo: string | null;
  OutboundSocialAccountId: string | null;
  ReviewedStatus: string | null;
  AttachmentUrl: string | null;
  AttachmentType: string | null;
  DeletedById: string | null;
  ResponseContextExternalId: string | null;
  LikedBy: string | null;
  AnalyzerScore: number | null;
  Language: string | null;
  ReviewScore: number | null;
  ReviewScale: number | null;
  HiddenById: string | null;
  Notes: string | null;
  TruncatedContent: string | null;
};

type ParentReferences$SocialPost = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Case | null;
  Persona: SObjectDefinition$SocialPersona | null;
  Who: SObjectDefinition$Name | null;
  ReplyTo: SObjectDefinition$SocialPost | null;
  OutboundSocialAccount: SObjectDefinition$ExternalSocialAccount | null;
  DeletedBy: SObjectDefinition$User | null;
  HiddenBy: SObjectDefinition$User | null;
};

type ChildRelationships$SocialPost = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Personas: SObjectDefinition$SocialPersona;
  Replies: SObjectDefinition$SocialPost;
  Feeds: SObjectDefinition$SocialPostFeed;
  Histories: SObjectDefinition$SocialPostHistory;
};

interface SObjectDefinition$SocialPost extends SObjectDefinition<'SocialPost'> {
    Name: 'SocialPost';
    Fields: Fields$SocialPost;
    ParentReferences: ParentReferences$SocialPost;
    ChildRelationships: ChildRelationships$SocialPost;
  }

type Fields$SocialPostChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  ParentId: string | null;
  PersonaId: string | null;
  WhoId: string | null;
  ReplyToId: string | null;
  Headline: string | null;
  Content: string | null;
  Posted: DateString | null;
  PostUrl: string | null;
  Provider: string | null;
  Handle: string | null;
  SpamRating: string | null;
  MediaType: string | null;
  MediaProvider: string | null;
  Sentiment: string | null;
  PostPriority: string | null;
  Status: string | null;
  StatusMessage: string | null;
  Recipient: string | null;
  RecipientType: string | null;
  MessageType: string | null;
  R6PostId: string | null;
  R6TopicId: string | null;
  R6SourceId: string | null;
  TopicType: string | null;
  ExternalPostId: string | null;
  HarvestDate: DateString | null;
  IsOutbound: boolean;
  PostTags: string | null;
  SourceTags: string | null;
  Classification: string | null;
  ThreadSize: number | null;
  CommentCount: number | null;
  Shares: number | null;
  ViewCount: number | null;
  InboundLinkCount: number | null;
  UniqueCommentors: number | null;
  LikesAndVotes: number | null;
  TopicProfileName: string | null;
  KeywordGroupName: string | null;
  EngagementLevel: string | null;
  AssignedTo: string | null;
  OutboundSocialAccountId: string | null;
  ReviewedStatus: string | null;
  AttachmentUrl: string | null;
  AttachmentType: string | null;
  DeletedById: string | null;
  ResponseContextExternalId: string | null;
  LikedBy: string | null;
  AnalyzerScore: number | null;
  Language: string | null;
  ReviewScore: number | null;
  ReviewScale: number | null;
  HiddenById: string | null;
  Notes: string | null;
};

type ParentReferences$SocialPostChangeEvent = {
  //
};

type ChildRelationships$SocialPostChangeEvent = {
  //
};

interface SObjectDefinition$SocialPostChangeEvent extends SObjectDefinition<'SocialPostChangeEvent'> {
    Name: 'SocialPostChangeEvent';
    Fields: Fields$SocialPostChangeEvent;
    ParentReferences: ParentReferences$SocialPostChangeEvent;
    ChildRelationships: ChildRelationships$SocialPostChangeEvent;
  }

type Fields$SocialPostFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$SocialPostFeed = {
  //
  Parent: SObjectDefinition$SocialPost;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$SocialPostFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$SocialPostFeed extends SObjectDefinition<'SocialPostFeed'> {
    Name: 'SocialPostFeed';
    Fields: Fields$SocialPostFeed;
    ParentReferences: ParentReferences$SocialPostFeed;
    ChildRelationships: ChildRelationships$SocialPostFeed;
  }

type Fields$SocialPostHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  SocialPostId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$SocialPostHistory = {
  //
  SocialPost: SObjectDefinition$SocialPost;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$SocialPostHistory = {
  //
};

interface SObjectDefinition$SocialPostHistory extends SObjectDefinition<'SocialPostHistory'> {
    Name: 'SocialPostHistory';
    Fields: Fields$SocialPostHistory;
    ParentReferences: ParentReferences$SocialPostHistory;
    ChildRelationships: ChildRelationships$SocialPostHistory;
  }

type Fields$SocialPostShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$SocialPostShare = {
  //
  Parent: SObjectDefinition$SocialPost;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SocialPostShare = {
  //
};

interface SObjectDefinition$SocialPostShare extends SObjectDefinition<'SocialPostShare'> {
    Name: 'SocialPostShare';
    Fields: Fields$SocialPostShare;
    ParentReferences: ParentReferences$SocialPostShare;
    ChildRelationships: ChildRelationships$SocialPostShare;
  }

type Fields$Solution = {
  //
  Id: string;
  IsDeleted: boolean;
  SolutionNumber: string;
  SolutionName: string;
  IsPublished: boolean;
  IsPublishedInPublicKb: boolean;
  Status: string;
  IsReviewed: boolean;
  SolutionNote: string | null;
  OwnerId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TimesUsed: number;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsHtml: boolean;
};

type ParentReferences$Solution = {
  //
  Owner: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Solution = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CaseSolutions: SObjectDefinition$CaseSolution;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$SolutionFeed;
  Histories: SObjectDefinition$SolutionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Votes: SObjectDefinition$Vote;
};

interface SObjectDefinition$Solution extends SObjectDefinition<'Solution'> {
    Name: 'Solution';
    Fields: Fields$Solution;
    ParentReferences: ParentReferences$Solution;
    ChildRelationships: ChildRelationships$Solution;
  }

type Fields$SolutionFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$SolutionFeed = {
  //
  Parent: SObjectDefinition$Solution;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$SolutionFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$SolutionFeed extends SObjectDefinition<'SolutionFeed'> {
    Name: 'SolutionFeed';
    Fields: Fields$SolutionFeed;
    ParentReferences: ParentReferences$SolutionFeed;
    ChildRelationships: ChildRelationships$SolutionFeed;
  }

type Fields$SolutionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  SolutionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$SolutionHistory = {
  //
  Solution: SObjectDefinition$Solution;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$SolutionHistory = {
  //
};

interface SObjectDefinition$SolutionHistory extends SObjectDefinition<'SolutionHistory'> {
    Name: 'SolutionHistory';
    Fields: Fields$SolutionHistory;
    ParentReferences: ParentReferences$SolutionHistory;
    ChildRelationships: ChildRelationships$SolutionHistory;
  }

type Fields$SolutionStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsReviewed: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$SolutionStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SolutionStatus = {
  //
};

interface SObjectDefinition$SolutionStatus extends SObjectDefinition<'SolutionStatus'> {
    Name: 'SolutionStatus';
    Fields: Fields$SolutionStatus;
    ParentReferences: ParentReferences$SolutionStatus;
    ChildRelationships: ChildRelationships$SolutionStatus;
  }

type Fields$Sstack_CC__Billing_Week__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Job_Placement__c: string | null;
  Sstack_CC__Billed_Hours__c: number | null;
  Sstack_CC__Start_Date__c: DateString | null;
  Sstack_CC__Total_Billed_Hours__c: number | null;
};

type ParentReferences$Sstack_CC__Billing_Week__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Billing_Week__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Billing_Week__ChangeEvent extends SObjectDefinition<'Sstack_CC__Billing_Week__ChangeEvent'> {
    Name: 'Sstack_CC__Billing_Week__ChangeEvent';
    Fields: Fields$Sstack_CC__Billing_Week__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Billing_Week__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Billing_Week__ChangeEvent;
  }

type Fields$Sstack_CC__Billing_Week__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Sstack_CC__Job_Placement__c: string;
  Sstack_CC__Billed_Hours__c: number | null;
  Sstack_CC__Start_Date__c: DateString;
  Sstack_CC__Total_Billed_Hours__c: number | null;
};

type ParentReferences$Sstack_CC__Billing_Week__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c;
};

type ChildRelationships$Sstack_CC__Billing_Week__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Billing_Week__c extends SObjectDefinition<'Sstack_CC__Billing_Week__c'> {
    Name: 'Sstack_CC__Billing_Week__c';
    Fields: Fields$Sstack_CC__Billing_Week__c;
    ParentReferences: ParentReferences$Sstack_CC__Billing_Week__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Billing_Week__c;
  }

type Fields$Sstack_CC__CTH_Terms__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Deal__c: string | null;
  Sstack_CC__Buyout_Amount__c: number | null;
  Sstack_CC__Buyout_Hours__c: number | null;
  Sstack_CC__Buyout_Month__c: number | null;
  Sstack_CC__Buyout_Percentage__c: number | null;
};

type ParentReferences$Sstack_CC__CTH_Terms__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__CTH_Terms__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__CTH_Terms__ChangeEvent extends SObjectDefinition<'Sstack_CC__CTH_Terms__ChangeEvent'> {
    Name: 'Sstack_CC__CTH_Terms__ChangeEvent';
    Fields: Fields$Sstack_CC__CTH_Terms__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__CTH_Terms__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__CTH_Terms__ChangeEvent;
  }

type Fields$Sstack_CC__CTH_Terms__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Sstack_CC__Deal__c: string;
  Sstack_CC__Buyout_Amount__c: number | null;
  Sstack_CC__Buyout_Hours__c: number | null;
  Sstack_CC__Buyout_Month__c: number | null;
  Sstack_CC__Buyout_Percentage__c: number | null;
};

type ParentReferences$Sstack_CC__CTH_Terms__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Deal__r: SObjectDefinition$Sstack_CC__Deal__c;
};

type ChildRelationships$Sstack_CC__CTH_Terms__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__CTH_Terms__c extends SObjectDefinition<'Sstack_CC__CTH_Terms__c'> {
    Name: 'Sstack_CC__CTH_Terms__c';
    Fields: Fields$Sstack_CC__CTH_Terms__c;
    ParentReferences: ParentReferences$Sstack_CC__CTH_Terms__c;
    ChildRelationships: ChildRelationships$Sstack_CC__CTH_Terms__c;
  }

type Fields$Sstack_CC__Commission_Calculator_Settings__mdt = {
  //
  Id: string;
  DeveloperName: string;
  MasterLabel: string;
  Language: string;
  NamespacePrefix: string | null;
  Label: string | null;
  QualifiedApiName: string | null;
  Sstack_CC__Approver_Email_Address__c: string | null;
  Sstack_CC__Long_Text_Value__c: string | null;
};

type ParentReferences$Sstack_CC__Commission_Calculator_Settings__mdt = {
  //
};

type ChildRelationships$Sstack_CC__Commission_Calculator_Settings__mdt = {
  //
};

interface SObjectDefinition$Sstack_CC__Commission_Calculator_Settings__mdt extends SObjectDefinition<'Sstack_CC__Commission_Calculator_Settings__mdt'> {
    Name: 'Sstack_CC__Commission_Calculator_Settings__mdt';
    Fields: Fields$Sstack_CC__Commission_Calculator_Settings__mdt;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Calculator_Settings__mdt;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Calculator_Settings__mdt;
  }

type Fields$Sstack_CC__Commission_Report_Result_Line__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Commission_Report_Result__c: string | null;
  Sstack_CC__Billable_Hours__c: number | null;
  Sstack_CC__Commission_End_Date__c: DateString | null;
  Sstack_CC__Commission_Percentage__c: number | null;
  Sstack_CC__Commission_Start_Date__c: DateString | null;
  Sstack_CC__DP_Weekly_Net_Revenue__c: number | null;
  Sstack_CC__Job_Placement_Details__c: string | null;
  Sstack_CC__Job_Placement__c: string | null;
  Sstack_CC__Line_Start_Date__c: DateString | null;
  Sstack_CC__Number_Of_Direct_Placement_Resources__c: number | null;
  Sstack_CC__Number_Of_Resources__c: number | null;
  Sstack_CC__Parent_Line__c: string | null;
  Sstack_CC__Payment_Cap__c: string | null;
  Sstack_CC__Payment_Frequency__c: string | null;
  Sstack_CC__Rate_Commission_Hour__c: number | null;
  Sstack_CC__Salary_Amount__c: number | null;
  Sstack_CC__Total_Commission__c: number | null;
  Sstack_CC__Total_Weekly_Net_Revenue__c: number | null;
  Sstack_CC__Weekly_Net_Revenue__c: number | null;
  Sstack_CC__Hourly_Bill_Rate__c: number | null;
  Sstack_CC__Commission_Percentage_2__c: number | null;
  Sstack_CC__Hourly_Bill_Rate_2__c: number | null;
};

type ParentReferences$Sstack_CC__Commission_Report_Result_Line__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Commission_Report_Result_Line__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Commission_Report_Result_Line__ChangeEvent extends SObjectDefinition<'Sstack_CC__Commission_Report_Result_Line__ChangeEvent'> {
    Name: 'Sstack_CC__Commission_Report_Result_Line__ChangeEvent';
    Fields: Fields$Sstack_CC__Commission_Report_Result_Line__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Report_Result_Line__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Report_Result_Line__ChangeEvent;
  }

type Fields$Sstack_CC__Commission_Report_Result_Line__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Sstack_CC__Commission_Report_Result__c: string;
  Sstack_CC__Billable_Hours__c: number | null;
  Sstack_CC__Commission_End_Date__c: DateString | null;
  Sstack_CC__Commission_Percentage__c: number | null;
  Sstack_CC__Commission_Start_Date__c: DateString | null;
  Sstack_CC__DP_Weekly_Net_Revenue__c: number | null;
  Sstack_CC__Job_Placement_Details__c: string | null;
  Sstack_CC__Job_Placement__c: string | null;
  Sstack_CC__Line_Start_Date__c: DateString | null;
  Sstack_CC__Number_Of_Direct_Placement_Resources__c: number | null;
  Sstack_CC__Number_Of_Resources__c: number | null;
  Sstack_CC__Parent_Line__c: string | null;
  Sstack_CC__Payment_Cap__c: string | null;
  Sstack_CC__Payment_Frequency__c: string | null;
  Sstack_CC__Rate_Commission_Hour__c: number | null;
  Sstack_CC__Salary_Amount__c: number | null;
  Sstack_CC__Total_Commission__c: number | null;
  Sstack_CC__Total_Weekly_Net_Revenue__c: number | null;
  Sstack_CC__Weekly_Net_Revenue__c: number | null;
  Sstack_CC__Hourly_Bill_Rate__c: number | null;
  Sstack_CC__Commission_Percentage_2__c: number | null;
  Sstack_CC__Hourly_Bill_Rate_2__c: number | null;
};

type ParentReferences$Sstack_CC__Commission_Report_Result_Line__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Commission_Report_Result__r: SObjectDefinition$Sstack_CC__Commission_Report_Result__c;
  Sstack_CC__Job_Placement_Details__r: SObjectDefinition$Sstack_CC__JP_Information__c | null;
  Sstack_CC__Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c | null;
  Sstack_CC__Parent_Line__r: SObjectDefinition$Sstack_CC__Commission_Report_Result_Line__c | null;
};

type ChildRelationships$Sstack_CC__Commission_Report_Result_Line__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Commission_Report_Result_Line__c extends SObjectDefinition<'Sstack_CC__Commission_Report_Result_Line__c'> {
    Name: 'Sstack_CC__Commission_Report_Result_Line__c';
    Fields: Fields$Sstack_CC__Commission_Report_Result_Line__c;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Report_Result_Line__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Report_Result_Line__c;
  }

type Fields$Sstack_CC__Commission_Report_Result__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Account_Manager__c: string | null;
  Sstack_CC__End_Date__c: DateString | null;
  Sstack_CC__Recruiter__c: string | null;
  Sstack_CC__Referrer__c: string | null;
  Sstack_CC__Start_Date__c: DateString | null;
  Sstack_CC__View_Report__c: string | null;
};

type ParentReferences$Sstack_CC__Commission_Report_Result__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Commission_Report_Result__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Commission_Report_Result__ChangeEvent extends SObjectDefinition<'Sstack_CC__Commission_Report_Result__ChangeEvent'> {
    Name: 'Sstack_CC__Commission_Report_Result__ChangeEvent';
    Fields: Fields$Sstack_CC__Commission_Report_Result__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Report_Result__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Report_Result__ChangeEvent;
  }

type Fields$Sstack_CC__Commission_Report_Result__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Sstack_CC__Account_Manager__c: string | null;
  Sstack_CC__End_Date__c: DateString | null;
  Sstack_CC__Recruiter__c: string | null;
  Sstack_CC__Referrer__c: string | null;
  Sstack_CC__Start_Date__c: DateString | null;
  Sstack_CC__View_Report__c: string | null;
};

type ParentReferences$Sstack_CC__Commission_Report_Result__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Account_Manager__r: SObjectDefinition$User | null;
  Sstack_CC__Recruiter__r: SObjectDefinition$Contact | null;
  Sstack_CC__Referrer__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Sstack_CC__Commission_Report_Result__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Commission_Report_Result__c extends SObjectDefinition<'Sstack_CC__Commission_Report_Result__c'> {
    Name: 'Sstack_CC__Commission_Report_Result__c';
    Fields: Fields$Sstack_CC__Commission_Report_Result__c;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Report_Result__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Report_Result__c;
  }

type Fields$Sstack_CC__Commission_Table_Line__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Commission_Table__c: string | null;
  Sstack_CC__AM_Commission_Amount__c: number | null;
  Sstack_CC__AM_Commission_Rate__c: number | null;
  Sstack_CC__AM_Staff_Aug_Tier_Amount__c: number | null;
  Sstack_CC__Lower_Limit__c: number | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Recruiter_Commission_Amount__c: number | null;
  Sstack_CC__Recruiter_Commission_Rate__c: number | null;
  Sstack_CC__Recruiter_Staff_Aug_Tier_Amount__c: number | null;
  Sstack_CC__Upper_Limit__c: number | null;
  Sstack_CC__CTH_1_Amount__c: number | null;
  Sstack_CC__CTH_2_Amount__c: number | null;
  Sstack_CC__CTH_3_Amount__c: number | null;
  Sstack_CC__AM_Commission_Rate_2__c: number | null;
  Sstack_CC__Recruiter_Commission_Rate_2__c: number | null;
  Sstack_CC__CTH_4_Amount__c: number | null;
};

type ParentReferences$Sstack_CC__Commission_Table_Line__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Commission_Table_Line__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Commission_Table_Line__ChangeEvent extends SObjectDefinition<'Sstack_CC__Commission_Table_Line__ChangeEvent'> {
    Name: 'Sstack_CC__Commission_Table_Line__ChangeEvent';
    Fields: Fields$Sstack_CC__Commission_Table_Line__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Table_Line__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Table_Line__ChangeEvent;
  }

type Fields$Sstack_CC__Commission_Table_Line__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Sstack_CC__Commission_Table__c: string;
  Sstack_CC__AM_Commission_Amount__c: number | null;
  Sstack_CC__AM_Commission_Rate__c: number | null;
  Sstack_CC__AM_Staff_Aug_Tier_Amount__c: number | null;
  Sstack_CC__Lower_Limit__c: number | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Recruiter_Commission_Amount__c: number | null;
  Sstack_CC__Recruiter_Commission_Rate__c: number | null;
  Sstack_CC__Recruiter_Staff_Aug_Tier_Amount__c: number | null;
  Sstack_CC__Upper_Limit__c: number | null;
  Sstack_CC__CTH_1_Amount__c: number | null;
  Sstack_CC__CTH_2_Amount__c: number | null;
  Sstack_CC__CTH_3_Amount__c: number | null;
  Sstack_CC__AM_Commission_Rate_2__c: number | null;
  Sstack_CC__Recruiter_Commission_Rate_2__c: number | null;
  Sstack_CC__CTH_4_Amount__c: number | null;
};

type ParentReferences$Sstack_CC__Commission_Table_Line__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Commission_Table__r: SObjectDefinition$Sstack_CC__Commission_Table__c;
};

type ChildRelationships$Sstack_CC__Commission_Table_Line__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Commission_Table_Line__c extends SObjectDefinition<'Sstack_CC__Commission_Table_Line__c'> {
    Name: 'Sstack_CC__Commission_Table_Line__c';
    Fields: Fields$Sstack_CC__Commission_Table_Line__c;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Table_Line__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Table_Line__c;
  }

type Fields$Sstack_CC__Commission_Table__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Effective_Date__c: DateString | null;
  Sstack_CC__Name__c: string | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Standard_Buyout_Term_Commission__c: number | null;
  Sstack_CC__Discount__c: number | null;
};

type ParentReferences$Sstack_CC__Commission_Table__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Commission_Table__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Commission_Table__ChangeEvent extends SObjectDefinition<'Sstack_CC__Commission_Table__ChangeEvent'> {
    Name: 'Sstack_CC__Commission_Table__ChangeEvent';
    Fields: Fields$Sstack_CC__Commission_Table__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Table__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Table__ChangeEvent;
  }

type Fields$Sstack_CC__Commission_Table__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Sstack_CC__Commission_Table__History = {
  //
  Parent: SObjectDefinition$Sstack_CC__Commission_Table__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Sstack_CC__Commission_Table__History = {
  //
};

interface SObjectDefinition$Sstack_CC__Commission_Table__History extends SObjectDefinition<'Sstack_CC__Commission_Table__History'> {
    Name: 'Sstack_CC__Commission_Table__History';
    Fields: Fields$Sstack_CC__Commission_Table__History;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Table__History;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Table__History;
  }

type Fields$Sstack_CC__Commission_Table__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Sstack_CC__Effective_Date__c: DateString;
  Sstack_CC__Name__c: string | null;
  Sstack_CC__Placement_Type__c: string;
  Sstack_CC__Standard_Buyout_Term_Commission__c: number | null;
  Sstack_CC__Discount__c: number | null;
};

type ParentReferences$Sstack_CC__Commission_Table__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Sstack_CC__Commission_Table__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$Sstack_CC__Commission_Table__History;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Commission_Table__c extends SObjectDefinition<'Sstack_CC__Commission_Table__c'> {
    Name: 'Sstack_CC__Commission_Table__c';
    Fields: Fields$Sstack_CC__Commission_Table__c;
    ParentReferences: ParentReferences$Sstack_CC__Commission_Table__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Commission_Table__c;
  }

type Fields$Sstack_CC__Deal__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Associated_Resources__c: number | null;
  Sstack_CC__CTH_Terms_For_Commission__c: string | null;
  Sstack_CC__Special_Deal_Terms__c: string | null;
  Sstack_CC__Standard_CHT__c: string | null;
  Sstack_CC__Client__c: string | null;
  Sstack_CC__Effective_Date__c: DateString | null;
};

type ParentReferences$Sstack_CC__Deal__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Deal__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Deal__ChangeEvent extends SObjectDefinition<'Sstack_CC__Deal__ChangeEvent'> {
    Name: 'Sstack_CC__Deal__ChangeEvent';
    Fields: Fields$Sstack_CC__Deal__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Deal__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Deal__ChangeEvent;
  }

type Fields$Sstack_CC__Deal__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Sstack_CC__Associated_Resources__c: number | null;
  Sstack_CC__CTH_Terms_For_Commission__c: string | null;
  Sstack_CC__Special_Deal_Terms__c: string | null;
  Sstack_CC__Standard_CHT__c: string;
  Sstack_CC__Client__c: string | null;
  Sstack_CC__Effective_Date__c: DateString | null;
};

type ParentReferences$Sstack_CC__Deal__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Client__r: SObjectDefinition$Account | null;
};

type ChildRelationships$Sstack_CC__Deal__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Deal__c extends SObjectDefinition<'Sstack_CC__Deal__c'> {
    Name: 'Sstack_CC__Deal__c';
    Fields: Fields$Sstack_CC__Deal__c;
    ParentReferences: ParentReferences$Sstack_CC__Deal__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Deal__c;
  }

type Fields$Sstack_CC__JP_Information__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Job_Placement__c: string | null;
  Sstack_CC__Account_Fee_Expense__c: number | null;
  Sstack_CC__Account_Fee_Revenue__c: number | null;
  Sstack_CC__Bill_Rate__c: number | null;
  Sstack_CC__Client_Payment_Date__c: DateString | null;
  Sstack_CC__Effective_Date__c: DateString | null;
  Sstack_CC__Federal_Holidays__c: string | null;
  Sstack_CC__Health_Benefits__c: string | null;
  Sstack_CC__Manager__c: string | null;
  Sstack_CC__Next_Effective_Date__c: DateString | null;
  Sstack_CC__Next_Effective_Record__c: string | null;
  Sstack_CC__Number_Of_PTO_Weeks__c: number | null;
  Sstack_CC__Pay_Rate__c: number | null;
  Sstack_CC__Placement_Fee__c: number | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Project__c: string | null;
  Sstack_CC__Resource__c: string | null;
  Sstack_CC__Salary_Amount__c: number | null;
  Sstack_CC__Start_Week_Day__c: DateString | null;
  Sstack_CC__X401K__c: string | null;
  Bill_Rate_Check__c: string | null;
  Sstack_CC__Employee_Type__c: string | null;
  Sstack_CC__Employer__c: string | null;
  Sstack_CC__Opportunity__c: string | null;
  Sstack_CC__Daily_Bill_Rate__c: number | null;
  Sstack_CC__Deal__c: string | null;
  Purchase_Order_Line__c: string | null;
  Resource_ID__c: string | null;
  PO_Status__c: string | null;
  Sstack_CC__Commission_Override__c: number | null;
  Current_Status__c: string | null;
  Sstack_CC__Federal_Sick_Leave__c: string | null;
  Sstack_CC__Bill_Rate_Effective_Date__c: DateString | null;
  Sstack_CC__Commission_Amount__c: number | null;
  Sstack_CC__Bill_Rate_Aging__c: number | null;
  Sstack_CC__Future_Bill_Rate__c: number | null;
  Sstack_CC__Placement_Fee_Amount__c: number | null;
  Sstack_CC__Calculated_Placement_Fee__c: number | null;
};

type ParentReferences$Sstack_CC__JP_Information__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__JP_Information__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__JP_Information__ChangeEvent extends SObjectDefinition<'Sstack_CC__JP_Information__ChangeEvent'> {
    Name: 'Sstack_CC__JP_Information__ChangeEvent';
    Fields: Fields$Sstack_CC__JP_Information__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__JP_Information__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__JP_Information__ChangeEvent;
  }

type Fields$Sstack_CC__JP_Information__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Sstack_CC__JP_Information__History = {
  //
  Parent: SObjectDefinition$Sstack_CC__JP_Information__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Sstack_CC__JP_Information__History = {
  //
};

interface SObjectDefinition$Sstack_CC__JP_Information__History extends SObjectDefinition<'Sstack_CC__JP_Information__History'> {
    Name: 'Sstack_CC__JP_Information__History';
    Fields: Fields$Sstack_CC__JP_Information__History;
    ParentReferences: ParentReferences$Sstack_CC__JP_Information__History;
    ChildRelationships: ChildRelationships$Sstack_CC__JP_Information__History;
  }

type Fields$Sstack_CC__JP_Information__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Sstack_CC__Job_Placement__c: string;
  Sstack_CC__Account_Fee_Expense__c: number | null;
  Sstack_CC__Account_Fee_Revenue__c: number | null;
  Sstack_CC__Bill_Rate__c: number | null;
  Sstack_CC__Client_Payment_Date__c: DateString | null;
  Sstack_CC__Effective_Date__c: DateString | null;
  Sstack_CC__Federal_Holidays__c: string | null;
  Sstack_CC__Health_Benefits__c: string | null;
  Sstack_CC__Manager__c: string | null;
  Sstack_CC__Next_Effective_Date__c: DateString | null;
  Sstack_CC__Next_Effective_Record__c: string | null;
  Sstack_CC__Number_Of_PTO_Weeks__c: number | null;
  Sstack_CC__Pay_Rate__c: number | null;
  Sstack_CC__Placement_Fee__c: number | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Project__c: string | null;
  Sstack_CC__Resource__c: string | null;
  Sstack_CC__Salary_Amount__c: number | null;
  Sstack_CC__Start_Week_Day__c: DateString | null;
  Sstack_CC__X401K__c: string | null;
  Bill_Rate_Check__c: string | null;
  Sstack_CC__Employee_Type__c: string | null;
  Sstack_CC__Employer__c: string | null;
  Sstack_CC__Opportunity__c: string | null;
  Sstack_CC__Daily_Bill_Rate__c: number | null;
  Sstack_CC__Deal__c: string | null;
  Purchase_Order_Line__c: string | null;
  Resource_ID__c: string | null;
  PO_Status__c: string | null;
  Sstack_CC__Commission_Override__c: number | null;
  Current_Status__c: string | null;
  Sstack_CC__Federal_Sick_Leave__c: string | null;
  Sstack_CC__Bill_Rate_Effective_Date__c: DateString | null;
  Sstack_CC__Commission_Amount__c: number | null;
  Sstack_CC__Bill_Rate_Aging__c: number | null;
  Sstack_CC__Future_Bill_Rate__c: number | null;
  Sstack_CC__Placement_Fee_Amount__c: number | null;
  Sstack_CC__Calculated_Placement_Fee__c: number | null;
};

type ParentReferences$Sstack_CC__JP_Information__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c;
  Sstack_CC__Manager__r: SObjectDefinition$Contact | null;
  Sstack_CC__Next_Effective_Record__r: SObjectDefinition$Sstack_CC__JP_Information__c | null;
  Sstack_CC__Opportunity__r: SObjectDefinition$Opportunity | null;
  Sstack_CC__Deal__r: SObjectDefinition$Sstack_CC__Deal__c | null;
  Purchase_Order_Line__r: SObjectDefinition$Purchase_Order_Line__c | null;
};

type ChildRelationships$Sstack_CC__JP_Information__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$Sstack_CC__JP_Information__History;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__JP_Information__c extends SObjectDefinition<'Sstack_CC__JP_Information__c'> {
    Name: 'Sstack_CC__JP_Information__c';
    Fields: Fields$Sstack_CC__JP_Information__c;
    ParentReferences: ParentReferences$Sstack_CC__JP_Information__c;
    ChildRelationships: ChildRelationships$Sstack_CC__JP_Information__c;
  }

type Fields$Sstack_CC__Job_Placement_AM__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Job_Placement__c: string | null;
  Sstack_CC__Account_Manager_Role__c: string | null;
  Sstack_CC__Account_Manager__c: string | null;
  Sstack_CC__Commission_Rate__c: number | null;
};

type ParentReferences$Sstack_CC__Job_Placement_AM__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Job_Placement_AM__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Job_Placement_AM__ChangeEvent extends SObjectDefinition<'Sstack_CC__Job_Placement_AM__ChangeEvent'> {
    Name: 'Sstack_CC__Job_Placement_AM__ChangeEvent';
    Fields: Fields$Sstack_CC__Job_Placement_AM__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Job_Placement_AM__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Job_Placement_AM__ChangeEvent;
  }

type Fields$Sstack_CC__Job_Placement_AM__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Sstack_CC__Job_Placement__c: string;
  Sstack_CC__Account_Manager_Role__c: string;
  Sstack_CC__Account_Manager__c: string | null;
  Sstack_CC__Commission_Rate__c: number;
};

type ParentReferences$Sstack_CC__Job_Placement_AM__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c;
  Sstack_CC__Account_Manager__r: SObjectDefinition$User | null;
};

type ChildRelationships$Sstack_CC__Job_Placement_AM__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Job_Placement_AM__c extends SObjectDefinition<'Sstack_CC__Job_Placement_AM__c'> {
    Name: 'Sstack_CC__Job_Placement_AM__c';
    Fields: Fields$Sstack_CC__Job_Placement_AM__c;
    ParentReferences: ParentReferences$Sstack_CC__Job_Placement_AM__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Job_Placement_AM__c;
  }

type Fields$Sstack_CC__Job_Placement_Recruiter__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Job_Placement__c: string | null;
  Sstack_CC__Commission_Rate__c: number | null;
  Sstack_CC__Contact__c: string | null;
  Sstack_CC__Recruiter_Role__c: string | null;
};

type ParentReferences$Sstack_CC__Job_Placement_Recruiter__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Job_Placement_Recruiter__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Job_Placement_Recruiter__ChangeEvent extends SObjectDefinition<'Sstack_CC__Job_Placement_Recruiter__ChangeEvent'> {
    Name: 'Sstack_CC__Job_Placement_Recruiter__ChangeEvent';
    Fields: Fields$Sstack_CC__Job_Placement_Recruiter__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Job_Placement_Recruiter__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Job_Placement_Recruiter__ChangeEvent;
  }

type Fields$Sstack_CC__Job_Placement_Recruiter__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Sstack_CC__Job_Placement__c: string;
  Sstack_CC__Commission_Rate__c: number;
  Sstack_CC__Contact__c: string;
  Sstack_CC__Recruiter_Role__c: string;
};

type ParentReferences$Sstack_CC__Job_Placement_Recruiter__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c;
  Sstack_CC__Contact__r: SObjectDefinition$Contact;
};

type ChildRelationships$Sstack_CC__Job_Placement_Recruiter__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Job_Placement_Recruiter__c extends SObjectDefinition<'Sstack_CC__Job_Placement_Recruiter__c'> {
    Name: 'Sstack_CC__Job_Placement_Recruiter__c';
    Fields: Fields$Sstack_CC__Job_Placement_Recruiter__c;
    ParentReferences: ParentReferences$Sstack_CC__Job_Placement_Recruiter__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Job_Placement_Recruiter__c;
  }

type Fields$Sstack_CC__Job_Placement__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Approval_Status__c: string | null;
  Sstack_CC__Client__c: string | null;
  Sstack_CC__Contact__c: string | null;
  Sstack_CC__End_Date__c: DateString | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Start_Date__c: DateString | null;
  Sstack_CC__Status__c: string | null;
  Sstack_CC__Account_Manager_Allocated_Commission__c: number | null;
  Sstack_CC__Recruiter_Allocated_Commission__c: number | null;
  Signature__c: string | null;
  Sstack_CC__Target_Start_Date__c: DateString | null;
  Sstack_CC__Opportunity__c: string | null;
  Sstack_CC__Deal__c: string | null;
  Sstack_CC__Client_Name__c: string | null;
  Sstack_CC__Resource_Name__c: string | null;
  Sstack_CC__Discounted_Commission__c: boolean;
  Cohort_Status__c: string | null;
  Sstack_CC__Ready_For_Marketing_Date__c: DateString | null;
  Sstack_CC__Do_not_Send_Notifications__c: boolean;
  Client_Address__Street__s: string | null;
  Client_Address__City__s: string | null;
  Client_Address__PostalCode__s: string | null;
  Client_Address__StateCode__s: string | null;
  Client_Address__CountryCode__s: string | null;
  Client_Address__Latitude__s: number | null;
  Client_Address__Longitude__s: number | null;
  Client_Address__GeocodeAccuracy__s: string | null;
  Client_Address__c: Address | null;
  Work_Location__c: string | null;
  Sstack_CC__AM_BD_Allocated_Commission__c: number | null;
  Sstack_CC__Delivery_Lead_Allocated_Commission__c: number | null;
  Sstack_CC__End_Reason__c: string | null;
};

type ParentReferences$Sstack_CC__Job_Placement__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Job_Placement__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Job_Placement__ChangeEvent extends SObjectDefinition<'Sstack_CC__Job_Placement__ChangeEvent'> {
    Name: 'Sstack_CC__Job_Placement__ChangeEvent';
    Fields: Fields$Sstack_CC__Job_Placement__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Job_Placement__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Job_Placement__ChangeEvent;
  }

type Fields$Sstack_CC__Job_Placement__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Sstack_CC__Job_Placement__History = {
  //
  Parent: SObjectDefinition$Sstack_CC__Job_Placement__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Sstack_CC__Job_Placement__History = {
  //
};

interface SObjectDefinition$Sstack_CC__Job_Placement__History extends SObjectDefinition<'Sstack_CC__Job_Placement__History'> {
    Name: 'Sstack_CC__Job_Placement__History';
    Fields: Fields$Sstack_CC__Job_Placement__History;
    ParentReferences: ParentReferences$Sstack_CC__Job_Placement__History;
    ChildRelationships: ChildRelationships$Sstack_CC__Job_Placement__History;
  }

type Fields$Sstack_CC__Job_Placement__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Sstack_CC__Approval_Status__c: string | null;
  Sstack_CC__Client__c: string | null;
  Sstack_CC__Contact__c: string | null;
  Sstack_CC__End_Date__c: DateString | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Start_Date__c: DateString | null;
  Sstack_CC__Status__c: string | null;
  Sstack_CC__Account_Manager_Allocated_Commission__c: number | null;
  Sstack_CC__Recruiter_Allocated_Commission__c: number | null;
  Signature__c: string | null;
  Sstack_CC__Target_Start_Date__c: DateString | null;
  Sstack_CC__Opportunity__c: string | null;
  Sstack_CC__Deal__c: string | null;
  Sstack_CC__Client_Name__c: string | null;
  Sstack_CC__Resource_Name__c: string | null;
  Sstack_CC__Discounted_Commission__c: boolean;
  Cohort_Status__c: string | null;
  Sstack_CC__Ready_For_Marketing_Date__c: DateString | null;
  Sstack_CC__Do_not_Send_Notifications__c: boolean;
  Client_Address__Street__s: string | null;
  Client_Address__City__s: string | null;
  Client_Address__PostalCode__s: string | null;
  Client_Address__StateCode__s: string | null;
  Client_Address__CountryCode__s: string | null;
  Client_Address__Latitude__s: number | null;
  Client_Address__Longitude__s: number | null;
  Client_Address__GeocodeAccuracy__s: string | null;
  Client_Address__c: Address | null;
  Work_Location__c: string | null;
  Sstack_CC__AM_BD_Allocated_Commission__c: number | null;
  Sstack_CC__Delivery_Lead_Allocated_Commission__c: number | null;
  Sstack_CC__End_Reason__c: string | null;
};

type ParentReferences$Sstack_CC__Job_Placement__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Client__r: SObjectDefinition$Account | null;
  Sstack_CC__Contact__r: SObjectDefinition$Contact | null;
  Sstack_CC__Opportunity__r: SObjectDefinition$Opportunity | null;
  Sstack_CC__Deal__r: SObjectDefinition$Sstack_CC__Deal__c | null;
};

type ChildRelationships$Sstack_CC__Job_Placement__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$Sstack_CC__Job_Placement__History;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Job_Placement__c extends SObjectDefinition<'Sstack_CC__Job_Placement__c'> {
    Name: 'Sstack_CC__Job_Placement__c';
    Fields: Fields$Sstack_CC__Job_Placement__c;
    ParentReferences: ParentReferences$Sstack_CC__Job_Placement__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Job_Placement__c;
  }

type Fields$Sstack_CC__Referrer__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Job_Placement__c: string | null;
  Sstack_CC__Commission_End_Date__c: DateString | null;
  Sstack_CC__Commission_Start_Date__c: DateString | null;
  Sstack_CC__Contact__c: string | null;
  Sstack_CC__End_Date__c: DateString | null;
  Sstack_CC__Frequency__c: string | null;
  Sstack_CC__Payment_Cap__c: string | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Referral_Fee__c: number | null;
};

type ParentReferences$Sstack_CC__Referrer__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Referrer__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Referrer__ChangeEvent extends SObjectDefinition<'Sstack_CC__Referrer__ChangeEvent'> {
    Name: 'Sstack_CC__Referrer__ChangeEvent';
    Fields: Fields$Sstack_CC__Referrer__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Referrer__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Referrer__ChangeEvent;
  }

type Fields$Sstack_CC__Referrer__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Sstack_CC__Job_Placement__c: string;
  Sstack_CC__Commission_End_Date__c: DateString | null;
  Sstack_CC__Commission_Start_Date__c: DateString | null;
  Sstack_CC__Contact__c: string;
  Sstack_CC__End_Date__c: DateString | null;
  Sstack_CC__Frequency__c: string;
  Sstack_CC__Payment_Cap__c: string | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Referral_Fee__c: number;
};

type ParentReferences$Sstack_CC__Referrer__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c;
  Sstack_CC__Contact__r: SObjectDefinition$Contact;
};

type ChildRelationships$Sstack_CC__Referrer__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Referrer__c extends SObjectDefinition<'Sstack_CC__Referrer__c'> {
    Name: 'Sstack_CC__Referrer__c';
    Fields: Fields$Sstack_CC__Referrer__c;
    ParentReferences: ParentReferences$Sstack_CC__Referrer__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Referrer__c;
  }

type Fields$Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Burden__c: number | null;
  Sstack_CC__Effective_Date__c: DateString | null;
  Sstack_CC__Health_Benefit_Cost__c: number | null;
  Sstack_CC__Hours_in_a_Year__c: number | null;
  Sstack_CC__Medicare_Tax__c: number | null;
  Sstack_CC__Number_Of_Federal_Holidays__c: number | null;
  Sstack_CC__Social_Security_Tax__c: number | null;
  Sstack_CC__X401K__c: number | null;
  Sstack_CC__W2_Burden__c: number | null;
  Sstack_CC__X1099_C2C_Burden__c: number | null;
  Sstack_CC__Daily_Bill_Rate_Conversion_Factor__c: number | null;
  Sstack_CC__Federal_Sick_Leave_Hours__c: number | null;
};

type ParentReferences$Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent extends SObjectDefinition<'Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent'> {
    Name: 'Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent';
    Fields: Fields$Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent;
  }

type Fields$Sstack_CC__Staff_Aug_Commission_Variables__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Sstack_CC__Burden__c: number | null;
  Sstack_CC__Effective_Date__c: DateString;
  Sstack_CC__Health_Benefit_Cost__c: number;
  Sstack_CC__Hours_in_a_Year__c: number;
  Sstack_CC__Medicare_Tax__c: number;
  Sstack_CC__Number_Of_Federal_Holidays__c: number;
  Sstack_CC__Social_Security_Tax__c: number;
  Sstack_CC__X401K__c: number;
  Sstack_CC__W2_Burden__c: number;
  Sstack_CC__X1099_C2C_Burden__c: number;
  Sstack_CC__Daily_Bill_Rate_Conversion_Factor__c: number;
  Sstack_CC__Federal_Sick_Leave_Hours__c: number;
};

type ParentReferences$Sstack_CC__Staff_Aug_Commission_Variables__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Sstack_CC__Staff_Aug_Commission_Variables__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Staff_Aug_Commission_Variables__c extends SObjectDefinition<'Sstack_CC__Staff_Aug_Commission_Variables__c'> {
    Name: 'Sstack_CC__Staff_Aug_Commission_Variables__c';
    Fields: Fields$Sstack_CC__Staff_Aug_Commission_Variables__c;
    ParentReferences: ParentReferences$Sstack_CC__Staff_Aug_Commission_Variables__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Staff_Aug_Commission_Variables__c;
  }

type Fields$Sstack_CC__Total_Hours__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Sstack_CC__Job_Placement__c: string | null;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Resource__c: string | null;
  Sstack_CC__Total_Hours__c: number | null;
};

type ParentReferences$Sstack_CC__Total_Hours__ChangeEvent = {
  //
};

type ChildRelationships$Sstack_CC__Total_Hours__ChangeEvent = {
  //
};

interface SObjectDefinition$Sstack_CC__Total_Hours__ChangeEvent extends SObjectDefinition<'Sstack_CC__Total_Hours__ChangeEvent'> {
    Name: 'Sstack_CC__Total_Hours__ChangeEvent';
    Fields: Fields$Sstack_CC__Total_Hours__ChangeEvent;
    ParentReferences: ParentReferences$Sstack_CC__Total_Hours__ChangeEvent;
    ChildRelationships: ChildRelationships$Sstack_CC__Total_Hours__ChangeEvent;
  }

type Fields$Sstack_CC__Total_Hours__History = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$Sstack_CC__Total_Hours__History = {
  //
  Parent: SObjectDefinition$Sstack_CC__Total_Hours__c;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Sstack_CC__Total_Hours__History = {
  //
};

interface SObjectDefinition$Sstack_CC__Total_Hours__History extends SObjectDefinition<'Sstack_CC__Total_Hours__History'> {
    Name: 'Sstack_CC__Total_Hours__History';
    Fields: Fields$Sstack_CC__Total_Hours__History;
    ParentReferences: ParentReferences$Sstack_CC__Total_Hours__History;
    ChildRelationships: ChildRelationships$Sstack_CC__Total_Hours__History;
  }

type Fields$Sstack_CC__Total_Hours__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  Sstack_CC__Job_Placement__c: string;
  Sstack_CC__Placement_Type__c: string | null;
  Sstack_CC__Resource__c: string | null;
  Sstack_CC__Total_Hours__c: number | null;
};

type ParentReferences$Sstack_CC__Total_Hours__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Sstack_CC__Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c;
  Sstack_CC__Resource__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Sstack_CC__Total_Hours__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  Histories: SObjectDefinition$Sstack_CC__Total_Hours__History;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Sstack_CC__Total_Hours__c extends SObjectDefinition<'Sstack_CC__Total_Hours__c'> {
    Name: 'Sstack_CC__Total_Hours__c';
    Fields: Fields$Sstack_CC__Total_Hours__c;
    ParentReferences: ParentReferences$Sstack_CC__Total_Hours__c;
    ChildRelationships: ChildRelationships$Sstack_CC__Total_Hours__c;
  }

type Fields$Sstack_CC__Trigger_Settings__mdt = {
  //
  Id: string;
  DeveloperName: string;
  MasterLabel: string;
  Language: string;
  NamespacePrefix: string | null;
  Label: string | null;
  QualifiedApiName: string | null;
  Sstack_CC__Disabled__c: boolean;
};

type ParentReferences$Sstack_CC__Trigger_Settings__mdt = {
  //
};

type ChildRelationships$Sstack_CC__Trigger_Settings__mdt = {
  //
};

interface SObjectDefinition$Sstack_CC__Trigger_Settings__mdt extends SObjectDefinition<'Sstack_CC__Trigger_Settings__mdt'> {
    Name: 'Sstack_CC__Trigger_Settings__mdt';
    Fields: Fields$Sstack_CC__Trigger_Settings__mdt;
    ParentReferences: ParentReferences$Sstack_CC__Trigger_Settings__mdt;
    ChildRelationships: ChildRelationships$Sstack_CC__Trigger_Settings__mdt;
  }

type Fields$Stamp = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Description: string | null;
};

type ParentReferences$Stamp = {
  //
  Parent: SObjectDefinition$Organization;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Stamp = {
  //
  CustomBrands: SObjectDefinition$CustomBrand;
};

interface SObjectDefinition$Stamp extends SObjectDefinition<'Stamp'> {
    Name: 'Stamp';
    Fields: Fields$Stamp;
    ParentReferences: ParentReferences$Stamp;
    ChildRelationships: ChildRelationships$Stamp;
  }

type Fields$StampAssignment = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  StampId: string;
  SubjectId: string;
};

type ParentReferences$StampAssignment = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Stamp: SObjectDefinition$Stamp;
  Subject: SObjectDefinition$User;
};

type ChildRelationships$StampAssignment = {
  //
};

interface SObjectDefinition$StampAssignment extends SObjectDefinition<'StampAssignment'> {
    Name: 'StampAssignment';
    Fields: Fields$StampAssignment;
    ParentReferences: ParentReferences$StampAssignment;
    ChildRelationships: ChildRelationships$StampAssignment;
  }

type Fields$StaticResource = {
  //
  Id: string;
  NamespacePrefix: string | null;
  Name: string;
  ContentType: string;
  BodyLength: number;
  Body: BlobString | null;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CacheControl: string;
};

type ParentReferences$StaticResource = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$StaticResource = {
  //
};

interface SObjectDefinition$StaticResource extends SObjectDefinition<'StaticResource'> {
    Name: 'StaticResource';
    Fields: Fields$StaticResource;
    ParentReferences: ParentReferences$StaticResource;
    ChildRelationships: ChildRelationships$StaticResource;
  }

type Fields$StreamingChannel = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsDynamic: boolean;
  Description: string | null;
};

type ParentReferences$StreamingChannel = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$StreamingChannel = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$StreamingChannelShare;
};

interface SObjectDefinition$StreamingChannel extends SObjectDefinition<'StreamingChannel'> {
    Name: 'StreamingChannel';
    Fields: Fields$StreamingChannel;
    ParentReferences: ParentReferences$StreamingChannel;
    ChildRelationships: ChildRelationships$StreamingChannel;
  }

type Fields$StreamingChannelShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$StreamingChannelShare = {
  //
  Parent: SObjectDefinition$StreamingChannel;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$StreamingChannelShare = {
  //
};

interface SObjectDefinition$StreamingChannelShare extends SObjectDefinition<'StreamingChannelShare'> {
    Name: 'StreamingChannelShare';
    Fields: Fields$StreamingChannelShare;
    ParentReferences: ParentReferences$StreamingChannelShare;
    ChildRelationships: ChildRelationships$StreamingChannelShare;
  }

type Fields$Survey = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  TotalVersionsCount: number | null;
  DeveloperName: string;
  Description: string | null;
  ActiveVersionId: string | null;
  SurveyType: string | null;
  LatestVersionId: string | null;
  NamespacePrefix: string | null;
};

type ParentReferences$Survey = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ActiveVersion: SObjectDefinition$SurveyVersion | null;
  LatestVersion: SObjectDefinition$SurveyVersion | null;
};

type ChildRelationships$Survey = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Feeds: SObjectDefinition$SurveyFeed;
  SurveyInvitations: SObjectDefinition$SurveyInvitation;
  SurveyQuestionScores: SObjectDefinition$SurveyQuestionScore;
  SurveyResponses: SObjectDefinition$SurveyResponse;
  Shares: SObjectDefinition$SurveyShare;
  SurveySubjects: SObjectDefinition$SurveySubject;
  SurveyVersions: SObjectDefinition$SurveyVersion;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Survey extends SObjectDefinition<'Survey'> {
    Name: 'Survey';
    Fields: Fields$Survey;
    ParentReferences: ParentReferences$Survey;
    ChildRelationships: ChildRelationships$Survey;
  }

type Fields$SurveyEmailBranding = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Subject: string;
  Body: string;
  FromEmailAddress: string | null;
  HeaderImageId: string | null;
  FooterImageId: string | null;
};

type ParentReferences$SurveyEmailBranding = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  HeaderImage: SObjectDefinition$ContentAsset | null;
  FooterImage: SObjectDefinition$ContentAsset | null;
};

type ChildRelationships$SurveyEmailBranding = {
  //
};

interface SObjectDefinition$SurveyEmailBranding extends SObjectDefinition<'SurveyEmailBranding'> {
    Name: 'SurveyEmailBranding';
    Fields: Fields$SurveyEmailBranding;
    ParentReferences: ParentReferences$SurveyEmailBranding;
    ChildRelationships: ChildRelationships$SurveyEmailBranding;
  }

type Fields$SurveyEngagementContext = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SurveyInvitationId: string | null;
  SurveyResponseId: string | null;
  ContextType: string | null;
  ContextValue: string | null;
};

type ParentReferences$SurveyEngagementContext = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SurveyInvitation: SObjectDefinition$SurveyInvitation | null;
  SurveyResponse: SObjectDefinition$SurveyResponse | null;
};

type ChildRelationships$SurveyEngagementContext = {
  //
  Shares: SObjectDefinition$SurveyEngagementContextShare;
};

interface SObjectDefinition$SurveyEngagementContext extends SObjectDefinition<'SurveyEngagementContext'> {
    Name: 'SurveyEngagementContext';
    Fields: Fields$SurveyEngagementContext;
    ParentReferences: ParentReferences$SurveyEngagementContext;
    ChildRelationships: ChildRelationships$SurveyEngagementContext;
  }

type Fields$SurveyEngagementContextShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$SurveyEngagementContextShare = {
  //
  Parent: SObjectDefinition$SurveyEngagementContext;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SurveyEngagementContextShare = {
  //
};

interface SObjectDefinition$SurveyEngagementContextShare extends SObjectDefinition<'SurveyEngagementContextShare'> {
    Name: 'SurveyEngagementContextShare';
    Fields: Fields$SurveyEngagementContextShare;
    ParentReferences: ParentReferences$SurveyEngagementContextShare;
    ChildRelationships: ChildRelationships$SurveyEngagementContextShare;
  }

type Fields$SurveyFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$SurveyFeed = {
  //
  Parent: SObjectDefinition$Survey;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$SurveyFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$SurveyFeed extends SObjectDefinition<'SurveyFeed'> {
    Name: 'SurveyFeed';
    Fields: Fields$SurveyFeed;
    ParentReferences: ParentReferences$SurveyFeed;
    ChildRelationships: ChildRelationships$SurveyFeed;
  }

type Fields$SurveyInvitation = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  SurveyId: string;
  ParticipantId: string | null;
  OptionsAllowParticipantAccessTheirResponse: boolean;
  OptionsCollectAnonymousResponse: boolean;
  OptionsAllowGuestUserResponse: boolean;
  InvitationLink: string | null;
  EmailBrandingId: string | null;
  InviteExpiryDateTime: DateString | null;
  IsDefault: boolean;
  UUID: string | null;
  ResponseStatus: string;
  UserId: string | null;
  LeadId: string | null;
  ContactId: string | null;
};

type ParentReferences$SurveyInvitation = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Survey: SObjectDefinition$Survey;
  Participant: SObjectDefinition$Name | null;
  EmailBranding: SObjectDefinition$SurveyEmailBranding | null;
  User: SObjectDefinition$User | null;
  Lead: SObjectDefinition$Lead | null;
  Contact: SObjectDefinition$Contact | null;
};

type ChildRelationships$SurveyInvitation = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$SurveyInvitationShare;
  SurveyQuestionScores: SObjectDefinition$SurveyQuestionScore;
  SurveyResponses: SObjectDefinition$SurveyResponse;
  SurveySubjects: SObjectDefinition$SurveySubject;
  SurveySubjectInvitation: SObjectDefinition$SurveySubject;
};

interface SObjectDefinition$SurveyInvitation extends SObjectDefinition<'SurveyInvitation'> {
    Name: 'SurveyInvitation';
    Fields: Fields$SurveyInvitation;
    ParentReferences: ParentReferences$SurveyInvitation;
    ChildRelationships: ChildRelationships$SurveyInvitation;
  }

type Fields$SurveyInvitationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$SurveyInvitationShare = {
  //
  Parent: SObjectDefinition$SurveyInvitation;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SurveyInvitationShare = {
  //
};

interface SObjectDefinition$SurveyInvitationShare extends SObjectDefinition<'SurveyInvitationShare'> {
    Name: 'SurveyInvitationShare';
    Fields: Fields$SurveyInvitationShare;
    ParentReferences: ParentReferences$SurveyInvitationShare;
    ChildRelationships: ChildRelationships$SurveyInvitationShare;
  }

type Fields$SurveyPage = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SurveyVersionId: string;
  DeveloperName: string;
};

type ParentReferences$SurveyPage = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SurveyVersion: SObjectDefinition$SurveyVersion;
};

type ChildRelationships$SurveyPage = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  SurveyPageQuestions: SObjectDefinition$SurveyQuestion;
};

interface SObjectDefinition$SurveyPage extends SObjectDefinition<'SurveyPage'> {
    Name: 'SurveyPage';
    Fields: Fields$SurveyPage;
    ParentReferences: ParentReferences$SurveyPage;
    ChildRelationships: ChildRelationships$SurveyPage;
  }

type Fields$SurveyQuestion = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SurveyVersionId: string;
  SurveyPageId: string;
  QuestionType: string;
  DeveloperName: string;
  IsDeprecated: boolean;
  QuestionName: string | null;
};

type ParentReferences$SurveyQuestion = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SurveyVersion: SObjectDefinition$SurveyVersion;
  SurveyPage: SObjectDefinition$SurveyPage;
};

type ChildRelationships$SurveyQuestion = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  Emails: SObjectDefinition$EmailMessage;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  OpenActivities: SObjectDefinition$OpenActivity;
  QuestionChoices: SObjectDefinition$SurveyQuestionChoice;
  SurveyQuestionResponses: SObjectDefinition$SurveyQuestionResponse;
  SurveyQuestionScores: SObjectDefinition$SurveyQuestionScore;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$SurveyQuestion extends SObjectDefinition<'SurveyQuestion'> {
    Name: 'SurveyQuestion';
    Fields: Fields$SurveyQuestion;
    ParentReferences: ParentReferences$SurveyQuestion;
    ChildRelationships: ChildRelationships$SurveyQuestion;
  }

type Fields$SurveyQuestionChoice = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  QuestionId: string;
  SurveyVersionId: string | null;
  DeveloperName: string;
  IsDeprecated: boolean;
};

type ParentReferences$SurveyQuestionChoice = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Question: SObjectDefinition$SurveyQuestion;
  SurveyVersion: SObjectDefinition$SurveyVersion | null;
};

type ChildRelationships$SurveyQuestionChoice = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  SurveyQuestionScores: SObjectDefinition$SurveyQuestionScore;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$SurveyQuestionChoice extends SObjectDefinition<'SurveyQuestionChoice'> {
    Name: 'SurveyQuestionChoice';
    Fields: Fields$SurveyQuestionChoice;
    ParentReferences: ParentReferences$SurveyQuestionChoice;
    ChildRelationships: ChildRelationships$SurveyQuestionChoice;
  }

type Fields$SurveyQuestionResponse = {
  //
  Id: string;
  IsDeleted: boolean;
  ResponseShortText: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ResponseId: string;
  QuestionId: string | null;
  QuestionChoiceId: string | null;
  SurveyVersionId: string;
  InvitationId: string | null;
  Datatype: string | null;
  Rank: number | null;
  DateValue: DateString | null;
  DateTimeValue: DateString | null;
  ChoiceValue: string | null;
  ResponseValue: string | null;
  IsTrueOrFalse: boolean;
  NumberValue: number | null;
};

type ParentReferences$SurveyQuestionResponse = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Response: SObjectDefinition$SurveyResponse;
  Question: SObjectDefinition$SurveyQuestion | null;
  QuestionChoice: SObjectDefinition$SurveyQuestionChoice | null;
  SurveyVersion: SObjectDefinition$SurveyVersion;
  Invitation: SObjectDefinition$SurveyInvitation | null;
};

type ChildRelationships$SurveyQuestionResponse = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$SurveyQuestionResponse extends SObjectDefinition<'SurveyQuestionResponse'> {
    Name: 'SurveyQuestionResponse';
    Fields: Fields$SurveyQuestionResponse;
    ParentReferences: ParentReferences$SurveyQuestionResponse;
    ChildRelationships: ChildRelationships$SurveyQuestionResponse;
  }

type Fields$SurveyQuestionScore = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SurveyId: string;
  SurveyVersionId: string;
  SurveyInvitationId: string | null;
  QuestionId: string | null;
  QuestionChoiceId: string | null;
  QuestionName: string | null;
  ResponseValue: number | null;
  Score: number | null;
  ResponseCount: number | null;
  ScoreType: string | null;
  QuestionSkippedCount: number | null;
  DateResponse: DateString | null;
  QuestionDeveloperName: string | null;
  CumulativeScore: number | null;
};

type ParentReferences$SurveyQuestionScore = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Survey: SObjectDefinition$Survey;
  SurveyVersion: SObjectDefinition$SurveyVersion;
  SurveyInvitation: SObjectDefinition$SurveyInvitation | null;
  Question: SObjectDefinition$SurveyQuestion | null;
  QuestionChoice: SObjectDefinition$SurveyQuestionChoice | null;
};

type ChildRelationships$SurveyQuestionScore = {
  //
};

interface SObjectDefinition$SurveyQuestionScore extends SObjectDefinition<'SurveyQuestionScore'> {
    Name: 'SurveyQuestionScore';
    Fields: Fields$SurveyQuestionScore;
    ParentReferences: ParentReferences$SurveyQuestionScore;
    ChildRelationships: ChildRelationships$SurveyQuestionScore;
  }

type Fields$SurveyResponse = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  InvitationId: string;
  InterviewId: string | null;
  InterviewGuid: string | null;
  SubmitterId: string | null;
  Status: string;
  Language: string | null;
  CompletionDateTime: DateString | null;
  IpAddress: string | null;
  Latitude: number | null;
  Longitude: number | null;
  Location: string | null;
  SurveyVersionId: string;
  SurveyId: string;
};

type ParentReferences$SurveyResponse = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Invitation: SObjectDefinition$SurveyInvitation;
  Interview: SObjectDefinition$FlowInterview | null;
  Submitter: SObjectDefinition$Name | null;
  SurveyVersion: SObjectDefinition$SurveyVersion;
  Survey: SObjectDefinition$Survey;
};

type ChildRelationships$SurveyResponse = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  SurveyQuestionResponses: SObjectDefinition$SurveyQuestionResponse;
  SurveySubjects: SObjectDefinition$SurveySubject;
  SurveySubjectResponse: SObjectDefinition$SurveySubject;
};

interface SObjectDefinition$SurveyResponse extends SObjectDefinition<'SurveyResponse'> {
    Name: 'SurveyResponse';
    Fields: Fields$SurveyResponse;
    ParentReferences: ParentReferences$SurveyResponse;
    ChildRelationships: ChildRelationships$SurveyResponse;
  }

type Fields$SurveyShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$SurveyShare = {
  //
  Parent: SObjectDefinition$Survey;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$SurveyShare = {
  //
};

interface SObjectDefinition$SurveyShare extends SObjectDefinition<'SurveyShare'> {
    Name: 'SurveyShare';
    Fields: Fields$SurveyShare;
    ParentReferences: ParentReferences$SurveyShare;
    ChildRelationships: ChildRelationships$SurveyShare;
  }

type Fields$SurveySubject = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  ParentId: string;
  SubjectId: string;
  SurveyId: string;
  SubjectEntityType: string | null;
  SurveyResponseId: string | null;
  SurveyInvitationId: string | null;
};

type ParentReferences$SurveySubject = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$Name;
  Subject: SObjectDefinition$Name;
  Survey: SObjectDefinition$Survey;
  SurveyResponse: SObjectDefinition$SurveyResponse | null;
  SurveyInvitation: SObjectDefinition$SurveyInvitation | null;
};

type ChildRelationships$SurveySubject = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
};

interface SObjectDefinition$SurveySubject extends SObjectDefinition<'SurveySubject'> {
    Name: 'SurveySubject';
    Fields: Fields$SurveySubject;
    ParentReferences: ParentReferences$SurveySubject;
    ChildRelationships: ChildRelationships$SurveySubject;
  }

type Fields$SurveyVersion = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  SurveyId: string;
  VersionNumber: number;
  SurveyStatus: string | null;
  BrandingSetId: string | null;
  Description: string | null;
  IsTemplate: boolean;
};

type ParentReferences$SurveyVersion = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Survey: SObjectDefinition$Survey;
  BrandingSet: SObjectDefinition$BrandingSet | null;
};

type ChildRelationships$SurveyVersion = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  SurveyPages: SObjectDefinition$SurveyPage;
  SurveyQuestions: SObjectDefinition$SurveyQuestion;
  SurveyQuestionScores: SObjectDefinition$SurveyQuestionScore;
  SurveyResponses: SObjectDefinition$SurveyResponse;
};

interface SObjectDefinition$SurveyVersion extends SObjectDefinition<'SurveyVersion'> {
    Name: 'SurveyVersion';
    Fields: Fields$SurveyVersion;
    ParentReferences: ParentReferences$SurveyVersion;
    ChildRelationships: ChildRelationships$SurveyVersion;
  }

type Fields$SurveyVersionAddlInfo = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SurveyVersionId: string;
  SurveyQuestionId: string | null;
  EmailTemplateId: string | null;
  Language: string | null;
  InvitationSharingRole: string | null;
};

type ParentReferences$SurveyVersionAddlInfo = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SurveyVersion: SObjectDefinition$SurveyVersion;
  SurveyQuestion: SObjectDefinition$SurveyQuestion | null;
  EmailTemplate: SObjectDefinition$EmailTemplate | null;
};

type ChildRelationships$SurveyVersionAddlInfo = {
  //
};

interface SObjectDefinition$SurveyVersionAddlInfo extends SObjectDefinition<'SurveyVersionAddlInfo'> {
    Name: 'SurveyVersionAddlInfo';
    Fields: Fields$SurveyVersionAddlInfo;
    ParentReferences: ParentReferences$SurveyVersionAddlInfo;
    ChildRelationships: ChildRelationships$SurveyVersionAddlInfo;
  }

type Fields$TabDefinition = {
  //
  Id: string;
  DurableId: string | null;
  Name: string | null;
  Label: string | null;
  IsCustom: boolean;
  SobjectName: string | null;
  Url: string | null;
  IsAvailableInAloha: boolean;
  IsAvailableInLightning: boolean;
  IsAvailableInMobile: boolean;
  IsAvailableInDesktop: boolean;
  MobileUrl: string | null;
};

type ParentReferences$TabDefinition = {
  //
};

type ChildRelationships$TabDefinition = {
  //
  AppTabs: SObjectDefinition$AppTabMember;
  Colors: SObjectDefinition$ColorDefinition;
  Icons: SObjectDefinition$IconDefinition;
};

interface SObjectDefinition$TabDefinition extends SObjectDefinition<'TabDefinition'> {
    Name: 'TabDefinition';
    Fields: Fields$TabDefinition;
    ParentReferences: ParentReferences$TabDefinition;
    ChildRelationships: ChildRelationships$TabDefinition;
  }

type Fields$Task = {
  //
  Id: string;
  RecordTypeId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  WhoCount: number | null;
  WhatCount: number | null;
  Subject: string | null;
  ActivityDate: DateString | null;
  Status: string;
  Priority: string;
  IsHighPriority: boolean;
  OwnerId: string;
  Description: string | null;
  Type: string | null;
  IsDeleted: boolean;
  AccountId: string | null;
  IsClosed: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsArchived: boolean;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  RecurrenceActivityId: string | null;
  IsRecurrence: boolean;
  RecurrenceStartDateOnly: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceTimeZoneSidKey: string | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
  RecurrenceRegeneratedType: string | null;
  TaskSubtype: string | null;
  CompletedDateTime: DateString | null;
  rcsfl__CALL_UNIQUE_ID__c: string | null;
  rcsfl__CALL_UUID__c: string | null;
  rcsfl__Call_Recording__c: string | null;
  rcsfl__RC_Logging_Type__c: string | null;
  rcsfl__Recording_Information__c: string | null;
  rcsfl__external_whoid__c: string | null;
  rcsfl__hvs_disposition__c: string | null;
  rcsfl__key__c: string | null;
  DB_Activity_Type__c: string | null;
  task_type__c: string | null;
  Outreach_Task_Type__c: string | null;
};

type ParentReferences$Task = {
  //
  RecordType: SObjectDefinition$RecordType | null;
  Who: SObjectDefinition$Name | null;
  What: SObjectDefinition$Name | null;
  Owner: SObjectDefinition$Name;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Task = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  RecurringTasks: SObjectDefinition$Task;
  Feeds: SObjectDefinition$TaskFeed;
  TaskRelations: SObjectDefinition$TaskRelation;
  TaskWhoRelations: SObjectDefinition$TaskWhoRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Task extends SObjectDefinition<'Task'> {
    Name: 'Task';
    Fields: Fields$Task;
    ParentReferences: ParentReferences$Task;
    ChildRelationships: ChildRelationships$Task;
  }

type Fields$TaskChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  RecordTypeId: string | null;
  WhoId: string | null;
  WhatId: string | null;
  WhoCount: number | null;
  WhatCount: number | null;
  Subject: string | null;
  ActivityDate: DateString | null;
  Status: string | null;
  Priority: string | null;
  OwnerId: string | null;
  Description: string | null;
  Type: string | null;
  AccountId: string | null;
  IsClosed: boolean;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  CallDurationInSeconds: number | null;
  CallType: string | null;
  CallDisposition: string | null;
  CallObject: string | null;
  ReminderDateTime: DateString | null;
  IsReminderSet: boolean;
  RecurrenceActivityId: string | null;
  IsRecurrence: boolean;
  RecurrenceStartDateOnly: DateString | null;
  RecurrenceEndDateOnly: DateString | null;
  RecurrenceTimeZoneSidKey: string | null;
  RecurrenceType: string | null;
  RecurrenceInterval: number | null;
  RecurrenceDayOfWeekMask: number | null;
  RecurrenceDayOfMonth: number | null;
  RecurrenceInstance: string | null;
  RecurrenceMonthOfYear: string | null;
  RecurrenceRegeneratedType: string | null;
  CompletedDateTime: DateString | null;
  rcsfl__CALL_UNIQUE_ID__c: string | null;
  rcsfl__CALL_UUID__c: string | null;
  rcsfl__Call_Recording__c: string | null;
  rcsfl__RC_Logging_Type__c: string | null;
  rcsfl__Recording_Information__c: string | null;
  rcsfl__external_whoid__c: string | null;
  rcsfl__hvs_disposition__c: string | null;
  rcsfl__key__c: string | null;
  DB_Activity_Type__c: string | null;
  task_type__c: string | null;
  Outreach_Task_Type__c: string | null;
};

type ParentReferences$TaskChangeEvent = {
  //
};

type ChildRelationships$TaskChangeEvent = {
  //
};

interface SObjectDefinition$TaskChangeEvent extends SObjectDefinition<'TaskChangeEvent'> {
    Name: 'TaskChangeEvent';
    Fields: Fields$TaskChangeEvent;
    ParentReferences: ParentReferences$TaskChangeEvent;
    ChildRelationships: ChildRelationships$TaskChangeEvent;
  }

type Fields$TaskFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$TaskFeed = {
  //
  Parent: SObjectDefinition$Task;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$TaskFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$TaskFeed extends SObjectDefinition<'TaskFeed'> {
    Name: 'TaskFeed';
    Fields: Fields$TaskFeed;
    ParentReferences: ParentReferences$TaskFeed;
    ChildRelationships: ChildRelationships$TaskFeed;
  }

type Fields$TaskPriority = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsHighPriority: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$TaskPriority = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TaskPriority = {
  //
};

interface SObjectDefinition$TaskPriority extends SObjectDefinition<'TaskPriority'> {
    Name: 'TaskPriority';
    Fields: Fields$TaskPriority;
    ParentReferences: ParentReferences$TaskPriority;
    ChildRelationships: ChildRelationships$TaskPriority;
  }

type Fields$TaskRelation = {
  //
  Id: string;
  RelationId: string;
  TaskId: string;
  IsWhat: boolean;
  AccountId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
};

type ParentReferences$TaskRelation = {
  //
  Relation: SObjectDefinition$Name;
  Task: SObjectDefinition$Task;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TaskRelation = {
  //
};

interface SObjectDefinition$TaskRelation extends SObjectDefinition<'TaskRelation'> {
    Name: 'TaskRelation';
    Fields: Fields$TaskRelation;
    ParentReferences: ParentReferences$TaskRelation;
    ChildRelationships: ChildRelationships$TaskRelation;
  }

type Fields$TaskRelationChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  RelationId: string | null;
  TaskId: string | null;
  IsWhat: boolean;
  AccountId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$TaskRelationChangeEvent = {
  //
};

type ChildRelationships$TaskRelationChangeEvent = {
  //
};

interface SObjectDefinition$TaskRelationChangeEvent extends SObjectDefinition<'TaskRelationChangeEvent'> {
    Name: 'TaskRelationChangeEvent';
    Fields: Fields$TaskRelationChangeEvent;
    ParentReferences: ParentReferences$TaskRelationChangeEvent;
    ChildRelationships: ChildRelationships$TaskRelationChangeEvent;
  }

type Fields$TaskStatus = {
  //
  Id: string;
  MasterLabel: string | null;
  ApiName: string;
  SortOrder: number | null;
  IsDefault: boolean;
  IsClosed: boolean;
  CreatedById: string;
  CreatedDate: DateString;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$TaskStatus = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TaskStatus = {
  //
};

interface SObjectDefinition$TaskStatus extends SObjectDefinition<'TaskStatus'> {
    Name: 'TaskStatus';
    Fields: Fields$TaskStatus;
    ParentReferences: ParentReferences$TaskStatus;
    ChildRelationships: ChildRelationships$TaskStatus;
  }

type Fields$TaskWhoRelation = {
  //
  Id: string;
  RelationId: string | null;
  TaskId: string | null;
  AccountId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$TaskWhoRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Task: SObjectDefinition$Task | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TaskWhoRelation = {
  //
};

interface SObjectDefinition$TaskWhoRelation extends SObjectDefinition<'TaskWhoRelation'> {
    Name: 'TaskWhoRelation';
    Fields: Fields$TaskWhoRelation;
    ParentReferences: ParentReferences$TaskWhoRelation;
    ChildRelationships: ChildRelationships$TaskWhoRelation;
  }

type Fields$TenantUsageEntitlement = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ResourceGroupKey: string;
  Setting: string;
  StartDate: DateString;
  EndDate: DateString | null;
  CurrentAmountAllowed: number;
  Frequency: string | null;
  IsPersistentResource: boolean;
  HasRollover: boolean;
  OverageGrace: number | null;
  AmountUsed: number | null;
  UsageDate: DateString | null;
  MasterLabel: string | null;
};

type ParentReferences$TenantUsageEntitlement = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TenantUsageEntitlement = {
  //
};

interface SObjectDefinition$TenantUsageEntitlement extends SObjectDefinition<'TenantUsageEntitlement'> {
    Name: 'TenantUsageEntitlement';
    Fields: Fields$TenantUsageEntitlement;
    ParentReferences: ParentReferences$TenantUsageEntitlement;
    ChildRelationships: ChildRelationships$TenantUsageEntitlement;
  }

type Fields$TestSuiteMembership = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ApexTestSuiteId: string;
  ApexClassId: string;
};

type ParentReferences$TestSuiteMembership = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ApexTestSuite: SObjectDefinition$ApexTestSuite;
  ApexClass: SObjectDefinition$ApexClass;
};

type ChildRelationships$TestSuiteMembership = {
  //
};

interface SObjectDefinition$TestSuiteMembership extends SObjectDefinition<'TestSuiteMembership'> {
    Name: 'TestSuiteMembership';
    Fields: Fields$TestSuiteMembership;
    ParentReferences: ParentReferences$TestSuiteMembership;
    ChildRelationships: ChildRelationships$TestSuiteMembership;
  }

type Fields$ThirdPartyAccountLink = {
  //
  Id: string;
  ThirdPartyAccountLinkKey: string | null;
  UserId: string | null;
  SsoProviderId: string | null;
  Handle: string | null;
  RemoteIdentifier: string | null;
  Provider: string | null;
  SsoProviderName: string | null;
  IsNotSsoUsable: boolean;
};

type ParentReferences$ThirdPartyAccountLink = {
  //
  User: SObjectDefinition$User | null;
  SsoProvider: SObjectDefinition$AuthProvider | null;
};

type ChildRelationships$ThirdPartyAccountLink = {
  //
};

interface SObjectDefinition$ThirdPartyAccountLink extends SObjectDefinition<'ThirdPartyAccountLink'> {
    Name: 'ThirdPartyAccountLink';
    Fields: Fields$ThirdPartyAccountLink;
    ParentReferences: ParentReferences$ThirdPartyAccountLink;
    ChildRelationships: ChildRelationships$ThirdPartyAccountLink;
  }

type Fields$TimeSlot = {
  //
  Id: string;
  IsDeleted: boolean;
  TimeSlotNumber: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  OperatingHoursId: string;
  DayOfWeek: string;
  Type: string;
  StartTime: DateString;
  EndTime: DateString;
};

type ParentReferences$TimeSlot = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  OperatingHours: SObjectDefinition$OperatingHours;
};

type ChildRelationships$TimeSlot = {
  //
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
};

interface SObjectDefinition$TimeSlot extends SObjectDefinition<'TimeSlot'> {
    Name: 'TimeSlot';
    Fields: Fields$TimeSlot;
    ParentReferences: ParentReferences$TimeSlot;
    ChildRelationships: ChildRelationships$TimeSlot;
  }

type Fields$Timesheet_File__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Timesheet__c: string | null;
};

type ParentReferences$Timesheet_File__ChangeEvent = {
  //
};

type ChildRelationships$Timesheet_File__ChangeEvent = {
  //
};

interface SObjectDefinition$Timesheet_File__ChangeEvent extends SObjectDefinition<'Timesheet_File__ChangeEvent'> {
    Name: 'Timesheet_File__ChangeEvent';
    Fields: Fields$Timesheet_File__ChangeEvent;
    ParentReferences: ParentReferences$Timesheet_File__ChangeEvent;
    ChildRelationships: ChildRelationships$Timesheet_File__ChangeEvent;
  }

type Fields$Timesheet_File__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Timesheet__c: string | null;
};

type ParentReferences$Timesheet_File__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Timesheet__r: SObjectDefinition$Timesheet__c | null;
};

type ChildRelationships$Timesheet_File__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Timesheet_File__c extends SObjectDefinition<'Timesheet_File__c'> {
    Name: 'Timesheet_File__c';
    Fields: Fields$Timesheet_File__c;
    ParentReferences: ParentReferences$Timesheet_File__c;
    ChildRelationships: ChildRelationships$Timesheet_File__c;
  }

type Fields$Timesheet_Line__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Timesheet__c: string | null;
  ADP_Code__c: string | null;
  ADP_Sub_Category__c: string | null;
  Approval_Frequency__c: string | null;
  Day_1__c: number | null;
  Day_2__c: number | null;
  Day_3__c: number | null;
  Day_4__c: number | null;
  Day_5__c: number | null;
  Day_6__c: number | null;
  Day_7__c: number | null;
  External_Approval_Status_Updated_At__c: DateString | null;
  External_Approval_Status__c: string | null;
  External_Approval_Token__c: string | null;
  Is_Latest_Version__c: boolean;
  Job_Placement_Type__c: string | null;
  Job_Placement__c: string | null;
  Manager_2__c: string | null;
  Manager__c: string | null;
  Planned_End_Date__c: DateString | null;
  Rejection_Reason__c: string | null;
  Same_Hours_Explanation__c: string | null;
  Send_to_External_Manager_Date__c: DateString | null;
  Status__c: string | null;
  Type__c: string | null;
  Unlock_Reason__c: string | null;
  Version__c: number | null;
  Versions_Group_Id__c: string | null;
  Was_Sent_to_External_Manager_At__c: DateString | null;
  Was_Sent_to_External_Manager_History__c: string | null;
  Total_Hours__c: number | null;
  NBP_Name__c: string | null;
  Project_Name__c: string | null;
  Start_Date__c: DateString | null;
  Unexcused_Absence_Details__c: string | null;
  Manager_User__c: string | null;
  Is_Billable__c: boolean;
  Override_Details__c: string | null;
  Manager_3__c: string | null;
  End_Date__c: DateString | null;
  PTO_Type__c: string | null;
};

type ParentReferences$Timesheet_Line__ChangeEvent = {
  //
};

type ChildRelationships$Timesheet_Line__ChangeEvent = {
  //
};

interface SObjectDefinition$Timesheet_Line__ChangeEvent extends SObjectDefinition<'Timesheet_Line__ChangeEvent'> {
    Name: 'Timesheet_Line__ChangeEvent';
    Fields: Fields$Timesheet_Line__ChangeEvent;
    ParentReferences: ParentReferences$Timesheet_Line__ChangeEvent;
    ChildRelationships: ChildRelationships$Timesheet_Line__ChangeEvent;
  }

type Fields$Timesheet_Line__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  Timesheet__c: string;
  ADP_Code__c: string | null;
  ADP_Sub_Category__c: string | null;
  Approval_Frequency__c: string | null;
  Day_1__c: number | null;
  Day_2__c: number | null;
  Day_3__c: number | null;
  Day_4__c: number | null;
  Day_5__c: number | null;
  Day_6__c: number | null;
  Day_7__c: number | null;
  External_Approval_Status_Updated_At__c: DateString | null;
  External_Approval_Status__c: string | null;
  External_Approval_Token__c: string | null;
  Is_Latest_Version__c: boolean;
  Job_Placement_Type__c: string | null;
  Job_Placement__c: string | null;
  Manager_2__c: string | null;
  Manager__c: string | null;
  Planned_End_Date__c: DateString | null;
  Rejection_Reason__c: string | null;
  Same_Hours_Explanation__c: string | null;
  Send_to_External_Manager_Date__c: DateString | null;
  Status__c: string | null;
  Type__c: string;
  Unlock_Reason__c: string | null;
  Version__c: number;
  Versions_Group_Id__c: string | null;
  Was_Sent_to_External_Manager_At__c: DateString | null;
  Was_Sent_to_External_Manager_History__c: string | null;
  Total_Hours__c: number | null;
  NBP_Name__c: string | null;
  Project_Name__c: string | null;
  Start_Date__c: DateString | null;
  Unexcused_Absence_Details__c: string | null;
  Manager_User__c: string | null;
  Is_Billable__c: boolean;
  Override_Details__c: string | null;
  Manager_3__c: string | null;
  End_Date__c: DateString | null;
  PTO_Type__c: string | null;
};

type ParentReferences$Timesheet_Line__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Timesheet__r: SObjectDefinition$Timesheet__c;
  Job_Placement__r: SObjectDefinition$Sstack_CC__Job_Placement__c | null;
  Manager_2__r: SObjectDefinition$Contact | null;
  Manager__r: SObjectDefinition$Contact | null;
  Manager_User__r: SObjectDefinition$User | null;
  Manager_3__r: SObjectDefinition$Contact | null;
};

type ChildRelationships$Timesheet_Line__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Timesheet_Line__c extends SObjectDefinition<'Timesheet_Line__c'> {
    Name: 'Timesheet_Line__c';
    Fields: Fields$Timesheet_Line__c;
    ParentReferences: ParentReferences$Timesheet_Line__c;
    ChildRelationships: ChildRelationships$Timesheet_Line__c;
  }

type Fields$Timesheet_Note__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Timesheet__c: string | null;
  Note_Date__c: DateString | null;
  Note__c: string | null;
  Timesheet_Line__c: string | null;
};

type ParentReferences$Timesheet_Note__ChangeEvent = {
  //
};

type ChildRelationships$Timesheet_Note__ChangeEvent = {
  //
};

interface SObjectDefinition$Timesheet_Note__ChangeEvent extends SObjectDefinition<'Timesheet_Note__ChangeEvent'> {
    Name: 'Timesheet_Note__ChangeEvent';
    Fields: Fields$Timesheet_Note__ChangeEvent;
    ParentReferences: ParentReferences$Timesheet_Note__ChangeEvent;
    ChildRelationships: ChildRelationships$Timesheet_Note__ChangeEvent;
  }

type Fields$Timesheet_Note__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Timesheet__c: string;
  Note_Date__c: DateString | null;
  Note__c: string | null;
  Timesheet_Line__c: string | null;
};

type ParentReferences$Timesheet_Note__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Timesheet__r: SObjectDefinition$Timesheet__c;
  Timesheet_Line__r: SObjectDefinition$Timesheet_Line__c | null;
};

type ChildRelationships$Timesheet_Note__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Timesheet_Note__c extends SObjectDefinition<'Timesheet_Note__c'> {
    Name: 'Timesheet_Note__c';
    Fields: Fields$Timesheet_Note__c;
    ParentReferences: ParentReferences$Timesheet_Note__c;
    ChildRelationships: ChildRelationships$Timesheet_Note__c;
  }

type Fields$Timesheet_Settings_2__mdt = {
  //
  Id: string;
  DeveloperName: string;
  MasterLabel: string;
  Language: string;
  NamespacePrefix: string | null;
  Label: string | null;
  QualifiedApiName: string | null;
  Holidays__c: string | null;
  Test_Resources__c: string | null;
  Show_Test_Resources_For_Users__c: string | null;
  Train_Place_Hours_Notification_Send_To__c: string | null;
  Holidays_6__c: string | null;
  Holidays_11__c: string | null;
};

type ParentReferences$Timesheet_Settings_2__mdt = {
  //
};

type ChildRelationships$Timesheet_Settings_2__mdt = {
  //
};

interface SObjectDefinition$Timesheet_Settings_2__mdt extends SObjectDefinition<'Timesheet_Settings_2__mdt'> {
    Name: 'Timesheet_Settings_2__mdt';
    Fields: Fields$Timesheet_Settings_2__mdt;
    ParentReferences: ParentReferences$Timesheet_Settings_2__mdt;
    ChildRelationships: ChildRelationships$Timesheet_Settings_2__mdt;
  }

type Fields$Timesheet_Settings__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  CC_Email__c: string | null;
  Email_Sender_Display_Name__c: string | null;
  Redirect_All_to_Email__c: string | null;
  Username_Prefix__c: string | null;
};

type ParentReferences$Timesheet_Settings__ChangeEvent = {
  //
};

type ChildRelationships$Timesheet_Settings__ChangeEvent = {
  //
};

interface SObjectDefinition$Timesheet_Settings__ChangeEvent extends SObjectDefinition<'Timesheet_Settings__ChangeEvent'> {
    Name: 'Timesheet_Settings__ChangeEvent';
    Fields: Fields$Timesheet_Settings__ChangeEvent;
    ParentReferences: ParentReferences$Timesheet_Settings__ChangeEvent;
    ChildRelationships: ChildRelationships$Timesheet_Settings__ChangeEvent;
  }

type Fields$Timesheet_Settings__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  CC_Email__c: string | null;
  Email_Sender_Display_Name__c: string | null;
  Redirect_All_to_Email__c: string | null;
  Username_Prefix__c: string | null;
};

type ParentReferences$Timesheet_Settings__c = {
  //
  SetupOwner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Timesheet_Settings__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Timesheet_Settings__c extends SObjectDefinition<'Timesheet_Settings__c'> {
    Name: 'Timesheet_Settings__c';
    Fields: Fields$Timesheet_Settings__c;
    ParentReferences: ParentReferences$Timesheet_Settings__c;
    ChildRelationships: ChildRelationships$Timesheet_Settings__c;
  }

type Fields$Timesheet_Survey_Settings__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
};

type ParentReferences$Timesheet_Survey_Settings__ChangeEvent = {
  //
};

type ChildRelationships$Timesheet_Survey_Settings__ChangeEvent = {
  //
};

interface SObjectDefinition$Timesheet_Survey_Settings__ChangeEvent extends SObjectDefinition<'Timesheet_Survey_Settings__ChangeEvent'> {
    Name: 'Timesheet_Survey_Settings__ChangeEvent';
    Fields: Fields$Timesheet_Survey_Settings__ChangeEvent;
    ParentReferences: ParentReferences$Timesheet_Survey_Settings__ChangeEvent;
    ChildRelationships: ChildRelationships$Timesheet_Survey_Settings__ChangeEvent;
  }

type Fields$Timesheet_Survey_Settings__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Timesheet_Survey_Settings__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Timesheet_Survey_Settings__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Timesheet_Survey_Settings__c extends SObjectDefinition<'Timesheet_Survey_Settings__c'> {
    Name: 'Timesheet_Survey_Settings__c';
    Fields: Fields$Timesheet_Survey_Settings__c;
    ParentReferences: ParentReferences$Timesheet_Survey_Settings__c;
    ChildRelationships: ChildRelationships$Timesheet_Survey_Settings__c;
  }

type Fields$Timesheet__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  User_Contact__c: string | null;
  Start_Date__c: DateString | null;
  Status__c: string | null;
  Submit_For_Approval_Date__c: DateString | null;
  Week_Number__c: number | null;
  Offshore_Total_Hours__c: number | null;
  Staff_Aug_Total_Hours__c: number | null;
  Total_Hours__c: number | null;
  Train_Place_Total_Hours__c: number | null;
  Total_Billable_Hours__c: number | null;
  Total_Hours_Override__c: number | null;
  Leave_Without_Pay_Total_Hours__c: number | null;
  Paid_Sick_Leave_Federal_Total_Hours__c: number | null;
  Paid_Sick_Leave_Total_Hours__c: number | null;
  Training_Bench_Override_Total_Hours__c: number | null;
  Training_Bench_Total_Hours__c: number | null;
  Unexcused_LWP_Total_Hours__c: number | null;
  Survey_Results__c: string | null;
  PTO_Total_Hours__c: number | null;
  TS_Submission_Aging__c: number | null;
};

type ParentReferences$Timesheet__ChangeEvent = {
  //
};

type ChildRelationships$Timesheet__ChangeEvent = {
  //
};

interface SObjectDefinition$Timesheet__ChangeEvent extends SObjectDefinition<'Timesheet__ChangeEvent'> {
    Name: 'Timesheet__ChangeEvent';
    Fields: Fields$Timesheet__ChangeEvent;
    ParentReferences: ParentReferences$Timesheet__ChangeEvent;
    ChildRelationships: ChildRelationships$Timesheet__ChangeEvent;
  }

type Fields$Timesheet__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  User_Contact__c: string;
  Start_Date__c: DateString;
  Status__c: string | null;
  Submit_For_Approval_Date__c: DateString | null;
  Week_Number__c: number | null;
  Offshore_Total_Hours__c: number | null;
  Staff_Aug_Total_Hours__c: number | null;
  Total_Hours__c: number | null;
  Train_Place_Total_Hours__c: number | null;
  Total_Billable_Hours__c: number | null;
  Total_Hours_Override__c: number | null;
  Leave_Without_Pay_Total_Hours__c: number | null;
  Paid_Sick_Leave_Federal_Total_Hours__c: number | null;
  Paid_Sick_Leave_Total_Hours__c: number | null;
  Training_Bench_Override_Total_Hours__c: number | null;
  Training_Bench_Total_Hours__c: number | null;
  Unexcused_LWP_Total_Hours__c: number | null;
  Survey_Results__c: string | null;
  PTO_Total_Hours__c: number | null;
  TS_Submission_Aging__c: number | null;
};

type ParentReferences$Timesheet__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User_Contact__r: SObjectDefinition$Contact;
};

type ChildRelationships$Timesheet__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Timesheet__c extends SObjectDefinition<'Timesheet__c'> {
    Name: 'Timesheet__c';
    Fields: Fields$Timesheet__c;
    ParentReferences: ParentReferences$Timesheet__c;
    ChildRelationships: ChildRelationships$Timesheet__c;
  }

type Fields$TodayGoal = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Value: number | null;
  UserId: string;
};

type ParentReferences$TodayGoal = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
};

type ChildRelationships$TodayGoal = {
  //
  Shares: SObjectDefinition$TodayGoalShare;
};

interface SObjectDefinition$TodayGoal extends SObjectDefinition<'TodayGoal'> {
    Name: 'TodayGoal';
    Fields: Fields$TodayGoal;
    ParentReferences: ParentReferences$TodayGoal;
    ChildRelationships: ChildRelationships$TodayGoal;
  }

type Fields$TodayGoalShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$TodayGoalShare = {
  //
  Parent: SObjectDefinition$TodayGoal;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$TodayGoalShare = {
  //
};

interface SObjectDefinition$TodayGoalShare extends SObjectDefinition<'TodayGoalShare'> {
    Name: 'TodayGoalShare';
    Fields: Fields$TodayGoalShare;
    ParentReferences: ParentReferences$TodayGoalShare;
    ChildRelationships: ChildRelationships$TodayGoalShare;
  }

type Fields$Topic = {
  //
  Id: string;
  Name: string;
  Description: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  TalkingAbout: number;
  ManagedTopicType: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$Topic = {
  //
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$Topic = {
  //
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  CustomBrands: SObjectDefinition$CustomBrand;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ListEmailRecipientSources: SObjectDefinition$ListEmailRecipientSource;
  TopicAssignments: SObjectDefinition$TopicAssignment;
  Feeds: SObjectDefinition$TopicFeed;
};

interface SObjectDefinition$Topic extends SObjectDefinition<'Topic'> {
    Name: 'Topic';
    Fields: Fields$Topic;
    ParentReferences: ParentReferences$Topic;
    ChildRelationships: ChildRelationships$Topic;
  }

type Fields$TopicAssignment = {
  //
  Id: string;
  TopicId: string;
  EntityId: string;
  EntityKeyPrefix: string;
  EntityType: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  IsDeleted: boolean;
  SystemModstamp: DateString;
};

type ParentReferences$TopicAssignment = {
  //
  Topic: SObjectDefinition$Topic;
  Entity: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$TopicAssignment = {
  //
};

interface SObjectDefinition$TopicAssignment extends SObjectDefinition<'TopicAssignment'> {
    Name: 'TopicAssignment';
    Fields: Fields$TopicAssignment;
    ParentReferences: ParentReferences$TopicAssignment;
    ChildRelationships: ChildRelationships$TopicAssignment;
  }

type Fields$TopicFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$TopicFeed = {
  //
  Parent: SObjectDefinition$Topic;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$TopicFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$TopicFeed extends SObjectDefinition<'TopicFeed'> {
    Name: 'TopicFeed';
    Fields: Fields$TopicFeed;
    ParentReferences: ParentReferences$TopicFeed;
    ChildRelationships: ChildRelationships$TopicFeed;
  }

type Fields$TopicUserEvent = {
  //
  Id: string;
  UserId: string;
  TopicId: string;
  ActionEnum: string;
  CreatedDate: DateString;
};

type ParentReferences$TopicUserEvent = {
  //
};

type ChildRelationships$TopicUserEvent = {
  //
};

interface SObjectDefinition$TopicUserEvent extends SObjectDefinition<'TopicUserEvent'> {
    Name: 'TopicUserEvent';
    Fields: Fields$TopicUserEvent;
    ParentReferences: ParentReferences$TopicUserEvent;
    ChildRelationships: ChildRelationships$TopicUserEvent;
  }

type Fields$Translation = {
  //
  Id: string;
  Language: string;
  IsActive: boolean;
  CanManage: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Translation = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Translation = {
  //
};

interface SObjectDefinition$Translation extends SObjectDefinition<'Translation'> {
    Name: 'Translation';
    Fields: Fields$Translation;
    ParentReferences: ParentReferences$Translation;
    ChildRelationships: ChildRelationships$Translation;
  }

type Fields$UiFormulaCriterion = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  RuleId: string;
  LeftHandSide: string;
  OperatorId: string | null;
  RightHandSide: string | null;
  ParentKeyPrefix: string | null;
};

type ParentReferences$UiFormulaCriterion = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Rule: SObjectDefinition$UiFormulaRule;
};

type ChildRelationships$UiFormulaCriterion = {
  //
};

interface SObjectDefinition$UiFormulaCriterion extends SObjectDefinition<'UiFormulaCriterion'> {
    Name: 'UiFormulaCriterion';
    Fields: Fields$UiFormulaCriterion;
    ParentReferences: ParentReferences$UiFormulaCriterion;
    ChildRelationships: ChildRelationships$UiFormulaCriterion;
  }

type Fields$UiFormulaRule = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string;
  MasterLabel: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  AssociatedElementId: string | null;
  BooleanFilter: string | null;
  Formula: string | null;
  ParentKeyPrefix: string | null;
};

type ParentReferences$UiFormulaRule = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  AssociatedElement: SObjectDefinition$PromptVersion | null;
};

type ChildRelationships$UiFormulaRule = {
  //
};

interface SObjectDefinition$UiFormulaRule extends SObjectDefinition<'UiFormulaRule'> {
    Name: 'UiFormulaRule';
    Fields: Fields$UiFormulaRule;
    ParentReferences: ParentReferences$UiFormulaRule;
    ChildRelationships: ChildRelationships$UiFormulaRule;
  }

type Fields$UndecidedEventRelation = {
  //
  Id: string;
  RelationId: string | null;
  EventId: string | null;
  AccountId: string | null;
  RespondedDate: DateString | null;
  Response: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  IsDeleted: boolean;
  Type: string | null;
};

type ParentReferences$UndecidedEventRelation = {
  //
  Relation: SObjectDefinition$Name | null;
  Event: SObjectDefinition$Event | null;
  Account: SObjectDefinition$Account | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UndecidedEventRelation = {
  //
};

interface SObjectDefinition$UndecidedEventRelation extends SObjectDefinition<'UndecidedEventRelation'> {
    Name: 'UndecidedEventRelation';
    Fields: Fields$UndecidedEventRelation;
    ParentReferences: ParentReferences$UndecidedEventRelation;
    ChildRelationships: ChildRelationships$UndecidedEventRelation;
  }

type Fields$User = {
  //
  Id: string;
  Username: string;
  LastName: string;
  FirstName: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string;
  CompanyName: string | null;
  Division: string | null;
  Department: string | null;
  Title: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  StateCode: string | null;
  CountryCode: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Email: string;
  EmailPreferencesAutoBcc: boolean;
  EmailPreferencesAutoBccStayInTouch: boolean;
  EmailPreferencesStayInTouchReminder: boolean;
  SenderEmail: string | null;
  SenderName: string | null;
  Signature: string | null;
  StayInTouchSubject: string | null;
  StayInTouchSignature: string | null;
  StayInTouchNote: string | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  Alias: string;
  CommunityNickname: string;
  BadgeText: string | null;
  IsActive: boolean;
  TimeZoneSidKey: string;
  UserRoleId: string | null;
  LocaleSidKey: string;
  ReceivesInfoEmails: boolean;
  ReceivesAdminInfoEmails: boolean;
  EmailEncodingKey: string;
  ProfileId: string;
  UserType: string | null;
  LanguageLocaleKey: string;
  EmployeeNumber: string | null;
  DelegatedApproverId: string | null;
  ManagerId: string | null;
  LastLoginDate: DateString | null;
  LastPasswordChangeDate: DateString | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  NumberOfFailedLogins: number | null;
  OfflineTrialExpirationDate: DateString | null;
  OfflinePdaTrialExpirationDate: DateString | null;
  UserPermissionsMarketingUser: boolean;
  UserPermissionsOfflineUser: boolean;
  UserPermissionsAvantgoUser: boolean;
  UserPermissionsCallCenterAutoLogin: boolean;
  UserPermissionsSFContentUser: boolean;
  UserPermissionsInteractionUser: boolean;
  UserPermissionsSupportUser: boolean;
  ForecastEnabled: boolean;
  UserPreferencesActivityRemindersPopup: boolean;
  UserPreferencesEventRemindersCheckboxDefault: boolean;
  UserPreferencesTaskRemindersCheckboxDefault: boolean;
  UserPreferencesReminderSoundOff: boolean;
  UserPreferencesDisableAllFeedsEmail: boolean;
  UserPreferencesDisableFollowersEmail: boolean;
  UserPreferencesDisableProfilePostEmail: boolean;
  UserPreferencesDisableChangeCommentEmail: boolean;
  UserPreferencesDisableLaterCommentEmail: boolean;
  UserPreferencesDisProfPostCommentEmail: boolean;
  UserPreferencesApexPagesDeveloperMode: boolean;
  UserPreferencesReceiveNoNotificationsAsApprover: boolean;
  UserPreferencesReceiveNotificationsAsDelegatedApprover: boolean;
  UserPreferencesHideCSNGetChatterMobileTask: boolean;
  UserPreferencesDisableMentionsPostEmail: boolean;
  UserPreferencesDisMentionsCommentEmail: boolean;
  UserPreferencesHideCSNDesktopTask: boolean;
  UserPreferencesHideChatterOnboardingSplash: boolean;
  UserPreferencesHideSecondChatterOnboardingSplash: boolean;
  UserPreferencesDisCommentAfterLikeEmail: boolean;
  UserPreferencesDisableLikeEmail: boolean;
  UserPreferencesSortFeedByComment: boolean;
  UserPreferencesDisableMessageEmail: boolean;
  UserPreferencesDisableBookmarkEmail: boolean;
  UserPreferencesDisableSharePostEmail: boolean;
  UserPreferencesEnableAutoSubForFeeds: boolean;
  UserPreferencesDisableFileShareNotificationsForApi: boolean;
  UserPreferencesShowTitleToExternalUsers: boolean;
  UserPreferencesShowManagerToExternalUsers: boolean;
  UserPreferencesShowEmailToExternalUsers: boolean;
  UserPreferencesShowWorkPhoneToExternalUsers: boolean;
  UserPreferencesShowMobilePhoneToExternalUsers: boolean;
  UserPreferencesShowFaxToExternalUsers: boolean;
  UserPreferencesShowStreetAddressToExternalUsers: boolean;
  UserPreferencesShowCityToExternalUsers: boolean;
  UserPreferencesShowStateToExternalUsers: boolean;
  UserPreferencesShowPostalCodeToExternalUsers: boolean;
  UserPreferencesShowCountryToExternalUsers: boolean;
  UserPreferencesShowProfilePicToGuestUsers: boolean;
  UserPreferencesShowTitleToGuestUsers: boolean;
  UserPreferencesShowCityToGuestUsers: boolean;
  UserPreferencesShowStateToGuestUsers: boolean;
  UserPreferencesShowPostalCodeToGuestUsers: boolean;
  UserPreferencesShowCountryToGuestUsers: boolean;
  UserPreferencesHideInvoicesRedirectConfirmation: boolean;
  UserPreferencesHideStatementsRedirectConfirmation: boolean;
  UserPreferencesHideS1BrowserUI: boolean;
  UserPreferencesDisableEndorsementEmail: boolean;
  UserPreferencesPathAssistantCollapsed: boolean;
  UserPreferencesCacheDiagnostics: boolean;
  UserPreferencesShowEmailToGuestUsers: boolean;
  UserPreferencesShowManagerToGuestUsers: boolean;
  UserPreferencesShowWorkPhoneToGuestUsers: boolean;
  UserPreferencesShowMobilePhoneToGuestUsers: boolean;
  UserPreferencesShowFaxToGuestUsers: boolean;
  UserPreferencesShowStreetAddressToGuestUsers: boolean;
  UserPreferencesLightningExperiencePreferred: boolean;
  UserPreferencesPreviewLightning: boolean;
  UserPreferencesHideEndUserOnboardingAssistantModal: boolean;
  UserPreferencesHideLightningMigrationModal: boolean;
  UserPreferencesHideSfxWelcomeMat: boolean;
  UserPreferencesHideBiggerPhotoCallout: boolean;
  UserPreferencesGlobalNavBarWTShown: boolean;
  UserPreferencesGlobalNavGridMenuWTShown: boolean;
  UserPreferencesCreateLEXAppsWTShown: boolean;
  UserPreferencesFavoritesWTShown: boolean;
  UserPreferencesRecordHomeSectionCollapseWTShown: boolean;
  UserPreferencesRecordHomeReservedWTShown: boolean;
  UserPreferencesFavoritesShowTopFavorites: boolean;
  UserPreferencesExcludeMailAppAttachments: boolean;
  UserPreferencesSuppressTaskSFXReminders: boolean;
  UserPreferencesSuppressEventSFXReminders: boolean;
  UserPreferencesPreviewCustomTheme: boolean;
  UserPreferencesHasCelebrationBadge: boolean;
  UserPreferencesUserDebugModePref: boolean;
  UserPreferencesSRHOverrideActivities: boolean;
  UserPreferencesNewLightningReportRunPageEnabled: boolean;
  UserPreferencesNativeEmailClient: boolean;
  UserPreferencesHideBrowseProductRedirectConfirmation: boolean;
  ContactId: string | null;
  AccountId: string | null;
  CallCenterId: string | null;
  Extension: string | null;
  FederationIdentifier: string | null;
  AboutMe: string | null;
  FullPhotoUrl: string | null;
  SmallPhotoUrl: string | null;
  IsExtIndicatorVisible: boolean;
  OutOfOfficeMessage: string | null;
  MediumPhotoUrl: string | null;
  DigestFrequency: string;
  DefaultGroupNotificationFrequency: string;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  BannerPhotoUrl: string | null;
  SmallBannerPhotoUrl: string | null;
  MediumBannerPhotoUrl: string | null;
  IsProfilePhotoActive: boolean;
  IndividualId: string | null;
  DB_Region__c: string | null;
};

type ParentReferences$User = {
  //
  UserRole: SObjectDefinition$UserRole | null;
  Profile: SObjectDefinition$Profile;
  Manager: SObjectDefinition$User | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Contact: SObjectDefinition$Contact | null;
  Account: SObjectDefinition$Account | null;
  Individual: SObjectDefinition$Individual | null;
};

type ChildRelationships$User = {
  //
  AcceptedEventRelations: SObjectDefinition$AcceptedEventRelation;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  AuthorizationFormConsents: SObjectDefinition$AuthorizationFormConsent;
  GroupMemberships: SObjectDefinition$CollaborationGroupMember;
  GroupMembershipRequests: SObjectDefinition$CollaborationGroupMemberRequest;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  CommSubscriptionConsents: SObjectDefinition$CommSubscriptionConsent;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  ContractsSigned: SObjectDefinition$Contract;
  DeclinedEventRelations: SObjectDefinition$DeclinedEventRelation;
  EmailMessageRelations: SObjectDefinition$EmailMessageRelation;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  FeedSubscriptions: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ExternalDataUserAuths: SObjectDefinition$ExternalDataUserAuth;
  InstalledMobileApps: SObjectDefinition$InstalledMobileApp;
  OpportunityTeams: SObjectDefinition$OpportunityTeamMember;
  OutgoingEmailRelations: SObjectDefinition$OutgoingEmailRelation;
  OwnedContentDocuments: SObjectDefinition$OwnedContentDocument;
  PermissionSetAssignments: SObjectDefinition$PermissionSetAssignment;
  PermissionSetLicenseAssignments: SObjectDefinition$PermissionSetLicenseAssign;
  UserProfileSkillUserEndorsements: SObjectDefinition$ProfileSkillEndorsement;
  UserProfileSkillChildren: SObjectDefinition$ProfileSkillUser;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SessionPermSetActivations: SObjectDefinition$SessionPermSetActivation;
  UserSites: SObjectDefinition$Site;
  SurveyInvitations: SObjectDefinition$SurveyInvitation;
  UserSurveyInvitations: SObjectDefinition$SurveyInvitation;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  UndecidedEventRelations: SObjectDefinition$UndecidedEventRelation;
  DelegatedUsers: SObjectDefinition$User;
  ManagedUsers: SObjectDefinition$User;
  PersonRecord: SObjectDefinition$UserEmailPreferredPerson;
  UserEntityAccessRights: SObjectDefinition$UserEntityAccess;
  Feeds: SObjectDefinition$UserFeed;
  UserFieldAccessRights: SObjectDefinition$UserFieldAccess;
  UserPreferences: SObjectDefinition$UserPreference;
  Shares: SObjectDefinition$UserShare;
  UserTeams: SObjectDefinition$UserTeamMember;
  Badges: SObjectDefinition$WorkBadge;
  GivenThanks: SObjectDefinition$WorkThanks;
};

interface SObjectDefinition$User extends SObjectDefinition<'User'> {
    Name: 'User';
    Fields: Fields$User;
    ParentReferences: ParentReferences$User;
    ChildRelationships: ChildRelationships$User;
  }

type Fields$UserAppInfo = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  FormFactor: string;
  AppDefinitionId: string | null;
};

type ParentReferences$UserAppInfo = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  AppDefinition: SObjectDefinition$AppDefinition | null;
};

type ChildRelationships$UserAppInfo = {
  //
};

interface SObjectDefinition$UserAppInfo extends SObjectDefinition<'UserAppInfo'> {
    Name: 'UserAppInfo';
    Fields: Fields$UserAppInfo;
    ParentReferences: ParentReferences$UserAppInfo;
    ChildRelationships: ChildRelationships$UserAppInfo;
  }

type Fields$UserAppMenuCustomization = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ApplicationId: string | null;
  SortOrder: number | null;
};

type ParentReferences$UserAppMenuCustomization = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Application: SObjectDefinition$ConnectedApplication | null;
};

type ChildRelationships$UserAppMenuCustomization = {
  //
  Shares: SObjectDefinition$UserAppMenuCustomizationShare;
};

interface SObjectDefinition$UserAppMenuCustomization extends SObjectDefinition<'UserAppMenuCustomization'> {
    Name: 'UserAppMenuCustomization';
    Fields: Fields$UserAppMenuCustomization;
    ParentReferences: ParentReferences$UserAppMenuCustomization;
    ChildRelationships: ChildRelationships$UserAppMenuCustomization;
  }

type Fields$UserAppMenuCustomizationShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$UserAppMenuCustomizationShare = {
  //
  Parent: SObjectDefinition$UserAppMenuCustomization;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserAppMenuCustomizationShare = {
  //
};

interface SObjectDefinition$UserAppMenuCustomizationShare extends SObjectDefinition<'UserAppMenuCustomizationShare'> {
    Name: 'UserAppMenuCustomizationShare';
    Fields: Fields$UserAppMenuCustomizationShare;
    ParentReferences: ParentReferences$UserAppMenuCustomizationShare;
    ChildRelationships: ChildRelationships$UserAppMenuCustomizationShare;
  }

type Fields$UserAppMenuItem = {
  //
  Id: string;
  AppMenuItemId: string | null;
  ApplicationId: string | null;
  Label: string | null;
  Description: string | null;
  Name: string | null;
  UserSortOrder: number | null;
  SortOrder: number | null;
  Type: string | null;
  LogoUrl: string | null;
  IconUrl: string | null;
  InfoUrl: string | null;
  StartUrl: string | null;
  MobileStartUrl: string | null;
  IsVisible: boolean;
  IsUsingAdminAuthorization: boolean;
};

type ParentReferences$UserAppMenuItem = {
  //
};

type ChildRelationships$UserAppMenuItem = {
  //
};

interface SObjectDefinition$UserAppMenuItem extends SObjectDefinition<'UserAppMenuItem'> {
    Name: 'UserAppMenuItem';
    Fields: Fields$UserAppMenuItem;
    ParentReferences: ParentReferences$UserAppMenuItem;
    ChildRelationships: ChildRelationships$UserAppMenuItem;
  }

type Fields$UserChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Username: string | null;
  LastName: string | null;
  FirstName: string | null;
  MiddleName: string | null;
  Suffix: string | null;
  Name: string | null;
  CompanyName: string | null;
  Division: string | null;
  Department: string | null;
  Title: string | null;
  Street: string | null;
  City: string | null;
  State: string | null;
  PostalCode: string | null;
  Country: string | null;
  StateCode: string | null;
  CountryCode: string | null;
  Latitude: number | null;
  Longitude: number | null;
  GeocodeAccuracy: string | null;
  Address: Address | null;
  Email: string | null;
  EmailPreferencesAutoBcc: boolean;
  EmailPreferencesAutoBccStayInTouch: boolean;
  EmailPreferencesStayInTouchReminder: boolean;
  SenderEmail: string | null;
  SenderName: string | null;
  Signature: string | null;
  StayInTouchSubject: string | null;
  StayInTouchSignature: string | null;
  StayInTouchNote: string | null;
  Phone: string | null;
  Fax: string | null;
  MobilePhone: string | null;
  Alias: string | null;
  CommunityNickname: string | null;
  IsActive: boolean;
  TimeZoneSidKey: string | null;
  UserRoleId: string | null;
  LocaleSidKey: string | null;
  ReceivesInfoEmails: boolean;
  ReceivesAdminInfoEmails: boolean;
  EmailEncodingKey: string | null;
  ProfileId: string | null;
  UserType: string | null;
  LanguageLocaleKey: string | null;
  EmployeeNumber: string | null;
  DelegatedApproverId: string | null;
  ManagerId: string | null;
  LastLoginDate: DateString | null;
  LastPasswordChangeDate: DateString | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  NumberOfFailedLogins: number | null;
  OfflineTrialExpirationDate: DateString | null;
  OfflinePdaTrialExpirationDate: DateString | null;
  UserPermissionsMarketingUser: boolean;
  UserPermissionsOfflineUser: boolean;
  UserPermissionsAvantgoUser: boolean;
  UserPermissionsCallCenterAutoLogin: boolean;
  UserPermissionsSFContentUser: boolean;
  UserPermissionsInteractionUser: boolean;
  UserPermissionsSupportUser: boolean;
  ForecastEnabled: boolean;
  UserPreferencesActivityRemindersPopup: boolean;
  UserPreferencesEventRemindersCheckboxDefault: boolean;
  UserPreferencesTaskRemindersCheckboxDefault: boolean;
  UserPreferencesReminderSoundOff: boolean;
  UserPreferencesDisableAllFeedsEmail: boolean;
  UserPreferencesDisableFollowersEmail: boolean;
  UserPreferencesDisableProfilePostEmail: boolean;
  UserPreferencesDisableChangeCommentEmail: boolean;
  UserPreferencesDisableLaterCommentEmail: boolean;
  UserPreferencesDisProfPostCommentEmail: boolean;
  UserPreferencesApexPagesDeveloperMode: boolean;
  UserPreferencesReceiveNoNotificationsAsApprover: boolean;
  UserPreferencesReceiveNotificationsAsDelegatedApprover: boolean;
  UserPreferencesHideCSNGetChatterMobileTask: boolean;
  UserPreferencesDisableMentionsPostEmail: boolean;
  UserPreferencesDisMentionsCommentEmail: boolean;
  UserPreferencesHideCSNDesktopTask: boolean;
  UserPreferencesHideChatterOnboardingSplash: boolean;
  UserPreferencesHideSecondChatterOnboardingSplash: boolean;
  UserPreferencesDisCommentAfterLikeEmail: boolean;
  UserPreferencesDisableLikeEmail: boolean;
  UserPreferencesSortFeedByComment: boolean;
  UserPreferencesDisableMessageEmail: boolean;
  UserPreferencesDisableBookmarkEmail: boolean;
  UserPreferencesDisableSharePostEmail: boolean;
  UserPreferencesEnableAutoSubForFeeds: boolean;
  UserPreferencesDisableFileShareNotificationsForApi: boolean;
  UserPreferencesShowTitleToExternalUsers: boolean;
  UserPreferencesShowManagerToExternalUsers: boolean;
  UserPreferencesShowEmailToExternalUsers: boolean;
  UserPreferencesShowWorkPhoneToExternalUsers: boolean;
  UserPreferencesShowMobilePhoneToExternalUsers: boolean;
  UserPreferencesShowFaxToExternalUsers: boolean;
  UserPreferencesShowStreetAddressToExternalUsers: boolean;
  UserPreferencesShowCityToExternalUsers: boolean;
  UserPreferencesShowStateToExternalUsers: boolean;
  UserPreferencesShowPostalCodeToExternalUsers: boolean;
  UserPreferencesShowCountryToExternalUsers: boolean;
  UserPreferencesShowProfilePicToGuestUsers: boolean;
  UserPreferencesShowTitleToGuestUsers: boolean;
  UserPreferencesShowCityToGuestUsers: boolean;
  UserPreferencesShowStateToGuestUsers: boolean;
  UserPreferencesShowPostalCodeToGuestUsers: boolean;
  UserPreferencesShowCountryToGuestUsers: boolean;
  UserPreferencesHideInvoicesRedirectConfirmation: boolean;
  UserPreferencesHideStatementsRedirectConfirmation: boolean;
  UserPreferencesHideS1BrowserUI: boolean;
  UserPreferencesDisableEndorsementEmail: boolean;
  UserPreferencesPathAssistantCollapsed: boolean;
  UserPreferencesCacheDiagnostics: boolean;
  UserPreferencesShowEmailToGuestUsers: boolean;
  UserPreferencesShowManagerToGuestUsers: boolean;
  UserPreferencesShowWorkPhoneToGuestUsers: boolean;
  UserPreferencesShowMobilePhoneToGuestUsers: boolean;
  UserPreferencesShowFaxToGuestUsers: boolean;
  UserPreferencesShowStreetAddressToGuestUsers: boolean;
  UserPreferencesLightningExperiencePreferred: boolean;
  UserPreferencesPreviewLightning: boolean;
  UserPreferencesHideEndUserOnboardingAssistantModal: boolean;
  UserPreferencesHideLightningMigrationModal: boolean;
  UserPreferencesHideSfxWelcomeMat: boolean;
  UserPreferencesHideBiggerPhotoCallout: boolean;
  UserPreferencesGlobalNavBarWTShown: boolean;
  UserPreferencesGlobalNavGridMenuWTShown: boolean;
  UserPreferencesCreateLEXAppsWTShown: boolean;
  UserPreferencesFavoritesWTShown: boolean;
  UserPreferencesRecordHomeSectionCollapseWTShown: boolean;
  UserPreferencesRecordHomeReservedWTShown: boolean;
  UserPreferencesFavoritesShowTopFavorites: boolean;
  UserPreferencesExcludeMailAppAttachments: boolean;
  UserPreferencesSuppressTaskSFXReminders: boolean;
  UserPreferencesSuppressEventSFXReminders: boolean;
  UserPreferencesPreviewCustomTheme: boolean;
  UserPreferencesHasCelebrationBadge: boolean;
  UserPreferencesUserDebugModePref: boolean;
  UserPreferencesSRHOverrideActivities: boolean;
  UserPreferencesNewLightningReportRunPageEnabled: boolean;
  UserPreferencesNativeEmailClient: boolean;
  UserPreferencesHideBrowseProductRedirectConfirmation: boolean;
  ContactId: string | null;
  AccountId: string | null;
  CallCenterId: string | null;
  Extension: string | null;
  FederationIdentifier: string | null;
  AboutMe: string | null;
  DigestFrequency: string | null;
  DefaultGroupNotificationFrequency: string | null;
  IsProfilePhotoActive: boolean;
  IndividualId: string | null;
  DB_Region__c: string | null;
};

type ParentReferences$UserChangeEvent = {
  //
};

type ChildRelationships$UserChangeEvent = {
  //
};

interface SObjectDefinition$UserChangeEvent extends SObjectDefinition<'UserChangeEvent'> {
    Name: 'UserChangeEvent';
    Fields: Fields$UserChangeEvent;
    ParentReferences: ParentReferences$UserChangeEvent;
    ChildRelationships: ChildRelationships$UserChangeEvent;
  }

type Fields$UserEmailCalendarSync = {
  //
  Id: string;
  ExternalId: string | null;
  UserId: string | null;
  ConfigurationId: string | null;
};

type ParentReferences$UserEmailCalendarSync = {
  //
};

type ChildRelationships$UserEmailCalendarSync = {
  //
};

interface SObjectDefinition$UserEmailCalendarSync extends SObjectDefinition<'UserEmailCalendarSync'> {
    Name: 'UserEmailCalendarSync';
    Fields: Fields$UserEmailCalendarSync;
    ParentReferences: ParentReferences$UserEmailCalendarSync;
    ChildRelationships: ChildRelationships$UserEmailCalendarSync;
  }

type Fields$UserEmailPreferredPerson = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  Email: string;
  PersonRecordId: string;
};

type ParentReferences$UserEmailPreferredPerson = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  PersonRecord: SObjectDefinition$Name;
};

type ChildRelationships$UserEmailPreferredPerson = {
  //
  Shares: SObjectDefinition$UserEmailPreferredPersonShare;
};

interface SObjectDefinition$UserEmailPreferredPerson extends SObjectDefinition<'UserEmailPreferredPerson'> {
    Name: 'UserEmailPreferredPerson';
    Fields: Fields$UserEmailPreferredPerson;
    ParentReferences: ParentReferences$UserEmailPreferredPerson;
    ChildRelationships: ChildRelationships$UserEmailPreferredPerson;
  }

type Fields$UserEmailPreferredPersonShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$UserEmailPreferredPersonShare = {
  //
  Parent: SObjectDefinition$UserEmailPreferredPerson;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserEmailPreferredPersonShare = {
  //
};

interface SObjectDefinition$UserEmailPreferredPersonShare extends SObjectDefinition<'UserEmailPreferredPersonShare'> {
    Name: 'UserEmailPreferredPersonShare';
    Fields: Fields$UserEmailPreferredPersonShare;
    ParentReferences: ParentReferences$UserEmailPreferredPersonShare;
    ChildRelationships: ChildRelationships$UserEmailPreferredPersonShare;
  }

type Fields$UserEntityAccess = {
  //
  Id: string;
  DurableId: string | null;
  UserId: string | null;
  IsMergeable: boolean;
  IsUpdatable: boolean;
  IsActivateable: boolean;
  IsReadable: boolean;
  IsCreatable: boolean;
  IsEditable: boolean;
  IsDeletable: boolean;
  IsUndeletable: boolean;
  IsFlsUpdatable: boolean;
  EntityDefinitionId: string | null;
};

type ParentReferences$UserEntityAccess = {
  //
  User: SObjectDefinition$User | null;
};

type ChildRelationships$UserEntityAccess = {
  //
};

interface SObjectDefinition$UserEntityAccess extends SObjectDefinition<'UserEntityAccess'> {
    Name: 'UserEntityAccess';
    Fields: Fields$UserEntityAccess;
    ParentReferences: ParentReferences$UserEntityAccess;
    ChildRelationships: ChildRelationships$UserEntityAccess;
  }

type Fields$UserFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$UserFeed = {
  //
  Parent: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$UserFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$UserFeed extends SObjectDefinition<'UserFeed'> {
    Name: 'UserFeed';
    Fields: Fields$UserFeed;
    ParentReferences: ParentReferences$UserFeed;
    ChildRelationships: ChildRelationships$UserFeed;
  }

type Fields$UserFieldAccess = {
  //
  Id: string;
  DurableId: string | null;
  UserId: string | null;
  IsUpdatable: boolean;
  IsCreatable: boolean;
  IsAccessible: boolean;
  EntityDefinitionId: string | null;
  FieldDefinitionId: string | null;
};

type ParentReferences$UserFieldAccess = {
  //
  User: SObjectDefinition$User | null;
};

type ChildRelationships$UserFieldAccess = {
  //
};

interface SObjectDefinition$UserFieldAccess extends SObjectDefinition<'UserFieldAccess'> {
    Name: 'UserFieldAccess';
    Fields: Fields$UserFieldAccess;
    ParentReferences: ParentReferences$UserFieldAccess;
    ChildRelationships: ChildRelationships$UserFieldAccess;
  }

type Fields$UserLicense = {
  //
  Id: string;
  LicenseDefinitionKey: string;
  TotalLicenses: number;
  Status: string;
  UsedLicenses: number;
  UsedLicensesLastUpdated: DateString;
  Name: string;
  MasterLabel: string;
  CreatedDate: DateString;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
};

type ParentReferences$UserLicense = {
  //
};

type ChildRelationships$UserLicense = {
  //
};

interface SObjectDefinition$UserLicense extends SObjectDefinition<'UserLicense'> {
    Name: 'UserLicense';
    Fields: Fields$UserLicense;
    ParentReferences: ParentReferences$UserLicense;
    ChildRelationships: ChildRelationships$UserLicense;
  }

type Fields$UserListView = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserId: string;
  ListViewId: string;
  SobjectType: string | null;
  LastViewedChart: string | null;
};

type ParentReferences$UserListView = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  User: SObjectDefinition$User;
  ListView: SObjectDefinition$ListView;
};

type ChildRelationships$UserListView = {
  //
};

interface SObjectDefinition$UserListView extends SObjectDefinition<'UserListView'> {
    Name: 'UserListView';
    Fields: Fields$UserListView;
    ParentReferences: ParentReferences$UserListView;
    ChildRelationships: ChildRelationships$UserListView;
  }

type Fields$UserListViewCriterion = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserListViewId: string;
  SortOrder: number;
  ColumnName: string;
  Operation: string;
  Value: string | null;
};

type ParentReferences$UserListViewCriterion = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  UserListView: SObjectDefinition$UserListView;
};

type ChildRelationships$UserListViewCriterion = {
  //
};

interface SObjectDefinition$UserListViewCriterion extends SObjectDefinition<'UserListViewCriterion'> {
    Name: 'UserListViewCriterion';
    Fields: Fields$UserListViewCriterion;
    ParentReferences: ParentReferences$UserListViewCriterion;
    ChildRelationships: ChildRelationships$UserListViewCriterion;
  }

type Fields$UserLogin = {
  //
  Id: string;
  UserId: string | null;
  IsFrozen: boolean;
  IsPasswordLocked: boolean;
  LastModifiedDate: DateString;
  LastModifiedById: string;
};

type ParentReferences$UserLogin = {
  //
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserLogin = {
  //
};

interface SObjectDefinition$UserLogin extends SObjectDefinition<'UserLogin'> {
    Name: 'UserLogin';
    Fields: Fields$UserLogin;
    ParentReferences: ParentReferences$UserLogin;
    ChildRelationships: ChildRelationships$UserLogin;
  }

type Fields$UserPackageLicense = {
  //
  Id: string;
  PackageLicenseId: string;
  UserId: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$UserPackageLicense = {
  //
  PackageLicense: SObjectDefinition$PackageLicense;
  User: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserPackageLicense = {
  //
};

interface SObjectDefinition$UserPackageLicense extends SObjectDefinition<'UserPackageLicense'> {
    Name: 'UserPackageLicense';
    Fields: Fields$UserPackageLicense;
    ParentReferences: ParentReferences$UserPackageLicense;
    ChildRelationships: ChildRelationships$UserPackageLicense;
  }

type Fields$UserPermissionAccess = {
  //
  Id: string;
  LastCacheUpdate: DateString | null;
  PermissionsEmailSingle: boolean;
  PermissionsEmailMass: boolean;
  PermissionsEditTask: boolean;
  PermissionsEditEvent: boolean;
  PermissionsExportReport: boolean;
  PermissionsImportPersonal: boolean;
  PermissionsDataExport: boolean;
  PermissionsManageUsers: boolean;
  PermissionsEditPublicFilters: boolean;
  PermissionsEditPublicTemplates: boolean;
  PermissionsModifyAllData: boolean;
  PermissionsEditBillingInfo: boolean;
  PermissionsManageCases: boolean;
  PermissionsMassInlineEdit: boolean;
  PermissionsManageSolutions: boolean;
  PermissionsCustomizeApplication: boolean;
  PermissionsEditReadonlyFields: boolean;
  PermissionsRunReports: boolean;
  PermissionsViewSetup: boolean;
  PermissionsTransferAnyEntity: boolean;
  PermissionsNewReportBuilder: boolean;
  PermissionsActivateContract: boolean;
  PermissionsActivateOrder: boolean;
  PermissionsImportLeads: boolean;
  PermissionsManageLeads: boolean;
  PermissionsTransferAnyLead: boolean;
  PermissionsViewAllData: boolean;
  PermissionsEditPublicDocuments: boolean;
  PermissionsViewEncryptedData: boolean;
  PermissionsEditBrandTemplates: boolean;
  PermissionsEditHtmlTemplates: boolean;
  PermissionsChatterInternalUser: boolean;
  PermissionsDeleteActivatedContract: boolean;
  PermissionsChatterInviteExternalUsers: boolean;
  PermissionsSendSitRequests: boolean;
  PermissionsOverrideForecasts: boolean;
  PermissionsViewAllForecasts: boolean;
  PermissionsApiUserOnly: boolean;
  PermissionsManageRemoteAccess: boolean;
  PermissionsCanUseNewDashboardBuilder: boolean;
  PermissionsManageCategories: boolean;
  PermissionsConvertLeads: boolean;
  PermissionsPasswordNeverExpires: boolean;
  PermissionsUseTeamReassignWizards: boolean;
  PermissionsEditActivatedOrders: boolean;
  PermissionsInstallPackaging: boolean;
  PermissionsPublishPackaging: boolean;
  PermissionsChatterOwnGroups: boolean;
  PermissionsEditOppLineItemUnitPrice: boolean;
  PermissionsCreatePackaging: boolean;
  PermissionsBulkApiHardDelete: boolean;
  PermissionsInboundMigrationToolsUser: boolean;
  PermissionsSolutionImport: boolean;
  PermissionsManageCallCenters: boolean;
  PermissionsManageSynonyms: boolean;
  PermissionsOutboundMigrationToolsUser: boolean;
  PermissionsViewContent: boolean;
  PermissionsManageEmailClientConfig: boolean;
  PermissionsEnableNotifications: boolean;
  PermissionsManageDataIntegrations: boolean;
  PermissionsDistributeFromPersWksp: boolean;
  PermissionsViewDataCategories: boolean;
  PermissionsManageDataCategories: boolean;
  PermissionsAuthorApex: boolean;
  PermissionsManageMobile: boolean;
  PermissionsApiEnabled: boolean;
  PermissionsManageCustomReportTypes: boolean;
  PermissionsEditCaseComments: boolean;
  PermissionsTransferAnyCase: boolean;
  PermissionsContentAdministrator: boolean;
  PermissionsCreateWorkspaces: boolean;
  PermissionsManageContentPermissions: boolean;
  PermissionsManageContentProperties: boolean;
  PermissionsManageContentTypes: boolean;
  PermissionsScheduleJob: boolean;
  PermissionsManageExchangeConfig: boolean;
  PermissionsManageAnalyticSnapshots: boolean;
  PermissionsScheduleReports: boolean;
  PermissionsManageBusinessHourHolidays: boolean;
  PermissionsManageDynamicDashboards: boolean;
  PermissionsCustomSidebarOnAllPages: boolean;
  PermissionsManageInteraction: boolean;
  PermissionsViewMyTeamsDashboards: boolean;
  PermissionsModerateChatter: boolean;
  PermissionsResetPasswords: boolean;
  PermissionsFlowUFLRequired: boolean;
  PermissionsCanInsertFeedSystemFields: boolean;
  PermissionsActivitiesAccess: boolean;
  PermissionsEmailTemplateManagement: boolean;
  PermissionsEmailAdministration: boolean;
  PermissionsManageChatterMessages: boolean;
  PermissionsAllowEmailIC: boolean;
  PermissionsChatterFileLink: boolean;
  PermissionsForceTwoFactor: boolean;
  PermissionsViewEventLogFiles: boolean;
  PermissionsManageNetworks: boolean;
  PermissionsViewCaseInteraction: boolean;
  PermissionsManageAuthProviders: boolean;
  PermissionsRunFlow: boolean;
  PermissionsManageQuotas: boolean;
  PermissionsCreateCustomizeDashboards: boolean;
  PermissionsCreateDashboardFolders: boolean;
  PermissionsViewPublicDashboards: boolean;
  PermissionsManageDashbdsInPubFolders: boolean;
  PermissionsCreateCustomizeReports: boolean;
  PermissionsCreateReportFolders: boolean;
  PermissionsViewPublicReports: boolean;
  PermissionsManageReportsInPubFolders: boolean;
  PermissionsEditMyDashboards: boolean;
  PermissionsEditMyReports: boolean;
  PermissionsViewAllUsers: boolean;
  PermissionsConnectOrgToEnvironmentHub: boolean;
  PermissionsCreateCustomizeFilters: boolean;
  PermissionsContentHubUser: boolean;
  PermissionsGovernNetworks: boolean;
  PermissionsSalesConsole: boolean;
  PermissionsTwoFactorApi: boolean;
  PermissionsDeleteTopics: boolean;
  PermissionsEditTopics: boolean;
  PermissionsCreateTopics: boolean;
  PermissionsAssignTopics: boolean;
  PermissionsIdentityEnabled: boolean;
  PermissionsIdentityConnect: boolean;
  PermissionsContentWorkspaces: boolean;
  PermissionsCreateWorkBadgeDefinition: boolean;
  PermissionsCustomMobileAppsAccess: boolean;
  PermissionsViewHelpLink: boolean;
  PermissionsManageProfilesPermissionsets: boolean;
  PermissionsAssignPermissionSets: boolean;
  PermissionsManageRoles: boolean;
  PermissionsManageIpAddresses: boolean;
  PermissionsManageSharing: boolean;
  PermissionsManageInternalUsers: boolean;
  PermissionsManagePasswordPolicies: boolean;
  PermissionsManageLoginAccessPolicies: boolean;
  PermissionsManageCustomPermissions: boolean;
  PermissionsCanVerifyComment: boolean;
  PermissionsManageUnlistedGroups: boolean;
  PermissionsStdAutomaticActivityCapture: boolean;
  PermissionsInsightsAppDashboardEditor: boolean;
  PermissionsManageTwoFactor: boolean;
  PermissionsInsightsAppUser: boolean;
  PermissionsInsightsAppAdmin: boolean;
  PermissionsInsightsAppEltEditor: boolean;
  PermissionsInsightsAppUploadUser: boolean;
  PermissionsInsightsCreateApplication: boolean;
  PermissionsLightningExperienceUser: boolean;
  PermissionsConfigCustomRecs: boolean;
  PermissionsSubmitMacrosAllowed: boolean;
  PermissionsBulkMacrosAllowed: boolean;
  PermissionsManageSessionPermissionSets: boolean;
  PermissionsManageTemplatedApp: boolean;
  PermissionsUseTemplatedApp: boolean;
  PermissionsSendAnnouncementEmails: boolean;
  PermissionsChatterEditOwnPost: boolean;
  PermissionsChatterEditOwnRecordPost: boolean;
  PermissionsWaveTabularDownload: boolean;
  PermissionsManageSandboxes: boolean;
  PermissionsAutomaticActivityCapture: boolean;
  PermissionsImportCustomObjects: boolean;
  PermissionsSalesforceIQInbox: boolean;
  PermissionsDelegatedTwoFactor: boolean;
  PermissionsChatterComposeUiCodesnippet: boolean;
  PermissionsSelectFilesFromSalesforce: boolean;
  PermissionsModerateNetworkUsers: boolean;
  PermissionsMergeTopics: boolean;
  PermissionsEditIQFields: boolean;
  PermissionsSubscribeToLightningReports: boolean;
  PermissionsManagePvtRptsAndDashbds: boolean;
  PermissionsAllowLightningLogin: boolean;
  PermissionsCampaignInfluence2: boolean;
  PermissionsViewDataAssessment: boolean;
  PermissionsRemoveDirectMessageMembers: boolean;
  PermissionsCanApproveFeedPost: boolean;
  PermissionsAddDirectMessageMembers: boolean;
  PermissionsAllowViewEditConvertedLeads: boolean;
  PermissionsSocialInsightsLogoAdmin: boolean;
  PermissionsShowCompanyNameAsUserBadge: boolean;
  PermissionsAccessCMC: boolean;
  PermissionsViewHealthCheck: boolean;
  PermissionsManageHealthCheck: boolean;
  PermissionsPackaging2: boolean;
  PermissionsManageCertificates: boolean;
  PermissionsCreateReportInLightning: boolean;
  PermissionsPreventClassicExperience: boolean;
  PermissionsHideReadByList: boolean;
  PermissionsListEmailSend: boolean;
  PermissionsFeedPinning: boolean;
  PermissionsChangeDashboardColors: boolean;
  PermissionsManageRecommendationStrategies: boolean;
  PermissionsManagePropositions: boolean;
  PermissionsCloseConversations: boolean;
  PermissionsSubscribeReportRolesGrps: boolean;
  PermissionsSubscribeDashboardRolesGrps: boolean;
  PermissionsUseWebLink: boolean;
  PermissionsEditASEFields: boolean;
  PermissionsHasUnlimitedNBAExecutions: boolean;
  PermissionsViewOnlyEmbeddedAppUser: boolean;
  PermissionsSendExternalEmailAvailable: boolean;
  PermissionsViewAllActivities: boolean;
  PermissionsSubscribeReportToOtherUsers: boolean;
  PermissionsLightningConsoleAllowedForUser: boolean;
  PermissionsSubscribeReportsRunAsUser: boolean;
  PermissionsSubscribeToLightningDashboards: boolean;
  PermissionsSubscribeDashboardToOtherUsers: boolean;
  PermissionsCreateLtngTempInPub: boolean;
  PermissionsTransactionalEmailSend: boolean;
  PermissionsViewPrivateStaticResources: boolean;
  PermissionsCreateLtngTempFolder: boolean;
  PermissionsApexRestServices: boolean;
  PermissionsGiveRecognitionBadge: boolean;
  PermissionsUseMySearch: boolean;
  PermissionsLtngPromoReserved01UserPerm: boolean;
  PermissionsManageSubscriptions: boolean;
  PermissionsWaveManagePrivateAssetsUser: boolean;
  PermissionsCanEditDataPrepRecipe: boolean;
  PermissionsAddAnalyticsRemoteConnections: boolean;
  PermissionsManageSurveys: boolean;
  PermissionsUseAssistantDialog: boolean;
  PermissionsUseQuerySuggestions: boolean;
  PermissionsRecordVisibilityAPI: boolean;
  PermissionsViewRoles: boolean;
  PermissionsCanManageMaps: boolean;
  PermissionsLMOutboundMessagingUserPerm: boolean;
  PermissionsModifyDataClassification: boolean;
  PermissionsPrivacyDataAccess: boolean;
  PermissionsQueryAllFiles: boolean;
  PermissionsModifyMetadata: boolean;
  PermissionsManageCMS: boolean;
  PermissionsSandboxTestingInCommunityApp: boolean;
  PermissionsViewFlowUsageAndFlowEventData: boolean;
  PermissionsCanEditPrompts: boolean;
  PermissionsViewUserPII: boolean;
  PermissionsManageHubConnections: boolean;
  PermissionsB2BMarketingAnalyticsUser: boolean;
  PermissionsTraceXdsQueries: boolean;
  PermissionsViewAllCustomSettings: boolean;
  PermissionsViewAllForeignKeyNames: boolean;
  PermissionsAddWaveNotificationRecipients: boolean;
  PermissionsHeadlessCMSAccess: boolean;
  PermissionsLMEndMessagingSessionUserPerm: boolean;
  PermissionsConsentApiUpdate: boolean;
  PermissionsAccessContentBuilder: boolean;
  PermissionsAccountSwitcherUser: boolean;
  PermissionsManageC360AConnections: boolean;
  PermissionsManageReleaseUpdates: boolean;
  PermissionsViewAllProfiles: boolean;
  PermissionsSkipIdentityConfirmation: boolean;
  PermissionsSendCustomNotifications: boolean;
  PermissionsPackaging2Delete: boolean;
  PermissionsViewRestrictionAndScopingRules: boolean;
  PermissionsFSCComprehensiveUserAccess: boolean;
  PermissionsMicrosoftTeamsUser: boolean;
  PermissionsManageTrustMeasures: boolean;
  PermissionsViewTrustMeasures: boolean;
  PermissionsIsotopeCToCUser: boolean;
  PermissionsHasUnlimitedErbScoringRequests: boolean;
  PermissionsIsotopeAccess: boolean;
  PermissionsIsotopeLEX: boolean;
  PermissionsQuipMetricsAccess: boolean;
  PermissionsQuipUserEngagementMetrics: boolean;
  PermissionsManageExternalConnections: boolean;
  PermissionsUseSubscriptionEmails: boolean;
  PermissionsAIViewInsightObjects: boolean;
  PermissionsAICreateInsightObjects: boolean;
  PermissionsNativeWebviewScrolling: boolean;
};

type ParentReferences$UserPermissionAccess = {
  //
};

type ChildRelationships$UserPermissionAccess = {
  //
};

interface SObjectDefinition$UserPermissionAccess extends SObjectDefinition<'UserPermissionAccess'> {
    Name: 'UserPermissionAccess';
    Fields: Fields$UserPermissionAccess;
    ParentReferences: ParentReferences$UserPermissionAccess;
    ChildRelationships: ChildRelationships$UserPermissionAccess;
  }

type Fields$UserPreference = {
  //
  Id: string;
  UserId: string;
  Preference: string;
  Value: string | null;
  SystemModstamp: DateString;
};

type ParentReferences$UserPreference = {
  //
};

type ChildRelationships$UserPreference = {
  //
};

interface SObjectDefinition$UserPreference extends SObjectDefinition<'UserPreference'> {
    Name: 'UserPreference';
    Fields: Fields$UserPreference;
    ParentReferences: ParentReferences$UserPreference;
    ChildRelationships: ChildRelationships$UserPreference;
  }

type Fields$UserProvAccount = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SalesforceUserId: string | null;
  ConnectedAppId: string | null;
  ExternalUserId: string | null;
  ExternalUsername: string | null;
  ExternalEmail: string | null;
  ExternalFirstName: string | null;
  ExternalLastName: string | null;
  LinkState: string;
  Status: string;
  DeletedDate: DateString | null;
  IsKnownLink: boolean;
};

type ParentReferences$UserProvAccount = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SalesforceUser: SObjectDefinition$User | null;
  ConnectedApp: SObjectDefinition$ConnectedApplication | null;
};

type ChildRelationships$UserProvAccount = {
  //
};

interface SObjectDefinition$UserProvAccount extends SObjectDefinition<'UserProvAccount'> {
    Name: 'UserProvAccount';
    Fields: Fields$UserProvAccount;
    ParentReferences: ParentReferences$UserProvAccount;
    ChildRelationships: ChildRelationships$UserProvAccount;
  }

type Fields$UserProvAccountStaging = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ConnectedAppId: string | null;
  SalesforceUserId: string | null;
  ExternalUserId: string | null;
  ExternalUsername: string | null;
  ExternalEmail: string | null;
  ExternalFirstName: string | null;
  ExternalLastName: string | null;
  LinkState: string;
  Status: string;
};

type ParentReferences$UserProvAccountStaging = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ConnectedApp: SObjectDefinition$ConnectedApplication | null;
  SalesforceUser: SObjectDefinition$User | null;
};

type ChildRelationships$UserProvAccountStaging = {
  //
};

interface SObjectDefinition$UserProvAccountStaging extends SObjectDefinition<'UserProvAccountStaging'> {
    Name: 'UserProvAccountStaging';
    Fields: Fields$UserProvAccountStaging;
    ParentReferences: ParentReferences$UserProvAccountStaging;
    ChildRelationships: ChildRelationships$UserProvAccountStaging;
  }

type Fields$UserProvMockTarget = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ExternalUserId: string | null;
  ExternalUsername: string | null;
  ExternalEmail: string | null;
  ExternalFirstName: string | null;
  ExternalLastName: string | null;
};

type ParentReferences$UserProvMockTarget = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserProvMockTarget = {
  //
};

interface SObjectDefinition$UserProvMockTarget extends SObjectDefinition<'UserProvMockTarget'> {
    Name: 'UserProvMockTarget';
    Fields: Fields$UserProvMockTarget;
    ParentReferences: ParentReferences$UserProvMockTarget;
    ChildRelationships: ChildRelationships$UserProvMockTarget;
  }

type Fields$UserProvisioningConfig = {
  //
  Id: string;
  IsDeleted: boolean;
  DeveloperName: string;
  Language: string | null;
  MasterLabel: string;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ConnectedAppId: string | null;
  Notes: string | null;
  Enabled: boolean;
  ApprovalRequired: string | null;
  UserAccountMapping: string | null;
  EnabledOperations: string | null;
  OnUpdateAttributes: string | null;
  LastReconDateTime: DateString | null;
  NamedCredentialId: string | null;
  ReconFilter: string | null;
};

type ParentReferences$UserProvisioningConfig = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  ConnectedApp: SObjectDefinition$ConnectedApplication | null;
  NamedCredential: SObjectDefinition$NamedCredential | null;
};

type ChildRelationships$UserProvisioningConfig = {
  //
};

interface SObjectDefinition$UserProvisioningConfig extends SObjectDefinition<'UserProvisioningConfig'> {
    Name: 'UserProvisioningConfig';
    Fields: Fields$UserProvisioningConfig;
    ParentReferences: ParentReferences$UserProvisioningConfig;
    ChildRelationships: ChildRelationships$UserProvisioningConfig;
  }

type Fields$UserProvisioningLog = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  UserProvisioningRequestId: string | null;
  ExternalUserId: string | null;
  ExternalUsername: string | null;
  UserId: string | null;
  Status: string | null;
  Details: string | null;
};

type ParentReferences$UserProvisioningLog = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  UserProvisioningRequest: SObjectDefinition$UserProvisioningRequest | null;
  User: SObjectDefinition$User | null;
};

type ChildRelationships$UserProvisioningLog = {
  //
};

interface SObjectDefinition$UserProvisioningLog extends SObjectDefinition<'UserProvisioningLog'> {
    Name: 'UserProvisioningLog';
    Fields: Fields$UserProvisioningLog;
    ParentReferences: ParentReferences$UserProvisioningLog;
    ChildRelationships: ChildRelationships$UserProvisioningLog;
  }

type Fields$UserProvisioningRequest = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  SalesforceUserId: string | null;
  ExternalUserId: string | null;
  AppName: string | null;
  State: string;
  Operation: string;
  ScheduleDate: DateString | null;
  ConnectedAppId: string | null;
  UserProvConfigId: string | null;
  UserProvAccountId: string | null;
  ApprovalStatus: string;
  ManagerId: string | null;
  RetryCount: number | null;
  ParentId: string | null;
};

type ParentReferences$UserProvisioningRequest = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  SalesforceUser: SObjectDefinition$User | null;
  ConnectedApp: SObjectDefinition$ConnectedApplication | null;
  UserProvConfig: SObjectDefinition$UserProvisioningConfig | null;
  UserProvAccount: SObjectDefinition$UserProvAccount | null;
  Manager: SObjectDefinition$User | null;
  Parent: SObjectDefinition$UserProvisioningRequest | null;
};

type ChildRelationships$UserProvisioningRequest = {
  //
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  Shares: SObjectDefinition$UserProvisioningRequestShare;
};

interface SObjectDefinition$UserProvisioningRequest extends SObjectDefinition<'UserProvisioningRequest'> {
    Name: 'UserProvisioningRequest';
    Fields: Fields$UserProvisioningRequest;
    ParentReferences: ParentReferences$UserProvisioningRequest;
    ChildRelationships: ChildRelationships$UserProvisioningRequest;
  }

type Fields$UserProvisioningRequestShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$UserProvisioningRequestShare = {
  //
  Parent: SObjectDefinition$UserProvisioningRequest;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserProvisioningRequestShare = {
  //
};

interface SObjectDefinition$UserProvisioningRequestShare extends SObjectDefinition<'UserProvisioningRequestShare'> {
    Name: 'UserProvisioningRequestShare';
    Fields: Fields$UserProvisioningRequestShare;
    ParentReferences: ParentReferences$UserProvisioningRequestShare;
    ChildRelationships: ChildRelationships$UserProvisioningRequestShare;
  }

type Fields$UserRecordAccess = {
  //
  Id: string;
  UserId: string;
  RecordId: string;
  HasReadAccess: boolean;
  HasEditAccess: boolean;
  HasDeleteAccess: boolean;
  HasTransferAccess: boolean;
  HasAllAccess: boolean;
  MaxAccessLevel: string | null;
};

type ParentReferences$UserRecordAccess = {
  //
};

type ChildRelationships$UserRecordAccess = {
  //
};

interface SObjectDefinition$UserRecordAccess extends SObjectDefinition<'UserRecordAccess'> {
    Name: 'UserRecordAccess';
    Fields: Fields$UserRecordAccess;
    ParentReferences: ParentReferences$UserRecordAccess;
    ChildRelationships: ChildRelationships$UserRecordAccess;
  }

type Fields$UserRole = {
  //
  Id: string;
  Name: string;
  ParentRoleId: string | null;
  RollupDescription: string | null;
  OpportunityAccessForAccountOwner: string;
  CaseAccessForAccountOwner: string | null;
  ContactAccessForAccountOwner: string | null;
  ForecastUserId: string | null;
  MayForecastManagerShare: boolean;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  DeveloperName: string | null;
  PortalAccountId: string | null;
  PortalType: string | null;
  PortalAccountOwnerId: string | null;
};

type ParentReferences$UserRole = {
  //
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserRole = {
  //
  Users: SObjectDefinition$User;
};

interface SObjectDefinition$UserRole extends SObjectDefinition<'UserRole'> {
    Name: 'UserRole';
    Fields: Fields$UserRole;
    ParentReferences: ParentReferences$UserRole;
    ChildRelationships: ChildRelationships$UserRole;
  }

type Fields$UserSetupEntityAccess = {
  //
  Id: string;
  DurableId: string | null;
  SetupEntityId: string | null;
  KeyPrefix: string | null;
  DeveloperName: string | null;
  NamespacePrefix: string | null;
  LastCacheUpdate: DateString | null;
};

type ParentReferences$UserSetupEntityAccess = {
  //
};

type ChildRelationships$UserSetupEntityAccess = {
  //
};

interface SObjectDefinition$UserSetupEntityAccess extends SObjectDefinition<'UserSetupEntityAccess'> {
    Name: 'UserSetupEntityAccess';
    Fields: Fields$UserSetupEntityAccess;
    ParentReferences: ParentReferences$UserSetupEntityAccess;
    ChildRelationships: ChildRelationships$UserSetupEntityAccess;
  }

type Fields$UserShare = {
  //
  Id: string;
  UserId: string;
  UserOrGroupId: string;
  UserAccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsActive: boolean;
};

type ParentReferences$UserShare = {
  //
  User: SObjectDefinition$User;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserShare = {
  //
};

interface SObjectDefinition$UserShare extends SObjectDefinition<'UserShare'> {
    Name: 'UserShare';
    Fields: Fields$UserShare;
    ParentReferences: ParentReferences$UserShare;
    ChildRelationships: ChildRelationships$UserShare;
  }

type Fields$UserTeamMember = {
  //
  Id: string;
  OwnerId: string;
  UserId: string;
  OpportunityAccessLevel: string;
  TeamMemberRole: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$UserTeamMember = {
  //
  User: SObjectDefinition$User;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$UserTeamMember = {
  //
};

interface SObjectDefinition$UserTeamMember extends SObjectDefinition<'UserTeamMember'> {
    Name: 'UserTeamMember';
    Fields: Fields$UserTeamMember;
    ParentReferences: ParentReferences$UserTeamMember;
    ChildRelationships: ChildRelationships$UserTeamMember;
  }

type Fields$VerificationHistory = {
  //
  Id: string;
  EventGroup: number;
  VerificationTime: DateString;
  VerificationMethod: string | null;
  UserId: string;
  Activity: string;
  Status: string;
  LoginHistoryId: string;
  SourceIp: string;
  LoginGeoId: string | null;
  Remarks: string | null;
  ResourceId: string | null;
  Policy: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedById: string;
  LastModifiedDate: DateString;
  IsDeleted: boolean;
  SystemModstamp: DateString;
};

type ParentReferences$VerificationHistory = {
  //
  User: SObjectDefinition$User;
  LoginHistory: SObjectDefinition$LoginHistory;
  LoginGeo: SObjectDefinition$LoginGeo | null;
  Resource: SObjectDefinition$ConnectedApplication | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$VerificationHistory = {
  //
};

interface SObjectDefinition$VerificationHistory extends SObjectDefinition<'VerificationHistory'> {
    Name: 'VerificationHistory';
    Fields: Fields$VerificationHistory;
    ParentReferences: ParentReferences$VerificationHistory;
    ChildRelationships: ChildRelationships$VerificationHistory;
  }

type Fields$VisualforceAccessMetrics = {
  //
  Id: string;
  MetricsDate: DateString;
  ApexPageId: string;
  ProfileId: string | null;
  SystemModstamp: DateString;
  DailyPageViewCount: number | null;
  LogDate: DateString | null;
};

type ParentReferences$VisualforceAccessMetrics = {
  //
  ApexPage: SObjectDefinition$ApexPage;
  Profile: SObjectDefinition$Profile | null;
};

type ChildRelationships$VisualforceAccessMetrics = {
  //
};

interface SObjectDefinition$VisualforceAccessMetrics extends SObjectDefinition<'VisualforceAccessMetrics'> {
    Name: 'VisualforceAccessMetrics';
    Fields: Fields$VisualforceAccessMetrics;
    ParentReferences: ParentReferences$VisualforceAccessMetrics;
    ChildRelationships: ChildRelationships$VisualforceAccessMetrics;
  }

type Fields$Vote = {
  //
  Id: string;
  IsDeleted: boolean;
  ParentId: string;
  Type: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$Vote = {
  //
  Parent: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Vote = {
  //
};

interface SObjectDefinition$Vote extends SObjectDefinition<'Vote'> {
    Name: 'Vote';
    Fields: Fields$Vote;
    ParentReferences: ParentReferences$Vote;
    ChildRelationships: ChildRelationships$Vote;
  }

type Fields$Voucher__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  Cost__c: number | null;
  Date_of_Purchase__c: DateString | null;
  Expiration_Date__c: DateString | null;
  Nmb_of_Attempts_Allowed__c: string | null;
  Registration_Drop_Dead_Date__c: DateString | null;
  Credential_Name__c: string | null;
  Voucher_ID_Code__c: string | null;
  Status__c: string | null;
  Assignment_Count__c: number | null;
};

type ParentReferences$Voucher__ChangeEvent = {
  //
};

type ChildRelationships$Voucher__ChangeEvent = {
  //
};

interface SObjectDefinition$Voucher__ChangeEvent extends SObjectDefinition<'Voucher__ChangeEvent'> {
    Name: 'Voucher__ChangeEvent';
    Fields: Fields$Voucher__ChangeEvent;
    ParentReferences: ParentReferences$Voucher__ChangeEvent;
    ChildRelationships: ChildRelationships$Voucher__ChangeEvent;
  }

type Fields$Voucher__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastActivityDate: DateString | null;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  Cost__c: number;
  Date_of_Purchase__c: DateString | null;
  Expiration_Date__c: DateString | null;
  Nmb_of_Attempts_Allowed__c: string;
  Registration_Drop_Dead_Date__c: DateString | null;
  Credential_Name__c: string | null;
  Voucher_ID_Code__c: string;
  Status__c: string | null;
  Assignment_Count__c: number | null;
};

type ParentReferences$Voucher__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$Voucher__c = {
  //
  ActivityHistories: SObjectDefinition$ActivityHistory;
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  Emails: SObjectDefinition$EmailMessage;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  Events: SObjectDefinition$Event;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  OpenActivities: SObjectDefinition$OpenActivity;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  Tasks: SObjectDefinition$Task;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$Voucher__c extends SObjectDefinition<'Voucher__c'> {
    Name: 'Voucher__c';
    Fields: Fields$Voucher__c;
    ParentReferences: ParentReferences$Voucher__c;
    ChildRelationships: ChildRelationships$Voucher__c;
  }

type Fields$WaveAutoInstallRequest = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TemplateApiName: string | null;
  TemplateVersion: string | null;
  FolderId: string | null;
  RequestType: string;
  RequestStatus: string;
  FailedReason: string | null;
  Configuration: string | null;
  RequestLog: string | null;
};

type ParentReferences$WaveAutoInstallRequest = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Folder: SObjectDefinition$Folder | null;
};

type ChildRelationships$WaveAutoInstallRequest = {
  //
  WaveCompatibilityCheckItems: SObjectDefinition$WaveCompatibilityCheckItem;
};

interface SObjectDefinition$WaveAutoInstallRequest extends SObjectDefinition<'WaveAutoInstallRequest'> {
    Name: 'WaveAutoInstallRequest';
    Fields: Fields$WaveAutoInstallRequest;
    ParentReferences: ParentReferences$WaveAutoInstallRequest;
    ChildRelationships: ChildRelationships$WaveAutoInstallRequest;
  }

type Fields$WaveCompatibilityCheckItem = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  TaskName: string;
  TaskResult: string;
  TemplateApiName: string;
  TemplateVersion: string | null;
  Payload: string | null;
  WaveAutoInstallRequestId: string | null;
};

type ParentReferences$WaveCompatibilityCheckItem = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  WaveAutoInstallRequest: SObjectDefinition$WaveAutoInstallRequest | null;
};

type ChildRelationships$WaveCompatibilityCheckItem = {
  //
};

interface SObjectDefinition$WaveCompatibilityCheckItem extends SObjectDefinition<'WaveCompatibilityCheckItem'> {
    Name: 'WaveCompatibilityCheckItem';
    Fields: Fields$WaveCompatibilityCheckItem;
    ParentReferences: ParentReferences$WaveCompatibilityCheckItem;
    ChildRelationships: ChildRelationships$WaveCompatibilityCheckItem;
  }

type Fields$WebLink = {
  //
  Id: string;
  PageOrSobjectType: string;
  Name: string;
  IsProtected: boolean;
  Url: string | null;
  EncodingKey: string;
  LinkType: string;
  OpenType: string;
  Height: number | null;
  Width: number | null;
  ShowsLocation: boolean;
  HasScrollbars: boolean;
  HasToolbar: boolean;
  HasMenubar: boolean;
  ShowsStatus: boolean;
  IsResizable: boolean;
  Position: string | null;
  ScontrolId: string | null;
  MasterLabel: string | null;
  Description: string | null;
  DisplayType: string;
  RequireRowSelection: boolean;
  NamespacePrefix: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
};

type ParentReferences$WebLink = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WebLink = {
  //
};

interface SObjectDefinition$WebLink extends SObjectDefinition<'WebLink'> {
    Name: 'WebLink';
    Fields: Fields$WebLink;
    ParentReferences: ParentReferences$WebLink;
    ChildRelationships: ChildRelationships$WebLink;
  }

type Fields$WorkAccess = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  ParentId: string;
  AccessType: string;
};

type ParentReferences$WorkAccess = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Parent: SObjectDefinition$WorkBadgeDefinition;
};

type ChildRelationships$WorkAccess = {
  //
  Shares: SObjectDefinition$WorkAccessShare;
};

interface SObjectDefinition$WorkAccess extends SObjectDefinition<'WorkAccess'> {
    Name: 'WorkAccess';
    Fields: Fields$WorkAccess;
    ParentReferences: ParentReferences$WorkAccess;
    ChildRelationships: ChildRelationships$WorkAccess;
  }

type Fields$WorkAccessShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkAccessShare = {
  //
  Parent: SObjectDefinition$WorkAccess;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkAccessShare = {
  //
};

interface SObjectDefinition$WorkAccessShare extends SObjectDefinition<'WorkAccessShare'> {
    Name: 'WorkAccessShare';
    Fields: Fields$WorkAccessShare;
    ParentReferences: ParentReferences$WorkAccessShare;
    ChildRelationships: ChildRelationships$WorkAccessShare;
  }

type Fields$WorkBadge = {
  //
  Id: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  SourceId: string;
  DefinitionId: string;
  RecipientId: string;
  GiverId: string | null;
  ImageUrl: string | null;
  Description: string | null;
  Message: string | null;
};

type ParentReferences$WorkBadge = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Source: SObjectDefinition$WorkThanks;
  Definition: SObjectDefinition$WorkBadgeDefinition;
  Recipient: SObjectDefinition$User;
  Giver: SObjectDefinition$User | null;
};

type ChildRelationships$WorkBadge = {
  //
};

interface SObjectDefinition$WorkBadge extends SObjectDefinition<'WorkBadge'> {
    Name: 'WorkBadge';
    Fields: Fields$WorkBadge;
    ParentReferences: ParentReferences$WorkBadge;
    ChildRelationships: ChildRelationships$WorkBadge;
  }

type Fields$WorkBadgeDefinition = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  LastViewedDate: DateString | null;
  LastReferencedDate: DateString | null;
  IsCompanyWide: boolean;
  Description: string;
  ImageUrl: string;
  IsActive: boolean;
  LimitNumber: number | null;
  IsLimitPerUser: boolean;
  LimitStartDate: DateString | null;
  GivenBadgeCount: number | null;
  IsRewardBadge: boolean;
};

type ParentReferences$WorkBadgeDefinition = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkBadgeDefinition = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  WorkAccesses: SObjectDefinition$WorkAccess;
  Badges: SObjectDefinition$WorkBadge;
  Feeds: SObjectDefinition$WorkBadgeDefinitionFeed;
  Histories: SObjectDefinition$WorkBadgeDefinitionHistory;
  Shares: SObjectDefinition$WorkBadgeDefinitionShare;
};

interface SObjectDefinition$WorkBadgeDefinition extends SObjectDefinition<'WorkBadgeDefinition'> {
    Name: 'WorkBadgeDefinition';
    Fields: Fields$WorkBadgeDefinition;
    ParentReferences: ParentReferences$WorkBadgeDefinition;
    ChildRelationships: ChildRelationships$WorkBadgeDefinition;
  }

type Fields$WorkBadgeDefinitionFeed = {
  //
  Id: string;
  ParentId: string;
  Type: string | null;
  CreatedById: string;
  CreatedDate: DateString;
  IsDeleted: boolean;
  LastModifiedDate: DateString;
  SystemModstamp: DateString;
  CommentCount: number;
  LikeCount: number;
  Title: string | null;
  Body: string | null;
  LinkUrl: string | null;
  IsRichText: boolean;
  RelatedRecordId: string | null;
  InsertedById: string | null;
  BestCommentId: string | null;
};

type ParentReferences$WorkBadgeDefinitionFeed = {
  //
  Parent: SObjectDefinition$WorkBadgeDefinition;
  CreatedBy: SObjectDefinition$User;
  InsertedBy: SObjectDefinition$User | null;
  BestComment: SObjectDefinition$FeedComment | null;
};

type ChildRelationships$WorkBadgeDefinitionFeed = {
  //
  FeedAttachments: SObjectDefinition$FeedAttachment;
  FeedComments: SObjectDefinition$FeedComment;
  FeedLikes: SObjectDefinition$FeedLike;
  FeedSignals: SObjectDefinition$FeedSignal;
  FeedTrackedChanges: SObjectDefinition$FeedTrackedChange;
};

interface SObjectDefinition$WorkBadgeDefinitionFeed extends SObjectDefinition<'WorkBadgeDefinitionFeed'> {
    Name: 'WorkBadgeDefinitionFeed';
    Fields: Fields$WorkBadgeDefinitionFeed;
    ParentReferences: ParentReferences$WorkBadgeDefinitionFeed;
    ChildRelationships: ChildRelationships$WorkBadgeDefinitionFeed;
  }

type Fields$WorkBadgeDefinitionHistory = {
  //
  Id: string;
  IsDeleted: boolean;
  WorkBadgeDefinitionId: string;
  CreatedById: string;
  CreatedDate: DateString;
  Field: string;
  DataType: string | null;
  OldValue: string | null;
  NewValue: string | null;
};

type ParentReferences$WorkBadgeDefinitionHistory = {
  //
  WorkBadgeDefinition: SObjectDefinition$WorkBadgeDefinition;
  CreatedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkBadgeDefinitionHistory = {
  //
};

interface SObjectDefinition$WorkBadgeDefinitionHistory extends SObjectDefinition<'WorkBadgeDefinitionHistory'> {
    Name: 'WorkBadgeDefinitionHistory';
    Fields: Fields$WorkBadgeDefinitionHistory;
    ParentReferences: ParentReferences$WorkBadgeDefinitionHistory;
    ChildRelationships: ChildRelationships$WorkBadgeDefinitionHistory;
  }

type Fields$WorkBadgeDefinitionShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkBadgeDefinitionShare = {
  //
  Parent: SObjectDefinition$WorkBadgeDefinition;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkBadgeDefinitionShare = {
  //
};

interface SObjectDefinition$WorkBadgeDefinitionShare extends SObjectDefinition<'WorkBadgeDefinitionShare'> {
    Name: 'WorkBadgeDefinitionShare';
    Fields: Fields$WorkBadgeDefinitionShare;
    ParentReferences: ParentReferences$WorkBadgeDefinitionShare;
    ChildRelationships: ChildRelationships$WorkBadgeDefinitionShare;
  }

type Fields$WorkThanks = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  GiverId: string;
  Message: string;
  FeedItemId: string | null;
};

type ParentReferences$WorkThanks = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  Giver: SObjectDefinition$User;
  FeedItem: SObjectDefinition$FeedItem | null;
};

type ChildRelationships$WorkThanks = {
  //
  Badges: SObjectDefinition$WorkBadge;
  Shares: SObjectDefinition$WorkThanksShare;
};

interface SObjectDefinition$WorkThanks extends SObjectDefinition<'WorkThanks'> {
    Name: 'WorkThanks';
    Fields: Fields$WorkThanks;
    ParentReferences: ParentReferences$WorkThanks;
    ChildRelationships: ChildRelationships$WorkThanks;
  }

type Fields$WorkThanksShare = {
  //
  Id: string;
  ParentId: string;
  UserOrGroupId: string;
  AccessLevel: string;
  RowCause: string | null;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  IsDeleted: boolean;
};

type ParentReferences$WorkThanksShare = {
  //
  Parent: SObjectDefinition$WorkThanks;
  UserOrGroup: SObjectDefinition$Name;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$WorkThanksShare = {
  //
};

interface SObjectDefinition$WorkThanksShare extends SObjectDefinition<'WorkThanksShare'> {
    Name: 'WorkThanksShare';
    Fields: Fields$WorkThanksShare;
    ParentReferences: ParentReferences$WorkThanksShare;
    ChildRelationships: ChildRelationships$WorkThanksShare;
  }

type Fields$pandadoc__DocStatus__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__PandaDocDocument__c: string | null;
  pandadoc__InputJSON_EV2__c: string | null;
  pandadoc__InputJSON__c: string | null;
  pandadoc__Status__c: string | null;
};

type ParentReferences$pandadoc__DocStatus__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__DocStatus__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__DocStatus__ChangeEvent extends SObjectDefinition<'pandadoc__DocStatus__ChangeEvent'> {
    Name: 'pandadoc__DocStatus__ChangeEvent';
    Fields: Fields$pandadoc__DocStatus__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__DocStatus__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__DocStatus__ChangeEvent;
  }

type Fields$pandadoc__DocStatus__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__PandaDocDocument__c: string;
  pandadoc__InputJSON_EV2__c: string | null;
  pandadoc__InputJSON__c: string | null;
  pandadoc__Status__c: string | null;
};

type ParentReferences$pandadoc__DocStatus__c = {
  //
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  pandadoc__PandaDocDocument__r: SObjectDefinition$pandadoc__PandaDocDocument__c;
};

type ChildRelationships$pandadoc__DocStatus__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__DocStatus__c extends SObjectDefinition<'pandadoc__DocStatus__c'> {
    Name: 'pandadoc__DocStatus__c';
    Fields: Fields$pandadoc__DocStatus__c;
    ParentReferences: ParentReferences$pandadoc__DocStatus__c;
    ChildRelationships: ChildRelationships$pandadoc__DocStatus__c;
  }

type Fields$pandadoc__Object_Tokens__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__Data__c: string | null;
};

type ParentReferences$pandadoc__Object_Tokens__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__Object_Tokens__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__Object_Tokens__ChangeEvent extends SObjectDefinition<'pandadoc__Object_Tokens__ChangeEvent'> {
    Name: 'pandadoc__Object_Tokens__ChangeEvent';
    Fields: Fields$pandadoc__Object_Tokens__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__Object_Tokens__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__Object_Tokens__ChangeEvent;
  }

type Fields$pandadoc__Object_Tokens__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__Data__c: string | null;
};

type ParentReferences$pandadoc__Object_Tokens__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$pandadoc__Object_Tokens__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__Object_Tokens__c extends SObjectDefinition<'pandadoc__Object_Tokens__c'> {
    Name: 'pandadoc__Object_Tokens__c';
    Fields: Fields$pandadoc__Object_Tokens__c;
    ParentReferences: ParentReferences$pandadoc__Object_Tokens__c;
    ChildRelationships: ChildRelationships$pandadoc__Object_Tokens__c;
  }

type Fields$pandadoc__PandaDocDocument__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__Account__c: string | null;
  pandadoc__Contact__c: string | null;
  pandadoc__Custom_Object_Id__c: string | null;
  pandadoc__Editor_Version__c: string | null;
  pandadoc__File_With_Content__c: string | null;
  pandadoc__InputJSON_EV2__c: string | null;
  pandadoc__InputJSON__c: string | null;
  pandadoc__Is_Deleted__c: boolean;
  pandadoc__Lead__c: string | null;
  pandadoc__Opportunity__c: string | null;
  pandadoc__Status__c: string | null;
  pandadoc__Template_Id__c: string | null;
  pandadoc__Template_Name__c: string | null;
  pandadoc__UUID__c: string | null;
  pandadoc__ParentId__c: string | null;
};

type ParentReferences$pandadoc__PandaDocDocument__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__PandaDocDocument__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__PandaDocDocument__ChangeEvent extends SObjectDefinition<'pandadoc__PandaDocDocument__ChangeEvent'> {
    Name: 'pandadoc__PandaDocDocument__ChangeEvent';
    Fields: Fields$pandadoc__PandaDocDocument__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__PandaDocDocument__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__PandaDocDocument__ChangeEvent;
  }

type Fields$pandadoc__PandaDocDocument__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__Account__c: string | null;
  pandadoc__Contact__c: string | null;
  pandadoc__Custom_Object_Id__c: string | null;
  pandadoc__Editor_Version__c: string | null;
  pandadoc__File_With_Content__c: string | null;
  pandadoc__InputJSON_EV2__c: string | null;
  pandadoc__InputJSON__c: string | null;
  pandadoc__Is_Deleted__c: boolean;
  pandadoc__Lead__c: string | null;
  pandadoc__Opportunity__c: string | null;
  pandadoc__Status__c: string | null;
  pandadoc__Template_Id__c: string | null;
  pandadoc__Template_Name__c: string | null;
  pandadoc__UUID__c: string | null;
  pandadoc__ParentId__c: string | null;
};

type ParentReferences$pandadoc__PandaDocDocument__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
  pandadoc__Account__r: SObjectDefinition$Account | null;
  pandadoc__Contact__r: SObjectDefinition$Contact | null;
  pandadoc__Lead__r: SObjectDefinition$Lead | null;
  pandadoc__Opportunity__r: SObjectDefinition$Opportunity | null;
};

type ChildRelationships$pandadoc__PandaDocDocument__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__PandaDocDocument__c extends SObjectDefinition<'pandadoc__PandaDocDocument__c'> {
    Name: 'pandadoc__PandaDocDocument__c';
    Fields: Fields$pandadoc__PandaDocDocument__c;
    ParentReferences: ParentReferences$pandadoc__PandaDocDocument__c;
    ChildRelationships: ChildRelationships$pandadoc__PandaDocDocument__c;
  }

type Fields$pandadoc__PandaDocLog__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__Description__c: string | null;
  pandadoc__Level__c: string | null;
  pandadoc__Location__c: string | null;
};

type ParentReferences$pandadoc__PandaDocLog__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__PandaDocLog__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__PandaDocLog__ChangeEvent extends SObjectDefinition<'pandadoc__PandaDocLog__ChangeEvent'> {
    Name: 'pandadoc__PandaDocLog__ChangeEvent';
    Fields: Fields$pandadoc__PandaDocLog__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__PandaDocLog__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__PandaDocLog__ChangeEvent;
  }

type Fields$pandadoc__PandaDocLog__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__Description__c: string | null;
  pandadoc__Level__c: string | null;
  pandadoc__Location__c: string | null;
};

type ParentReferences$pandadoc__PandaDocLog__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$pandadoc__PandaDocLog__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__PandaDocLog__c extends SObjectDefinition<'pandadoc__PandaDocLog__c'> {
    Name: 'pandadoc__PandaDocLog__c';
    Fields: Fields$pandadoc__PandaDocLog__c;
    ParentReferences: ParentReferences$pandadoc__PandaDocLog__c;
    ChildRelationships: ChildRelationships$pandadoc__PandaDocLog__c;
  }

type Fields$pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__Document_Name__c: string | null;
  pandadoc__JsonBuilder_Class_Name__c: string | null;
  pandadoc__ReferencedRecipients__c: string | null;
  pandadoc__Related_Pricing_Items__c: string | null;
  pandadoc__Related_Recipients__c: string | null;
  pandadoc__Send_Itself_As_Recipient__c: boolean;
  pandadoc__Use_Standard_Builder__c: boolean;
};

type ParentReferences$pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent extends SObjectDefinition<'pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent'> {
    Name: 'pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent';
    Fields: Fields$pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent;
  }

type Fields$pandadoc__PandaDoc_JsonBulder_Mapping__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__Document_Name__c: string | null;
  pandadoc__JsonBuilder_Class_Name__c: string;
  pandadoc__ReferencedRecipients__c: string | null;
  pandadoc__Related_Pricing_Items__c: string | null;
  pandadoc__Related_Recipients__c: string | null;
  pandadoc__Send_Itself_As_Recipient__c: boolean;
  pandadoc__Use_Standard_Builder__c: boolean;
};

type ParentReferences$pandadoc__PandaDoc_JsonBulder_Mapping__c = {
  //
  SetupOwner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$pandadoc__PandaDoc_JsonBulder_Mapping__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__PandaDoc_JsonBulder_Mapping__c extends SObjectDefinition<'pandadoc__PandaDoc_JsonBulder_Mapping__c'> {
    Name: 'pandadoc__PandaDoc_JsonBulder_Mapping__c';
    Fields: Fields$pandadoc__PandaDoc_JsonBulder_Mapping__c;
    ParentReferences: ParentReferences$pandadoc__PandaDoc_JsonBulder_Mapping__c;
    ChildRelationships: ChildRelationships$pandadoc__PandaDoc_JsonBulder_Mapping__c;
  }

type Fields$pandadoc__Pricing_Item_Mapping__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__Config_JSON__c: string | null;
};

type ParentReferences$pandadoc__Pricing_Item_Mapping__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__Pricing_Item_Mapping__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__Pricing_Item_Mapping__ChangeEvent extends SObjectDefinition<'pandadoc__Pricing_Item_Mapping__ChangeEvent'> {
    Name: 'pandadoc__Pricing_Item_Mapping__ChangeEvent';
    Fields: Fields$pandadoc__Pricing_Item_Mapping__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__Pricing_Item_Mapping__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__Pricing_Item_Mapping__ChangeEvent;
  }

type Fields$pandadoc__Pricing_Item_Mapping__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__Config_JSON__c: string | null;
};

type ParentReferences$pandadoc__Pricing_Item_Mapping__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$pandadoc__Pricing_Item_Mapping__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__Pricing_Item_Mapping__c extends SObjectDefinition<'pandadoc__Pricing_Item_Mapping__c'> {
    Name: 'pandadoc__Pricing_Item_Mapping__c';
    Fields: Fields$pandadoc__Pricing_Item_Mapping__c;
    ParentReferences: ParentReferences$pandadoc__Pricing_Item_Mapping__c;
    ChildRelationships: ChildRelationships$pandadoc__Pricing_Item_Mapping__c;
  }

type Fields$pandadoc__Recipient_Map__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__Config_JSON__c: string | null;
};

type ParentReferences$pandadoc__Recipient_Map__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__Recipient_Map__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__Recipient_Map__ChangeEvent extends SObjectDefinition<'pandadoc__Recipient_Map__ChangeEvent'> {
    Name: 'pandadoc__Recipient_Map__ChangeEvent';
    Fields: Fields$pandadoc__Recipient_Map__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__Recipient_Map__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__Recipient_Map__ChangeEvent;
  }

type Fields$pandadoc__Recipient_Map__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__Config_JSON__c: string | null;
};

type ParentReferences$pandadoc__Recipient_Map__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$pandadoc__Recipient_Map__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__Recipient_Map__c extends SObjectDefinition<'pandadoc__Recipient_Map__c'> {
    Name: 'pandadoc__Recipient_Map__c';
    Fields: Fields$pandadoc__Recipient_Map__c;
    ParentReferences: ParentReferences$pandadoc__Recipient_Map__c;
    ChildRelationships: ChildRelationships$pandadoc__Recipient_Map__c;
  }

type Fields$pandadoc__Settings__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__Value__c: string | null;
};

type ParentReferences$pandadoc__Settings__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__Settings__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__Settings__ChangeEvent extends SObjectDefinition<'pandadoc__Settings__ChangeEvent'> {
    Name: 'pandadoc__Settings__ChangeEvent';
    Fields: Fields$pandadoc__Settings__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__Settings__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__Settings__ChangeEvent;
  }

type Fields$pandadoc__Settings__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__Value__c: string | null;
};

type ParentReferences$pandadoc__Settings__c = {
  //
  SetupOwner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$pandadoc__Settings__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__Settings__c extends SObjectDefinition<'pandadoc__Settings__c'> {
    Name: 'pandadoc__Settings__c';
    Fields: Fields$pandadoc__Settings__c;
    ParentReferences: ParentReferences$pandadoc__Settings__c;
    ChildRelationships: ChildRelationships$pandadoc__Settings__c;
  }

type Fields$pandadoc__TriggerSetting__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  pandadoc__Custom_Settings__c: string | null;
  pandadoc__EV1_Ready__c: boolean;
  pandadoc__EV2_Ready__c: boolean;
  pandadoc__Enabled__c: boolean;
  pandadoc__Title__c: string | null;
};

type ParentReferences$pandadoc__TriggerSetting__ChangeEvent = {
  //
};

type ChildRelationships$pandadoc__TriggerSetting__ChangeEvent = {
  //
};

interface SObjectDefinition$pandadoc__TriggerSetting__ChangeEvent extends SObjectDefinition<'pandadoc__TriggerSetting__ChangeEvent'> {
    Name: 'pandadoc__TriggerSetting__ChangeEvent';
    Fields: Fields$pandadoc__TriggerSetting__ChangeEvent;
    ParentReferences: ParentReferences$pandadoc__TriggerSetting__ChangeEvent;
    ChildRelationships: ChildRelationships$pandadoc__TriggerSetting__ChangeEvent;
  }

type Fields$pandadoc__TriggerSetting__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  pandadoc__Custom_Settings__c: string | null;
  pandadoc__EV1_Ready__c: boolean;
  pandadoc__EV2_Ready__c: boolean;
  pandadoc__Enabled__c: boolean;
  pandadoc__Title__c: string | null;
};

type ParentReferences$pandadoc__TriggerSetting__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$pandadoc__TriggerSetting__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$pandadoc__TriggerSetting__c extends SObjectDefinition<'pandadoc__TriggerSetting__c'> {
    Name: 'pandadoc__TriggerSetting__c';
    Fields: Fields$pandadoc__TriggerSetting__c;
    ParentReferences: ParentReferences$pandadoc__TriggerSetting__c;
    ChildRelationships: ChildRelationships$pandadoc__TriggerSetting__c;
  }

type Fields$rcsfl__AdminSetting__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  rcsfl__AutoFill__c: boolean;
  rcsfl__AutoSave__c: boolean;
  rcsfl__HvsDispositionField__c: string | null;
  rcsfl__HvsMode__c: boolean;
  rcsfl__IsUnMandatory__c: boolean;
  rcsfl__ToVoiceMail__c: boolean;
  rcsfl__accountRelatedTo__c: boolean;
  rcsfl__autoSelect__c: boolean;
  rcsfl__fieldOrder__c: number | null;
  rcsfl__popOnRinging__c: boolean;
  rcsfl__saveOnRinging__c: boolean;
};

type ParentReferences$rcsfl__AdminSetting__ChangeEvent = {
  //
};

type ChildRelationships$rcsfl__AdminSetting__ChangeEvent = {
  //
};

interface SObjectDefinition$rcsfl__AdminSetting__ChangeEvent extends SObjectDefinition<'rcsfl__AdminSetting__ChangeEvent'> {
    Name: 'rcsfl__AdminSetting__ChangeEvent';
    Fields: Fields$rcsfl__AdminSetting__ChangeEvent;
    ParentReferences: ParentReferences$rcsfl__AdminSetting__ChangeEvent;
    ChildRelationships: ChildRelationships$rcsfl__AdminSetting__ChangeEvent;
  }

type Fields$rcsfl__AdminSetting__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  rcsfl__AutoFill__c: boolean;
  rcsfl__AutoSave__c: boolean;
  rcsfl__HvsDispositionField__c: string | null;
  rcsfl__HvsMode__c: boolean;
  rcsfl__IsUnMandatory__c: boolean;
  rcsfl__ToVoiceMail__c: boolean;
  rcsfl__accountRelatedTo__c: boolean;
  rcsfl__autoSelect__c: boolean;
  rcsfl__fieldOrder__c: number | null;
  rcsfl__popOnRinging__c: boolean;
  rcsfl__saveOnRinging__c: boolean;
};

type ParentReferences$rcsfl__AdminSetting__c = {
  //
  SetupOwner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$rcsfl__AdminSetting__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$rcsfl__AdminSetting__c extends SObjectDefinition<'rcsfl__AdminSetting__c'> {
    Name: 'rcsfl__AdminSetting__c';
    Fields: Fields$rcsfl__AdminSetting__c;
    ParentReferences: ParentReferences$rcsfl__AdminSetting__c;
    ChildRelationships: ChildRelationships$rcsfl__AdminSetting__c;
  }

type Fields$sansancard__SSCard__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  sansancard__Address__c: string | null;
  sansancard__AdsCity__c: string | null;
  sansancard__AdsCountry__c: string | null;
  sansancard__AdsState__c: string | null;
  sansancard__AdsStreet__c: string | null;
  sansancard__AdsZip__c: string | null;
  sansancard__Company__c: string | null;
  sansancard__Department__c: string | null;
  sansancard__Description__c: string | null;
  sansancard__Email__c: string | null;
  sansancard__Fax__c: string | null;
  sansancard__FirstName__c: string | null;
  sansancard__LastName__c: string | null;
  sansancard__MobilePhone__c: string | null;
  sansancard__Phone__c: string | null;
  sansancard__RegisteredTime__c: number | null;
  sansancard__Title__c: string | null;
  sansancard__Website__c: string | null;
  sansancard__reserved1__c: string | null;
};

type ParentReferences$sansancard__SSCard__ChangeEvent = {
  //
};

type ChildRelationships$sansancard__SSCard__ChangeEvent = {
  //
};

interface SObjectDefinition$sansancard__SSCard__ChangeEvent extends SObjectDefinition<'sansancard__SSCard__ChangeEvent'> {
    Name: 'sansancard__SSCard__ChangeEvent';
    Fields: Fields$sansancard__SSCard__ChangeEvent;
    ParentReferences: ParentReferences$sansancard__SSCard__ChangeEvent;
    ChildRelationships: ChildRelationships$sansancard__SSCard__ChangeEvent;
  }

type Fields$sansancard__SSCard__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  sansancard__Address__c: string | null;
  sansancard__AdsCity__c: string | null;
  sansancard__AdsCountry__c: string | null;
  sansancard__AdsState__c: string | null;
  sansancard__AdsStreet__c: string | null;
  sansancard__AdsZip__c: string | null;
  sansancard__Company__c: string;
  sansancard__Department__c: string | null;
  sansancard__Description__c: string | null;
  sansancard__Email__c: string | null;
  sansancard__Fax__c: string | null;
  sansancard__FirstName__c: string | null;
  sansancard__LastName__c: string;
  sansancard__MobilePhone__c: string | null;
  sansancard__Phone__c: string | null;
  sansancard__RegisteredTime__c: number | null;
  sansancard__Title__c: string | null;
  sansancard__Website__c: string | null;
  sansancard__reserved1__c: string | null;
};

type ParentReferences$sansancard__SSCard__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$sansancard__SSCard__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$sansancard__SSCard__c extends SObjectDefinition<'sansancard__SSCard__c'> {
    Name: 'sansancard__SSCard__c';
    Fields: Fields$sansancard__SSCard__c;
    ParentReferences: ParentReferences$sansancard__SSCard__c;
    ChildRelationships: ChildRelationships$sansancard__SSCard__c;
  }

type Fields$sansancard__ScanToSalesforce_Setting__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  sansancard__AccountRecordType__c: string | null;
  sansancard__AccountValue__c: string | null;
  sansancard__ContactRecordType__c: string | null;
  sansancard__ContactValue__c: string | null;
  sansancard__DisableAllCards__c: boolean;
  sansancard__DisableDisplayReport__c: boolean;
  sansancard__DisplayAllDeleteCards__c: boolean;
  sansancard__DisplayReportId__c: string | null;
  sansancard__DisplayReportName__c: string | null;
  sansancard__EnableNotification__c: boolean;
  sansancard__Enable_Contact__c: boolean;
  sansancard__Enable_EditFields__c: boolean;
  sansancard__LeadRecordType__c: string | null;
  sansancard__LeadValue__c: string | null;
  sansancard__TransferDest__c: string | null;
};

type ParentReferences$sansancard__ScanToSalesforce_Setting__ChangeEvent = {
  //
};

type ChildRelationships$sansancard__ScanToSalesforce_Setting__ChangeEvent = {
  //
};

interface SObjectDefinition$sansancard__ScanToSalesforce_Setting__ChangeEvent extends SObjectDefinition<'sansancard__ScanToSalesforce_Setting__ChangeEvent'> {
    Name: 'sansancard__ScanToSalesforce_Setting__ChangeEvent';
    Fields: Fields$sansancard__ScanToSalesforce_Setting__ChangeEvent;
    ParentReferences: ParentReferences$sansancard__ScanToSalesforce_Setting__ChangeEvent;
    ChildRelationships: ChildRelationships$sansancard__ScanToSalesforce_Setting__ChangeEvent;
  }

type Fields$sansancard__ScanToSalesforce_Setting__c = {
  //
  Id: string;
  IsDeleted: boolean;
  Name: string | null;
  SetupOwnerId: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  sansancard__AccountRecordType__c: string | null;
  sansancard__AccountValue__c: string | null;
  sansancard__ContactRecordType__c: string | null;
  sansancard__ContactValue__c: string | null;
  sansancard__DisableAllCards__c: boolean;
  sansancard__DisableDisplayReport__c: boolean;
  sansancard__DisplayAllDeleteCards__c: boolean;
  sansancard__DisplayReportId__c: string | null;
  sansancard__DisplayReportName__c: string | null;
  sansancard__EnableNotification__c: boolean;
  sansancard__Enable_Contact__c: boolean;
  sansancard__Enable_EditFields__c: boolean;
  sansancard__LeadRecordType__c: string | null;
  sansancard__LeadValue__c: string | null;
  sansancard__TransferDest__c: string | null;
};

type ParentReferences$sansancard__ScanToSalesforce_Setting__c = {
  //
  SetupOwner: SObjectDefinition$Name | null;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$sansancard__ScanToSalesforce_Setting__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$sansancard__ScanToSalesforce_Setting__c extends SObjectDefinition<'sansancard__ScanToSalesforce_Setting__c'> {
    Name: 'sansancard__ScanToSalesforce_Setting__c';
    Fields: Fields$sansancard__ScanToSalesforce_Setting__c;
    ParentReferences: ParentReferences$sansancard__ScanToSalesforce_Setting__c;
    ChildRelationships: ChildRelationships$sansancard__ScanToSalesforce_Setting__c;
  }

type Fields$sansancard__TransferMeta__ChangeEvent = {
  //
  Id: string | null;
  ReplayId: string | null;
  ChangeEventHeader: any;
  OwnerId: string | null;
  Name: string | null;
  CreatedDate: DateString | null;
  CreatedById: string | null;
  LastModifiedDate: DateString | null;
  LastModifiedById: string | null;
  sansancard__DisplayField__c: string | null;
  sansancard__FieldValue__c: string | null;
  sansancard__MapValue__c: string | null;
  sansancard__RecordType__c: string | null;
};

type ParentReferences$sansancard__TransferMeta__ChangeEvent = {
  //
};

type ChildRelationships$sansancard__TransferMeta__ChangeEvent = {
  //
};

interface SObjectDefinition$sansancard__TransferMeta__ChangeEvent extends SObjectDefinition<'sansancard__TransferMeta__ChangeEvent'> {
    Name: 'sansancard__TransferMeta__ChangeEvent';
    Fields: Fields$sansancard__TransferMeta__ChangeEvent;
    ParentReferences: ParentReferences$sansancard__TransferMeta__ChangeEvent;
    ChildRelationships: ChildRelationships$sansancard__TransferMeta__ChangeEvent;
  }

type Fields$sansancard__TransferMeta__c = {
  //
  Id: string;
  OwnerId: string;
  IsDeleted: boolean;
  Name: string | null;
  CreatedDate: DateString;
  CreatedById: string;
  LastModifiedDate: DateString;
  LastModifiedById: string;
  SystemModstamp: DateString;
  sansancard__DisplayField__c: string | null;
  sansancard__FieldValue__c: string | null;
  sansancard__MapValue__c: string | null;
  sansancard__RecordType__c: string | null;
};

type ParentReferences$sansancard__TransferMeta__c = {
  //
  Owner: SObjectDefinition$Name;
  CreatedBy: SObjectDefinition$User;
  LastModifiedBy: SObjectDefinition$User;
};

type ChildRelationships$sansancard__TransferMeta__c = {
  //
  AttachedContentDocuments: SObjectDefinition$AttachedContentDocument;
  AttachedContentNotes: SObjectDefinition$AttachedContentNote;
  Attachments: SObjectDefinition$Attachment;
  RecordAssociatedGroups: SObjectDefinition$CollaborationGroupRecord;
  CombinedAttachments: SObjectDefinition$CombinedAttachment;
  ContactRequests: SObjectDefinition$ContactRequest;
  ContentDocumentLinks: SObjectDefinition$ContentDocumentLink;
  DuplicateRecordItems: SObjectDefinition$DuplicateRecordItem;
  FeedSubscriptionsForEntity: SObjectDefinition$EntitySubscription;
  EventRelations: SObjectDefinition$EventRelation;
  Notes: SObjectDefinition$Note;
  NotesAndAttachments: SObjectDefinition$NoteAndAttachment;
  ProcessExceptions: SObjectDefinition$ProcessException;
  ProcessInstances: SObjectDefinition$ProcessInstance;
  ProcessSteps: SObjectDefinition$ProcessInstanceHistory;
  RecordActions: SObjectDefinition$RecordAction;
  RecordActionHistories: SObjectDefinition$RecordActionHistory;
  SurveySubjectEntities: SObjectDefinition$SurveySubject;
  TaskRelations: SObjectDefinition$TaskRelation;
  TopicAssignments: SObjectDefinition$TopicAssignment;
};

interface SObjectDefinition$sansancard__TransferMeta__c extends SObjectDefinition<'sansancard__TransferMeta__c'> {
    Name: 'sansancard__TransferMeta__c';
    Fields: Fields$sansancard__TransferMeta__c;
    ParentReferences: ParentReferences$sansancard__TransferMeta__c;
    ChildRelationships: ChildRelationships$sansancard__TransferMeta__c;
  }


export interface SmoothstackSchema extends Schema {
  SObjects: {
    AIInsightAction: SObjectDefinition$AIInsightAction;
    AIInsightFeedback: SObjectDefinition$AIInsightFeedback;
    AIInsightReason: SObjectDefinition$AIInsightReason;
    AIInsightValue: SObjectDefinition$AIInsightValue;
    AIPredictionEvent: SObjectDefinition$AIPredictionEvent;
    AIRecordInsight: SObjectDefinition$AIRecordInsight;
    AcceptedEventRelation: SObjectDefinition$AcceptedEventRelation;
    Account: SObjectDefinition$Account;
    AccountChangeEvent: SObjectDefinition$AccountChangeEvent;
    AccountContactRelation: SObjectDefinition$AccountContactRelation;
    AccountContactRole: SObjectDefinition$AccountContactRole;
    AccountContactRoleChangeEvent: SObjectDefinition$AccountContactRoleChangeEvent;
    AccountFeed: SObjectDefinition$AccountFeed;
    AccountHistory: SObjectDefinition$AccountHistory;
    AccountPartner: SObjectDefinition$AccountPartner;
    AccountShare: SObjectDefinition$AccountShare;
    ActionLinkGroupTemplate: SObjectDefinition$ActionLinkGroupTemplate;
    ActionLinkTemplate: SObjectDefinition$ActionLinkTemplate;
    ActivityHistory: SObjectDefinition$ActivityHistory;
    ActivityMetric: SObjectDefinition$ActivityMetric;
    ActivityMetricRollup: SObjectDefinition$ActivityMetricRollup;
    AdditionalNumber: SObjectDefinition$AdditionalNumber;
    AggregateResult: SObjectDefinition$AggregateResult;
    Announcement: SObjectDefinition$Announcement;
    Anticipated_Revenue__ChangeEvent: SObjectDefinition$Anticipated_Revenue__ChangeEvent;
    Anticipated_Revenue__c: SObjectDefinition$Anticipated_Revenue__c;
    ApexClass: SObjectDefinition$ApexClass;
    ApexComponent: SObjectDefinition$ApexComponent;
    ApexEmailNotification: SObjectDefinition$ApexEmailNotification;
    ApexLog: SObjectDefinition$ApexLog;
    ApexPage: SObjectDefinition$ApexPage;
    ApexPageInfo: SObjectDefinition$ApexPageInfo;
    ApexTestQueueItem: SObjectDefinition$ApexTestQueueItem;
    ApexTestResult: SObjectDefinition$ApexTestResult;
    ApexTestResultLimits: SObjectDefinition$ApexTestResultLimits;
    ApexTestRunResult: SObjectDefinition$ApexTestRunResult;
    ApexTestSuite: SObjectDefinition$ApexTestSuite;
    ApexTrigger: SObjectDefinition$ApexTrigger;
    AppAnalyticsQueryRequest: SObjectDefinition$AppAnalyticsQueryRequest;
    AppDefinition: SObjectDefinition$AppDefinition;
    AppMenuItem: SObjectDefinition$AppMenuItem;
    AppTabMember: SObjectDefinition$AppTabMember;
    AppleDomainVerification: SObjectDefinition$AppleDomainVerification;
    Applicant__ChangeEvent: SObjectDefinition$Applicant__ChangeEvent;
    Applicant__History: SObjectDefinition$Applicant__History;
    Applicant__c: SObjectDefinition$Applicant__c;
    Approval: SObjectDefinition$Approval;
    Asset: SObjectDefinition$Asset;
    AssetChangeEvent: SObjectDefinition$AssetChangeEvent;
    AssetFeed: SObjectDefinition$AssetFeed;
    AssetHistory: SObjectDefinition$AssetHistory;
    AssetRelationship: SObjectDefinition$AssetRelationship;
    AssetRelationshipFeed: SObjectDefinition$AssetRelationshipFeed;
    AssetRelationshipHistory: SObjectDefinition$AssetRelationshipHistory;
    AssetShare: SObjectDefinition$AssetShare;
    AssetTokenEvent: SObjectDefinition$AssetTokenEvent;
    AssignmentRule: SObjectDefinition$AssignmentRule;
    Assignment_Group_Member__ChangeEvent: SObjectDefinition$Assignment_Group_Member__ChangeEvent;
    Assignment_Group_Member__c: SObjectDefinition$Assignment_Group_Member__c;
    Assignment_Group__ChangeEvent: SObjectDefinition$Assignment_Group__ChangeEvent;
    Assignment_Group__c: SObjectDefinition$Assignment_Group__c;
    AssociatedLocation: SObjectDefinition$AssociatedLocation;
    AssociatedLocationHistory: SObjectDefinition$AssociatedLocationHistory;
    AsyncApexJob: SObjectDefinition$AsyncApexJob;
    AsyncOperationEvent: SObjectDefinition$AsyncOperationEvent;
    AsyncOperationStatus: SObjectDefinition$AsyncOperationStatus;
    AttachedContentDocument: SObjectDefinition$AttachedContentDocument;
    AttachedContentNote: SObjectDefinition$AttachedContentNote;
    Attachment: SObjectDefinition$Attachment;
    AuraDefinition: SObjectDefinition$AuraDefinition;
    AuraDefinitionBundle: SObjectDefinition$AuraDefinitionBundle;
    AuraDefinitionBundleInfo: SObjectDefinition$AuraDefinitionBundleInfo;
    AuraDefinitionInfo: SObjectDefinition$AuraDefinitionInfo;
    AuthConfig: SObjectDefinition$AuthConfig;
    AuthConfigProviders: SObjectDefinition$AuthConfigProviders;
    AuthProvider: SObjectDefinition$AuthProvider;
    AuthSession: SObjectDefinition$AuthSession;
    AuthorizationForm: SObjectDefinition$AuthorizationForm;
    AuthorizationFormConsent: SObjectDefinition$AuthorizationFormConsent;
    AuthorizationFormConsentChangeEvent: SObjectDefinition$AuthorizationFormConsentChangeEvent;
    AuthorizationFormConsentHistory: SObjectDefinition$AuthorizationFormConsentHistory;
    AuthorizationFormConsentShare: SObjectDefinition$AuthorizationFormConsentShare;
    AuthorizationFormDataUse: SObjectDefinition$AuthorizationFormDataUse;
    AuthorizationFormDataUseHistory: SObjectDefinition$AuthorizationFormDataUseHistory;
    AuthorizationFormDataUseShare: SObjectDefinition$AuthorizationFormDataUseShare;
    AuthorizationFormHistory: SObjectDefinition$AuthorizationFormHistory;
    AuthorizationFormShare: SObjectDefinition$AuthorizationFormShare;
    AuthorizationFormText: SObjectDefinition$AuthorizationFormText;
    AuthorizationFormTextHistory: SObjectDefinition$AuthorizationFormTextHistory;
    BackgroundOperation: SObjectDefinition$BackgroundOperation;
    BatchApexErrorEvent: SObjectDefinition$BatchApexErrorEvent;
    BrandTemplate: SObjectDefinition$BrandTemplate;
    BrandingSet: SObjectDefinition$BrandingSet;
    BrandingSetProperty: SObjectDefinition$BrandingSetProperty;
    BriefcaseAssignment: SObjectDefinition$BriefcaseAssignment;
    BriefcaseDefinition: SObjectDefinition$BriefcaseDefinition;
    BriefcaseRule: SObjectDefinition$BriefcaseRule;
    BriefcaseRuleFilter: SObjectDefinition$BriefcaseRuleFilter;
    BusinessHours: SObjectDefinition$BusinessHours;
    BusinessProcess: SObjectDefinition$BusinessProcess;
    Calendar: SObjectDefinition$Calendar;
    CalendarView: SObjectDefinition$CalendarView;
    CalendarViewShare: SObjectDefinition$CalendarViewShare;
    CallCenter: SObjectDefinition$CallCenter;
    CallCoachingMediaProvider: SObjectDefinition$CallCoachingMediaProvider;
    Campaign: SObjectDefinition$Campaign;
    CampaignChangeEvent: SObjectDefinition$CampaignChangeEvent;
    CampaignFeed: SObjectDefinition$CampaignFeed;
    CampaignHistory: SObjectDefinition$CampaignHistory;
    CampaignInfluenceModel: SObjectDefinition$CampaignInfluenceModel;
    CampaignMember: SObjectDefinition$CampaignMember;
    CampaignMemberChangeEvent: SObjectDefinition$CampaignMemberChangeEvent;
    CampaignMemberStatus: SObjectDefinition$CampaignMemberStatus;
    CampaignMemberStatusChangeEvent: SObjectDefinition$CampaignMemberStatusChangeEvent;
    CampaignShare: SObjectDefinition$CampaignShare;
    Case: SObjectDefinition$Case;
    CaseChangeEvent: SObjectDefinition$CaseChangeEvent;
    CaseComment: SObjectDefinition$CaseComment;
    CaseContactRole: SObjectDefinition$CaseContactRole;
    CaseFeed: SObjectDefinition$CaseFeed;
    CaseHistory: SObjectDefinition$CaseHistory;
    CaseShare: SObjectDefinition$CaseShare;
    CaseSolution: SObjectDefinition$CaseSolution;
    CaseStatus: SObjectDefinition$CaseStatus;
    CaseSubjectParticle: SObjectDefinition$CaseSubjectParticle;
    CaseTeamMember: SObjectDefinition$CaseTeamMember;
    CaseTeamRole: SObjectDefinition$CaseTeamRole;
    CaseTeamTemplate: SObjectDefinition$CaseTeamTemplate;
    CaseTeamTemplateMember: SObjectDefinition$CaseTeamTemplateMember;
    CaseTeamTemplateRecord: SObjectDefinition$CaseTeamTemplateRecord;
    CategoryData: SObjectDefinition$CategoryData;
    CategoryNode: SObjectDefinition$CategoryNode;
    Certification__ChangeEvent: SObjectDefinition$Certification__ChangeEvent;
    Certification__c: SObjectDefinition$Certification__c;
    ChatterActivity: SObjectDefinition$ChatterActivity;
    ChatterExtension: SObjectDefinition$ChatterExtension;
    ChatterExtensionConfig: SObjectDefinition$ChatterExtensionConfig;
    ClientBrowser: SObjectDefinition$ClientBrowser;
    Cohort_Participant_Ranking__ChangeEvent: SObjectDefinition$Cohort_Participant_Ranking__ChangeEvent;
    Cohort_Participant_Ranking__c: SObjectDefinition$Cohort_Participant_Ranking__c;
    Cohort_Participant__ChangeEvent: SObjectDefinition$Cohort_Participant__ChangeEvent;
    Cohort_Participant__History: SObjectDefinition$Cohort_Participant__History;
    Cohort_Participant__c: SObjectDefinition$Cohort_Participant__c;
    Cohort__ChangeEvent: SObjectDefinition$Cohort__ChangeEvent;
    Cohort__History: SObjectDefinition$Cohort__History;
    Cohort__c: SObjectDefinition$Cohort__c;
    CollaborationGroup: SObjectDefinition$CollaborationGroup;
    CollaborationGroupFeed: SObjectDefinition$CollaborationGroupFeed;
    CollaborationGroupMember: SObjectDefinition$CollaborationGroupMember;
    CollaborationGroupMemberRequest: SObjectDefinition$CollaborationGroupMemberRequest;
    CollaborationGroupRecord: SObjectDefinition$CollaborationGroupRecord;
    CollaborationInvitation: SObjectDefinition$CollaborationInvitation;
    ColorDefinition: SObjectDefinition$ColorDefinition;
    CombinedAttachment: SObjectDefinition$CombinedAttachment;
    CommSubscription: SObjectDefinition$CommSubscription;
    CommSubscriptionChannelType: SObjectDefinition$CommSubscriptionChannelType;
    CommSubscriptionChannelTypeFeed: SObjectDefinition$CommSubscriptionChannelTypeFeed;
    CommSubscriptionChannelTypeHistory: SObjectDefinition$CommSubscriptionChannelTypeHistory;
    CommSubscriptionChannelTypeShare: SObjectDefinition$CommSubscriptionChannelTypeShare;
    CommSubscriptionConsent: SObjectDefinition$CommSubscriptionConsent;
    CommSubscriptionConsentChangeEvent: SObjectDefinition$CommSubscriptionConsentChangeEvent;
    CommSubscriptionConsentFeed: SObjectDefinition$CommSubscriptionConsentFeed;
    CommSubscriptionConsentHistory: SObjectDefinition$CommSubscriptionConsentHistory;
    CommSubscriptionConsentShare: SObjectDefinition$CommSubscriptionConsentShare;
    CommSubscriptionFeed: SObjectDefinition$CommSubscriptionFeed;
    CommSubscriptionHistory: SObjectDefinition$CommSubscriptionHistory;
    CommSubscriptionShare: SObjectDefinition$CommSubscriptionShare;
    CommSubscriptionTiming: SObjectDefinition$CommSubscriptionTiming;
    CommSubscriptionTimingFeed: SObjectDefinition$CommSubscriptionTimingFeed;
    CommSubscriptionTimingHistory: SObjectDefinition$CommSubscriptionTimingHistory;
    Community: SObjectDefinition$Community;
    Compensation_Policy__ChangeEvent: SObjectDefinition$Compensation_Policy__ChangeEvent;
    Compensation_Policy__c: SObjectDefinition$Compensation_Policy__c;
    ConferenceNumber: SObjectDefinition$ConferenceNumber;
    ConnectedApplication: SObjectDefinition$ConnectedApplication;
    Contact: SObjectDefinition$Contact;
    ContactChangeEvent: SObjectDefinition$ContactChangeEvent;
    ContactFeed: SObjectDefinition$ContactFeed;
    ContactHistory: SObjectDefinition$ContactHistory;
    ContactPointAddress: SObjectDefinition$ContactPointAddress;
    ContactPointAddressChangeEvent: SObjectDefinition$ContactPointAddressChangeEvent;
    ContactPointAddressHistory: SObjectDefinition$ContactPointAddressHistory;
    ContactPointAddressShare: SObjectDefinition$ContactPointAddressShare;
    ContactPointConsent: SObjectDefinition$ContactPointConsent;
    ContactPointConsentChangeEvent: SObjectDefinition$ContactPointConsentChangeEvent;
    ContactPointConsentHistory: SObjectDefinition$ContactPointConsentHistory;
    ContactPointConsentShare: SObjectDefinition$ContactPointConsentShare;
    ContactPointEmail: SObjectDefinition$ContactPointEmail;
    ContactPointEmailChangeEvent: SObjectDefinition$ContactPointEmailChangeEvent;
    ContactPointEmailHistory: SObjectDefinition$ContactPointEmailHistory;
    ContactPointEmailShare: SObjectDefinition$ContactPointEmailShare;
    ContactPointPhone: SObjectDefinition$ContactPointPhone;
    ContactPointPhoneChangeEvent: SObjectDefinition$ContactPointPhoneChangeEvent;
    ContactPointPhoneHistory: SObjectDefinition$ContactPointPhoneHistory;
    ContactPointPhoneShare: SObjectDefinition$ContactPointPhoneShare;
    ContactPointTypeConsent: SObjectDefinition$ContactPointTypeConsent;
    ContactPointTypeConsentChangeEvent: SObjectDefinition$ContactPointTypeConsentChangeEvent;
    ContactPointTypeConsentHistory: SObjectDefinition$ContactPointTypeConsentHistory;
    ContactPointTypeConsentShare: SObjectDefinition$ContactPointTypeConsentShare;
    ContactRequest: SObjectDefinition$ContactRequest;
    ContactRequestShare: SObjectDefinition$ContactRequestShare;
    ContactShare: SObjectDefinition$ContactShare;
    ContentAsset: SObjectDefinition$ContentAsset;
    ContentBody: SObjectDefinition$ContentBody;
    ContentDistribution: SObjectDefinition$ContentDistribution;
    ContentDistributionView: SObjectDefinition$ContentDistributionView;
    ContentDocument: SObjectDefinition$ContentDocument;
    ContentDocumentFeed: SObjectDefinition$ContentDocumentFeed;
    ContentDocumentHistory: SObjectDefinition$ContentDocumentHistory;
    ContentDocumentLink: SObjectDefinition$ContentDocumentLink;
    ContentDocumentSubscription: SObjectDefinition$ContentDocumentSubscription;
    ContentFolder: SObjectDefinition$ContentFolder;
    ContentFolderItem: SObjectDefinition$ContentFolderItem;
    ContentFolderLink: SObjectDefinition$ContentFolderLink;
    ContentFolderMember: SObjectDefinition$ContentFolderMember;
    ContentNote: SObjectDefinition$ContentNote;
    ContentNotification: SObjectDefinition$ContentNotification;
    ContentTagSubscription: SObjectDefinition$ContentTagSubscription;
    ContentUserSubscription: SObjectDefinition$ContentUserSubscription;
    ContentVersion: SObjectDefinition$ContentVersion;
    ContentVersionComment: SObjectDefinition$ContentVersionComment;
    ContentVersionHistory: SObjectDefinition$ContentVersionHistory;
    ContentVersionRating: SObjectDefinition$ContentVersionRating;
    ContentWorkspace: SObjectDefinition$ContentWorkspace;
    ContentWorkspaceDoc: SObjectDefinition$ContentWorkspaceDoc;
    ContentWorkspaceMember: SObjectDefinition$ContentWorkspaceMember;
    ContentWorkspacePermission: SObjectDefinition$ContentWorkspacePermission;
    ContentWorkspaceSubscription: SObjectDefinition$ContentWorkspaceSubscription;
    Contract: SObjectDefinition$Contract;
    ContractChangeEvent: SObjectDefinition$ContractChangeEvent;
    ContractContactRole: SObjectDefinition$ContractContactRole;
    ContractFeed: SObjectDefinition$ContractFeed;
    ContractHistory: SObjectDefinition$ContractHistory;
    ContractStatus: SObjectDefinition$ContractStatus;
    Contractor_Xchange_Portal_Settings__mdt: SObjectDefinition$Contractor_Xchange_Portal_Settings__mdt;
    CorsWhitelistEntry: SObjectDefinition$CorsWhitelistEntry;
    CronJobDetail: SObjectDefinition$CronJobDetail;
    CronTrigger: SObjectDefinition$CronTrigger;
    CspTrustedSite: SObjectDefinition$CspTrustedSite;
    CustomBrand: SObjectDefinition$CustomBrand;
    CustomBrandAsset: SObjectDefinition$CustomBrandAsset;
    CustomHelpMenuItem: SObjectDefinition$CustomHelpMenuItem;
    CustomHelpMenuSection: SObjectDefinition$CustomHelpMenuSection;
    CustomHttpHeader: SObjectDefinition$CustomHttpHeader;
    CustomNotificationType: SObjectDefinition$CustomNotificationType;
    CustomObjectUserLicenseMetrics: SObjectDefinition$CustomObjectUserLicenseMetrics;
    CustomPermission: SObjectDefinition$CustomPermission;
    CustomPermissionDependency: SObjectDefinition$CustomPermissionDependency;
    DSCORGPKG__AutoUpdateSettings__ChangeEvent: SObjectDefinition$DSCORGPKG__AutoUpdateSettings__ChangeEvent;
    DSCORGPKG__AutoUpdateSettings__c: SObjectDefinition$DSCORGPKG__AutoUpdateSettings__c;
    DSCORGPKG__ConflictField__ChangeEvent: SObjectDefinition$DSCORGPKG__ConflictField__ChangeEvent;
    DSCORGPKG__ConflictField__c: SObjectDefinition$DSCORGPKG__ConflictField__c;
    DSCORGPKG__Conflict__ChangeEvent: SObjectDefinition$DSCORGPKG__Conflict__ChangeEvent;
    DSCORGPKG__Conflict__c: SObjectDefinition$DSCORGPKG__Conflict__c;
    DSCORGPKG__DiscoverOrgResults__ChangeEvent: SObjectDefinition$DSCORGPKG__DiscoverOrgResults__ChangeEvent;
    DSCORGPKG__DiscoverOrgResults__c: SObjectDefinition$DSCORGPKG__DiscoverOrgResults__c;
    DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent: SObjectDefinition$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__ChangeEvent;
    DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c: SObjectDefinition$DSCORGPKG__DiscoverOrg_AutoUpdate_Log__c;
    DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent: SObjectDefinition$DSCORGPKG__DiscoverOrg_Custom_Mapping__ChangeEvent;
    DSCORGPKG__DiscoverOrg_Custom_Mapping__c: SObjectDefinition$DSCORGPKG__DiscoverOrg_Custom_Mapping__c;
    DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent: SObjectDefinition$DSCORGPKG__DiscoverOrg_Metadata__ChangeEvent;
    DSCORGPKG__DiscoverOrg_Metadata__c: SObjectDefinition$DSCORGPKG__DiscoverOrg_Metadata__c;
    DSCORGPKG__DiscoverOrg_Operation__ChangeEvent: SObjectDefinition$DSCORGPKG__DiscoverOrg_Operation__ChangeEvent;
    DSCORGPKG__DiscoverOrg_Operation__c: SObjectDefinition$DSCORGPKG__DiscoverOrg_Operation__c;
    DSCORGPKG__DiscoverOrg_Search__ChangeEvent: SObjectDefinition$DSCORGPKG__DiscoverOrg_Search__ChangeEvent;
    DSCORGPKG__DiscoverOrg_Search__c: SObjectDefinition$DSCORGPKG__DiscoverOrg_Search__c;
    DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent: SObjectDefinition$DSCORGPKG__DiscoverOrg_Technologies__ChangeEvent;
    DSCORGPKG__DiscoverOrg_Technologies__c: SObjectDefinition$DSCORGPKG__DiscoverOrg_Technologies__c;
    DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent: SObjectDefinition$DSCORGPKG__DiscoverOrg_Update_History__ChangeEvent;
    DSCORGPKG__DiscoverOrg_Update_History__c: SObjectDefinition$DSCORGPKG__DiscoverOrg_Update_History__c;
    DSCORGPKG__FieldMapping__ChangeEvent: SObjectDefinition$DSCORGPKG__FieldMapping__ChangeEvent;
    DSCORGPKG__FieldMapping__c: SObjectDefinition$DSCORGPKG__FieldMapping__c;
    DSCORGPKG__MaintainOperation__ChangeEvent: SObjectDefinition$DSCORGPKG__MaintainOperation__ChangeEvent;
    DSCORGPKG__MaintainOperation__c: SObjectDefinition$DSCORGPKG__MaintainOperation__c;
    DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent: SObjectDefinition$DSCORGPKG__Maintain_Triggered_Append_Clean__ChangeEvent;
    DSCORGPKG__Maintain_Triggered_Append_Clean__c: SObjectDefinition$DSCORGPKG__Maintain_Triggered_Append_Clean__c;
    DSCORGPKG__Nightly_Debug__ChangeEvent: SObjectDefinition$DSCORGPKG__Nightly_Debug__ChangeEvent;
    DSCORGPKG__Nightly_Debug__c: SObjectDefinition$DSCORGPKG__Nightly_Debug__c;
    DSCORGPKG__OppAlert__ChangeEvent: SObjectDefinition$DSCORGPKG__OppAlert__ChangeEvent;
    DSCORGPKG__OppAlert__c: SObjectDefinition$DSCORGPKG__OppAlert__c;
    DSCORGPKG__Trigger__ChangeEvent: SObjectDefinition$DSCORGPKG__Trigger__ChangeEvent;
    DSCORGPKG__Trigger__c: SObjectDefinition$DSCORGPKG__Trigger__c;
    DSCORGPKG__Triggered_Append_Clean__ChangeEvent: SObjectDefinition$DSCORGPKG__Triggered_Append_Clean__ChangeEvent;
    DSCORGPKG__Triggered_Append_Clean__c: SObjectDefinition$DSCORGPKG__Triggered_Append_Clean__c;
    Dashboard: SObjectDefinition$Dashboard;
    DashboardComponent: SObjectDefinition$DashboardComponent;
    DashboardComponentFeed: SObjectDefinition$DashboardComponentFeed;
    DashboardFeed: SObjectDefinition$DashboardFeed;
    DataAssessmentFieldMetric: SObjectDefinition$DataAssessmentFieldMetric;
    DataAssessmentMetric: SObjectDefinition$DataAssessmentMetric;
    DataAssessmentValueMetric: SObjectDefinition$DataAssessmentValueMetric;
    DataIntegrationRecordPurchasePermission: SObjectDefinition$DataIntegrationRecordPurchasePermission;
    DataStatistics: SObjectDefinition$DataStatistics;
    DataType: SObjectDefinition$DataType;
    DataUseLegalBasis: SObjectDefinition$DataUseLegalBasis;
    DataUseLegalBasisHistory: SObjectDefinition$DataUseLegalBasisHistory;
    DataUseLegalBasisShare: SObjectDefinition$DataUseLegalBasisShare;
    DataUsePurpose: SObjectDefinition$DataUsePurpose;
    DataUsePurposeHistory: SObjectDefinition$DataUsePurposeHistory;
    DataUsePurposeShare: SObjectDefinition$DataUsePurposeShare;
    DatacloudAddress: SObjectDefinition$DatacloudAddress;
    Debug_Log__ChangeEvent: SObjectDefinition$Debug_Log__ChangeEvent;
    Debug_Log__c: SObjectDefinition$Debug_Log__c;
    DeclinedEventRelation: SObjectDefinition$DeclinedEventRelation;
    DeleteEvent: SObjectDefinition$DeleteEvent;
    Document: SObjectDefinition$Document;
    DocumentAttachmentMap: SObjectDefinition$DocumentAttachmentMap;
    Domain: SObjectDefinition$Domain;
    DomainSite: SObjectDefinition$DomainSite;
    DuplicateRecordItem: SObjectDefinition$DuplicateRecordItem;
    DuplicateRecordSet: SObjectDefinition$DuplicateRecordSet;
    DuplicateRule: SObjectDefinition$DuplicateRule;
    EmailCapture: SObjectDefinition$EmailCapture;
    EmailDomainFilter: SObjectDefinition$EmailDomainFilter;
    EmailDomainKey: SObjectDefinition$EmailDomainKey;
    EmailMessage: SObjectDefinition$EmailMessage;
    EmailMessageChangeEvent: SObjectDefinition$EmailMessageChangeEvent;
    EmailMessageRelation: SObjectDefinition$EmailMessageRelation;
    EmailRelay: SObjectDefinition$EmailRelay;
    EmailServicesAddress: SObjectDefinition$EmailServicesAddress;
    EmailServicesFunction: SObjectDefinition$EmailServicesFunction;
    EmailStatus: SObjectDefinition$EmailStatus;
    EmailTemplate: SObjectDefinition$EmailTemplate;
    EmailTemplateChangeEvent: SObjectDefinition$EmailTemplateChangeEvent;
    EmbeddedServiceDetail: SObjectDefinition$EmbeddedServiceDetail;
    EmbeddedServiceLabel: SObjectDefinition$EmbeddedServiceLabel;
    EngagementChannelType: SObjectDefinition$EngagementChannelType;
    EngagementChannelTypeFeed: SObjectDefinition$EngagementChannelTypeFeed;
    EngagementChannelTypeHistory: SObjectDefinition$EngagementChannelTypeHistory;
    EngagementChannelTypeShare: SObjectDefinition$EngagementChannelTypeShare;
    EnhancedLetterhead: SObjectDefinition$EnhancedLetterhead;
    EnhancedLetterheadFeed: SObjectDefinition$EnhancedLetterheadFeed;
    EntityDefinition: SObjectDefinition$EntityDefinition;
    EntityParticle: SObjectDefinition$EntityParticle;
    EntitySubscription: SObjectDefinition$EntitySubscription;
    Event: SObjectDefinition$Event;
    EventBusSubscriber: SObjectDefinition$EventBusSubscriber;
    EventChangeEvent: SObjectDefinition$EventChangeEvent;
    EventFeed: SObjectDefinition$EventFeed;
    EventLogFile: SObjectDefinition$EventLogFile;
    EventRelation: SObjectDefinition$EventRelation;
    EventRelationChangeEvent: SObjectDefinition$EventRelationChangeEvent;
    EventWhoRelation: SObjectDefinition$EventWhoRelation;
    Expense__ChangeEvent: SObjectDefinition$Expense__ChangeEvent;
    Expense__c: SObjectDefinition$Expense__c;
    ExpressionFilter: SObjectDefinition$ExpressionFilter;
    ExpressionFilterCriteria: SObjectDefinition$ExpressionFilterCriteria;
    ExternalDataSource: SObjectDefinition$ExternalDataSource;
    ExternalDataUserAuth: SObjectDefinition$ExternalDataUserAuth;
    ExternalEvent: SObjectDefinition$ExternalEvent;
    ExternalEventMapping: SObjectDefinition$ExternalEventMapping;
    ExternalEventMappingShare: SObjectDefinition$ExternalEventMappingShare;
    ExternalSocialAccount: SObjectDefinition$ExternalSocialAccount;
    FeedAttachment: SObjectDefinition$FeedAttachment;
    FeedComment: SObjectDefinition$FeedComment;
    FeedItem: SObjectDefinition$FeedItem;
    FeedLike: SObjectDefinition$FeedLike;
    FeedPollChoice: SObjectDefinition$FeedPollChoice;
    FeedPollVote: SObjectDefinition$FeedPollVote;
    FeedRevision: SObjectDefinition$FeedRevision;
    FeedSignal: SObjectDefinition$FeedSignal;
    FeedTrackedChange: SObjectDefinition$FeedTrackedChange;
    FieldDefinition: SObjectDefinition$FieldDefinition;
    FieldPermissions: SObjectDefinition$FieldPermissions;
    FieldSecurityClassification: SObjectDefinition$FieldSecurityClassification;
    FileSearchActivity: SObjectDefinition$FileSearchActivity;
    FiscalYearSettings: SObjectDefinition$FiscalYearSettings;
    FlexQueueItem: SObjectDefinition$FlexQueueItem;
    FlowDefinitionView: SObjectDefinition$FlowDefinitionView;
    FlowExecutionErrorEvent: SObjectDefinition$FlowExecutionErrorEvent;
    FlowInterview: SObjectDefinition$FlowInterview;
    FlowInterviewLog: SObjectDefinition$FlowInterviewLog;
    FlowInterviewLogEntry: SObjectDefinition$FlowInterviewLogEntry;
    FlowInterviewLogShare: SObjectDefinition$FlowInterviewLogShare;
    FlowInterviewShare: SObjectDefinition$FlowInterviewShare;
    FlowRecordRelation: SObjectDefinition$FlowRecordRelation;
    FlowStageRelation: SObjectDefinition$FlowStageRelation;
    FlowVariableView: SObjectDefinition$FlowVariableView;
    FlowVersionView: SObjectDefinition$FlowVersionView;
    Folder: SObjectDefinition$Folder;
    FolderedContentDocument: SObjectDefinition$FolderedContentDocument;
    ForecastingAdjustment: SObjectDefinition$ForecastingAdjustment;
    ForecastingCategoryMapping: SObjectDefinition$ForecastingCategoryMapping;
    ForecastingDisplayedFamily: SObjectDefinition$ForecastingDisplayedFamily;
    ForecastingFact: SObjectDefinition$ForecastingFact;
    ForecastingItem: SObjectDefinition$ForecastingItem;
    ForecastingOwnerAdjustment: SObjectDefinition$ForecastingOwnerAdjustment;
    ForecastingQuota: SObjectDefinition$ForecastingQuota;
    ForecastingShare: SObjectDefinition$ForecastingShare;
    ForecastingSourceDefinition: SObjectDefinition$ForecastingSourceDefinition;
    ForecastingType: SObjectDefinition$ForecastingType;
    ForecastingTypeSource: SObjectDefinition$ForecastingTypeSource;
    ForecastingTypeToCategory: SObjectDefinition$ForecastingTypeToCategory;
    ForecastingUserPreference: SObjectDefinition$ForecastingUserPreference;
    FormulaFunction: SObjectDefinition$FormulaFunction;
    FormulaFunctionAllowedType: SObjectDefinition$FormulaFunctionAllowedType;
    FormulaFunctionCategory: SObjectDefinition$FormulaFunctionCategory;
    Funding_Invoice__ChangeEvent: SObjectDefinition$Funding_Invoice__ChangeEvent;
    Funding_Invoice__History: SObjectDefinition$Funding_Invoice__History;
    Funding_Invoice__c: SObjectDefinition$Funding_Invoice__c;
    Funding_Source__ChangeEvent: SObjectDefinition$Funding_Source__ChangeEvent;
    Funding_Source__History: SObjectDefinition$Funding_Source__History;
    Funding_Source__c: SObjectDefinition$Funding_Source__c;
    Funding_Submission__ChangeEvent: SObjectDefinition$Funding_Submission__ChangeEvent;
    Funding_Submission__History: SObjectDefinition$Funding_Submission__History;
    Funding_Submission__c: SObjectDefinition$Funding_Submission__c;
    GrantedByLicense: SObjectDefinition$GrantedByLicense;
    Group: SObjectDefinition$Group;
    GroupMember: SObjectDefinition$GroupMember;
    Holiday: SObjectDefinition$Holiday;
    IconDefinition: SObjectDefinition$IconDefinition;
    Idea: SObjectDefinition$Idea;
    IdeaComment: SObjectDefinition$IdeaComment;
    IdpEventLog: SObjectDefinition$IdpEventLog;
    IframeWhiteListUrl: SObjectDefinition$IframeWhiteListUrl;
    Image: SObjectDefinition$Image;
    ImageShare: SObjectDefinition$ImageShare;
    Individual: SObjectDefinition$Individual;
    IndividualChangeEvent: SObjectDefinition$IndividualChangeEvent;
    IndividualHistory: SObjectDefinition$IndividualHistory;
    IndividualShare: SObjectDefinition$IndividualShare;
    InstalledMobileApp: SObjectDefinition$InstalledMobileApp;
    Invoice_History__ChangeEvent: SObjectDefinition$Invoice_History__ChangeEvent;
    Invoice_History__c: SObjectDefinition$Invoice_History__c;
    Invoice_Line__ChangeEvent: SObjectDefinition$Invoice_Line__ChangeEvent;
    Invoice_Line__c: SObjectDefinition$Invoice_Line__c;
    Invoice_Payment_Line__ChangeEvent: SObjectDefinition$Invoice_Payment_Line__ChangeEvent;
    Invoice_Payment_Line__c: SObjectDefinition$Invoice_Payment_Line__c;
    Invoice_Payment__ChangeEvent: SObjectDefinition$Invoice_Payment__ChangeEvent;
    Invoice_Payment__c: SObjectDefinition$Invoice_Payment__c;
    Invoice_Settings__ChangeEvent: SObjectDefinition$Invoice_Settings__ChangeEvent;
    Invoice_Settings__c: SObjectDefinition$Invoice_Settings__c;
    Invoice__ChangeEvent: SObjectDefinition$Invoice__ChangeEvent;
    Invoice__History: SObjectDefinition$Invoice__History;
    Invoice__c: SObjectDefinition$Invoice__c;
    Invoiced_Expense__ChangeEvent: SObjectDefinition$Invoiced_Expense__ChangeEvent;
    Invoiced_Expense__c: SObjectDefinition$Invoiced_Expense__c;
    Invoiced_Hours__ChangeEvent: SObjectDefinition$Invoiced_Hours__ChangeEvent;
    Invoiced_Hours__c: SObjectDefinition$Invoiced_Hours__c;
    Job_Portal_Settings__mdt: SObjectDefinition$Job_Portal_Settings__mdt;
    Job__ChangeEvent: SObjectDefinition$Job__ChangeEvent;
    Job__History: SObjectDefinition$Job__History;
    Job__c: SObjectDefinition$Job__c;
    KnowledgeableUser: SObjectDefinition$KnowledgeableUser;
    Lead: SObjectDefinition$Lead;
    LeadChangeEvent: SObjectDefinition$LeadChangeEvent;
    LeadFeed: SObjectDefinition$LeadFeed;
    LeadHistory: SObjectDefinition$LeadHistory;
    LeadShare: SObjectDefinition$LeadShare;
    LeadStatus: SObjectDefinition$LeadStatus;
    LightningExitByPageMetrics: SObjectDefinition$LightningExitByPageMetrics;
    LightningExperienceTheme: SObjectDefinition$LightningExperienceTheme;
    LightningOnboardingConfig: SObjectDefinition$LightningOnboardingConfig;
    LightningToggleMetrics: SObjectDefinition$LightningToggleMetrics;
    LightningUsageByAppTypeMetrics: SObjectDefinition$LightningUsageByAppTypeMetrics;
    LightningUsageByBrowserMetrics: SObjectDefinition$LightningUsageByBrowserMetrics;
    LightningUsageByFlexiPageMetrics: SObjectDefinition$LightningUsageByFlexiPageMetrics;
    LightningUsageByPageMetrics: SObjectDefinition$LightningUsageByPageMetrics;
    ListEmail: SObjectDefinition$ListEmail;
    ListEmailChangeEvent: SObjectDefinition$ListEmailChangeEvent;
    ListEmailIndividualRecipient: SObjectDefinition$ListEmailIndividualRecipient;
    ListEmailRecipientSource: SObjectDefinition$ListEmailRecipientSource;
    ListEmailShare: SObjectDefinition$ListEmailShare;
    ListView: SObjectDefinition$ListView;
    ListViewChart: SObjectDefinition$ListViewChart;
    ListViewChartInstance: SObjectDefinition$ListViewChartInstance;
    Location: SObjectDefinition$Location;
    LocationChangeEvent: SObjectDefinition$LocationChangeEvent;
    LocationFeed: SObjectDefinition$LocationFeed;
    LocationHistory: SObjectDefinition$LocationHistory;
    LocationShare: SObjectDefinition$LocationShare;
    LocationTrustMeasure: SObjectDefinition$LocationTrustMeasure;
    LocationTrustMeasureShare: SObjectDefinition$LocationTrustMeasureShare;
    LoginGeo: SObjectDefinition$LoginGeo;
    LoginHistory: SObjectDefinition$LoginHistory;
    LoginIp: SObjectDefinition$LoginIp;
    LogoutEventStream: SObjectDefinition$LogoutEventStream;
    LookedUpFromActivity: SObjectDefinition$LookedUpFromActivity;
    Macro: SObjectDefinition$Macro;
    MacroChangeEvent: SObjectDefinition$MacroChangeEvent;
    MacroHistory: SObjectDefinition$MacroHistory;
    MacroInstruction: SObjectDefinition$MacroInstruction;
    MacroInstructionChangeEvent: SObjectDefinition$MacroInstructionChangeEvent;
    MacroShare: SObjectDefinition$MacroShare;
    MacroUsage: SObjectDefinition$MacroUsage;
    MacroUsageShare: SObjectDefinition$MacroUsageShare;
    MailmergeTemplate: SObjectDefinition$MailmergeTemplate;
    Marketing__ChangeEvent: SObjectDefinition$Marketing__ChangeEvent;
    Marketing__History: SObjectDefinition$Marketing__History;
    Marketing__c: SObjectDefinition$Marketing__c;
    MatchingInformation: SObjectDefinition$MatchingInformation;
    MatchingRule: SObjectDefinition$MatchingRule;
    MatchingRuleItem: SObjectDefinition$MatchingRuleItem;
    Membership__ChangeEvent: SObjectDefinition$Membership__ChangeEvent;
    Membership__c: SObjectDefinition$Membership__c;
    Min_Wage__ChangeEvent: SObjectDefinition$Min_Wage__ChangeEvent;
    Min_Wage__c: SObjectDefinition$Min_Wage__c;
    MobileApplicationDetail: SObjectDefinition$MobileApplicationDetail;
    MutingPermissionSet: SObjectDefinition$MutingPermissionSet;
    MyDomainDiscoverableLogin: SObjectDefinition$MyDomainDiscoverableLogin;
    Name: SObjectDefinition$Name;
    NamedCredential: SObjectDefinition$NamedCredential;
    Note: SObjectDefinition$Note;
    NoteAndAttachment: SObjectDefinition$NoteAndAttachment;
    OauthCustomScope: SObjectDefinition$OauthCustomScope;
    OauthCustomScopeApp: SObjectDefinition$OauthCustomScopeApp;
    OauthToken: SObjectDefinition$OauthToken;
    ObjectPermissions: SObjectDefinition$ObjectPermissions;
    OnboardingMetrics: SObjectDefinition$OnboardingMetrics;
    Onboarding__ChangeEvent: SObjectDefinition$Onboarding__ChangeEvent;
    Onboarding__c: SObjectDefinition$Onboarding__c;
    OpenActivity: SObjectDefinition$OpenActivity;
    OperatingHours: SObjectDefinition$OperatingHours;
    OperatingHoursFeed: SObjectDefinition$OperatingHoursFeed;
    OperatingHoursHoliday: SObjectDefinition$OperatingHoursHoliday;
    OperatingHoursHolidayFeed: SObjectDefinition$OperatingHoursHolidayFeed;
    Opportunity: SObjectDefinition$Opportunity;
    OpportunityChangeEvent: SObjectDefinition$OpportunityChangeEvent;
    OpportunityCompetitor: SObjectDefinition$OpportunityCompetitor;
    OpportunityContactRole: SObjectDefinition$OpportunityContactRole;
    OpportunityContactRoleChangeEvent: SObjectDefinition$OpportunityContactRoleChangeEvent;
    OpportunityFeed: SObjectDefinition$OpportunityFeed;
    OpportunityFieldHistory: SObjectDefinition$OpportunityFieldHistory;
    OpportunityHistory: SObjectDefinition$OpportunityHistory;
    OpportunityLineItem: SObjectDefinition$OpportunityLineItem;
    OpportunityPartner: SObjectDefinition$OpportunityPartner;
    OpportunityShare: SObjectDefinition$OpportunityShare;
    OpportunityStage: SObjectDefinition$OpportunityStage;
    OpportunityTeamMember: SObjectDefinition$OpportunityTeamMember;
    Order: SObjectDefinition$Order;
    OrderChangeEvent: SObjectDefinition$OrderChangeEvent;
    OrderFeed: SObjectDefinition$OrderFeed;
    OrderHistory: SObjectDefinition$OrderHistory;
    OrderItem: SObjectDefinition$OrderItem;
    OrderItemChangeEvent: SObjectDefinition$OrderItemChangeEvent;
    OrderItemFeed: SObjectDefinition$OrderItemFeed;
    OrderItemHistory: SObjectDefinition$OrderItemHistory;
    OrderShare: SObjectDefinition$OrderShare;
    OrderStatus: SObjectDefinition$OrderStatus;
    OrgLifecycleNotification: SObjectDefinition$OrgLifecycleNotification;
    OrgMetric: SObjectDefinition$OrgMetric;
    OrgMetricScanResult: SObjectDefinition$OrgMetricScanResult;
    OrgMetricScanSummary: SObjectDefinition$OrgMetricScanSummary;
    OrgWideEmailAddress: SObjectDefinition$OrgWideEmailAddress;
    Organization: SObjectDefinition$Organization;
    OutgoingEmail: SObjectDefinition$OutgoingEmail;
    OutgoingEmailRelation: SObjectDefinition$OutgoingEmailRelation;
    OwnedContentDocument: SObjectDefinition$OwnedContentDocument;
    OwnerChangeOptionInfo: SObjectDefinition$OwnerChangeOptionInfo;
    PTO_Request__ChangeEvent: SObjectDefinition$PTO_Request__ChangeEvent;
    PTO_Request__c: SObjectDefinition$PTO_Request__c;
    PackageLicense: SObjectDefinition$PackageLicense;
    Partner: SObjectDefinition$Partner;
    PartnerRole: SObjectDefinition$PartnerRole;
    PartyConsent: SObjectDefinition$PartyConsent;
    PartyConsentChangeEvent: SObjectDefinition$PartyConsentChangeEvent;
    PartyConsentFeed: SObjectDefinition$PartyConsentFeed;
    PartyConsentHistory: SObjectDefinition$PartyConsentHistory;
    PartyConsentShare: SObjectDefinition$PartyConsentShare;
    Pay_Period_Year__ChangeEvent: SObjectDefinition$Pay_Period_Year__ChangeEvent;
    Pay_Period_Year__c: SObjectDefinition$Pay_Period_Year__c;
    Pay_Period__ChangeEvent: SObjectDefinition$Pay_Period__ChangeEvent;
    Pay_Period__c: SObjectDefinition$Pay_Period__c;
    Payroll_Config__ChangeEvent: SObjectDefinition$Payroll_Config__ChangeEvent;
    Payroll_Config__c: SObjectDefinition$Payroll_Config__c;
    Payroll_Period_Adjustment__ChangeEvent: SObjectDefinition$Payroll_Period_Adjustment__ChangeEvent;
    Payroll_Period_Adjustment__c: SObjectDefinition$Payroll_Period_Adjustment__c;
    Payroll_Period_Snapshot__ChangeEvent: SObjectDefinition$Payroll_Period_Snapshot__ChangeEvent;
    Payroll_Period_Snapshot__c: SObjectDefinition$Payroll_Period_Snapshot__c;
    Payroll_Period__ChangeEvent: SObjectDefinition$Payroll_Period__ChangeEvent;
    Payroll_Period__c: SObjectDefinition$Payroll_Period__c;
    Period: SObjectDefinition$Period;
    PermissionSet: SObjectDefinition$PermissionSet;
    PermissionSetAssignment: SObjectDefinition$PermissionSetAssignment;
    PermissionSetGroup: SObjectDefinition$PermissionSetGroup;
    PermissionSetGroupComponent: SObjectDefinition$PermissionSetGroupComponent;
    PermissionSetLicense: SObjectDefinition$PermissionSetLicense;
    PermissionSetLicenseAssign: SObjectDefinition$PermissionSetLicenseAssign;
    PermissionSetTabSetting: SObjectDefinition$PermissionSetTabSetting;
    PicklistValueInfo: SObjectDefinition$PicklistValueInfo;
    PlatformAction: SObjectDefinition$PlatformAction;
    PlatformCachePartition: SObjectDefinition$PlatformCachePartition;
    PlatformCachePartitionType: SObjectDefinition$PlatformCachePartitionType;
    PlatformEventUsageMetric: SObjectDefinition$PlatformEventUsageMetric;
    PlatformStatusAlertEvent: SObjectDefinition$PlatformStatusAlertEvent;
    Portal_User__ChangeEvent: SObjectDefinition$Portal_User__ChangeEvent;
    Portal_User__c: SObjectDefinition$Portal_User__c;
    Pricebook2: SObjectDefinition$Pricebook2;
    Pricebook2ChangeEvent: SObjectDefinition$Pricebook2ChangeEvent;
    Pricebook2History: SObjectDefinition$Pricebook2History;
    PricebookEntry: SObjectDefinition$PricebookEntry;
    PricebookEntryHistory: SObjectDefinition$PricebookEntryHistory;
    ProcessDefinition: SObjectDefinition$ProcessDefinition;
    ProcessException: SObjectDefinition$ProcessException;
    ProcessExceptionEvent: SObjectDefinition$ProcessExceptionEvent;
    ProcessExceptionShare: SObjectDefinition$ProcessExceptionShare;
    ProcessInstance: SObjectDefinition$ProcessInstance;
    ProcessInstanceHistory: SObjectDefinition$ProcessInstanceHistory;
    ProcessInstanceNode: SObjectDefinition$ProcessInstanceNode;
    ProcessInstanceStep: SObjectDefinition$ProcessInstanceStep;
    ProcessInstanceWorkitem: SObjectDefinition$ProcessInstanceWorkitem;
    ProcessNode: SObjectDefinition$ProcessNode;
    Product2: SObjectDefinition$Product2;
    Product2ChangeEvent: SObjectDefinition$Product2ChangeEvent;
    Product2Feed: SObjectDefinition$Product2Feed;
    Product2History: SObjectDefinition$Product2History;
    Profile: SObjectDefinition$Profile;
    ProfileSkill: SObjectDefinition$ProfileSkill;
    ProfileSkillEndorsement: SObjectDefinition$ProfileSkillEndorsement;
    ProfileSkillEndorsementFeed: SObjectDefinition$ProfileSkillEndorsementFeed;
    ProfileSkillEndorsementHistory: SObjectDefinition$ProfileSkillEndorsementHistory;
    ProfileSkillFeed: SObjectDefinition$ProfileSkillFeed;
    ProfileSkillHistory: SObjectDefinition$ProfileSkillHistory;
    ProfileSkillShare: SObjectDefinition$ProfileSkillShare;
    ProfileSkillUser: SObjectDefinition$ProfileSkillUser;
    ProfileSkillUserFeed: SObjectDefinition$ProfileSkillUserFeed;
    ProfileSkillUserHistory: SObjectDefinition$ProfileSkillUserHistory;
    Prompt: SObjectDefinition$Prompt;
    PromptAction: SObjectDefinition$PromptAction;
    PromptActionShare: SObjectDefinition$PromptActionShare;
    PromptVersion: SObjectDefinition$PromptVersion;
    Publisher: SObjectDefinition$Publisher;
    Purchase_Order_Line__ChangeEvent: SObjectDefinition$Purchase_Order_Line__ChangeEvent;
    Purchase_Order_Line__History: SObjectDefinition$Purchase_Order_Line__History;
    Purchase_Order_Line__c: SObjectDefinition$Purchase_Order_Line__c;
    Purchase_Order__ChangeEvent: SObjectDefinition$Purchase_Order__ChangeEvent;
    Purchase_Order__History: SObjectDefinition$Purchase_Order__History;
    Purchase_Order__c: SObjectDefinition$Purchase_Order__c;
    PushTopic: SObjectDefinition$PushTopic;
    QueueSobject: SObjectDefinition$QueueSobject;
    QuickText: SObjectDefinition$QuickText;
    QuickTextChangeEvent: SObjectDefinition$QuickTextChangeEvent;
    QuickTextHistory: SObjectDefinition$QuickTextHistory;
    QuickTextShare: SObjectDefinition$QuickTextShare;
    QuickTextUsage: SObjectDefinition$QuickTextUsage;
    QuickTextUsageShare: SObjectDefinition$QuickTextUsageShare;
    Quote: SObjectDefinition$Quote;
    QuoteChangeEvent: SObjectDefinition$QuoteChangeEvent;
    QuoteDocument: SObjectDefinition$QuoteDocument;
    QuoteFeed: SObjectDefinition$QuoteFeed;
    QuoteLineItem: SObjectDefinition$QuoteLineItem;
    QuoteLineItemChangeEvent: SObjectDefinition$QuoteLineItemChangeEvent;
    QuoteShare: SObjectDefinition$QuoteShare;
    QuoteTemplateRichTextData: SObjectDefinition$QuoteTemplateRichTextData;
    RecentlyViewed: SObjectDefinition$RecentlyViewed;
    Recommendation: SObjectDefinition$Recommendation;
    RecommendationChangeEvent: SObjectDefinition$RecommendationChangeEvent;
    RecordAction: SObjectDefinition$RecordAction;
    RecordActionHistory: SObjectDefinition$RecordActionHistory;
    RecordType: SObjectDefinition$RecordType;
    RedirectWhitelistUrl: SObjectDefinition$RedirectWhitelistUrl;
    RelationshipDomain: SObjectDefinition$RelationshipDomain;
    RelationshipInfo: SObjectDefinition$RelationshipInfo;
    Report: SObjectDefinition$Report;
    ReportFeed: SObjectDefinition$ReportFeed;
    Resource__ChangeEvent: SObjectDefinition$Resource__ChangeEvent;
    Resource__c: SObjectDefinition$Resource__c;
    SPSamlAttributes: SObjectDefinition$SPSamlAttributes;
    SamlSsoConfig: SObjectDefinition$SamlSsoConfig;
    Scontrol: SObjectDefinition$Scontrol;
    SearchLayout: SObjectDefinition$SearchLayout;
    SecurityCustomBaseline: SObjectDefinition$SecurityCustomBaseline;
    SessionPermSetActivation: SObjectDefinition$SessionPermSetActivation;
    Settlement_Fee__ChangeEvent: SObjectDefinition$Settlement_Fee__ChangeEvent;
    Settlement_Fee__c: SObjectDefinition$Settlement_Fee__c;
    Settlement_Payment_Schedule__ChangeEvent: SObjectDefinition$Settlement_Payment_Schedule__ChangeEvent;
    Settlement_Payment_Schedule__c: SObjectDefinition$Settlement_Payment_Schedule__c;
    Settlement__ChangeEvent: SObjectDefinition$Settlement__ChangeEvent;
    Settlement__c: SObjectDefinition$Settlement__c;
    SetupAssistantStep: SObjectDefinition$SetupAssistantStep;
    SetupAuditTrail: SObjectDefinition$SetupAuditTrail;
    SetupEntityAccess: SObjectDefinition$SetupEntityAccess;
    Site: SObjectDefinition$Site;
    SiteDetail: SObjectDefinition$SiteDetail;
    SiteFeed: SObjectDefinition$SiteFeed;
    SiteHistory: SObjectDefinition$SiteHistory;
    SiteIframeWhiteListUrl: SObjectDefinition$SiteIframeWhiteListUrl;
    SocialPersona: SObjectDefinition$SocialPersona;
    SocialPersonaHistory: SObjectDefinition$SocialPersonaHistory;
    SocialPost: SObjectDefinition$SocialPost;
    SocialPostChangeEvent: SObjectDefinition$SocialPostChangeEvent;
    SocialPostFeed: SObjectDefinition$SocialPostFeed;
    SocialPostHistory: SObjectDefinition$SocialPostHistory;
    SocialPostShare: SObjectDefinition$SocialPostShare;
    Solution: SObjectDefinition$Solution;
    SolutionFeed: SObjectDefinition$SolutionFeed;
    SolutionHistory: SObjectDefinition$SolutionHistory;
    SolutionStatus: SObjectDefinition$SolutionStatus;
    Sstack_CC__Billing_Week__ChangeEvent: SObjectDefinition$Sstack_CC__Billing_Week__ChangeEvent;
    Sstack_CC__Billing_Week__c: SObjectDefinition$Sstack_CC__Billing_Week__c;
    Sstack_CC__CTH_Terms__ChangeEvent: SObjectDefinition$Sstack_CC__CTH_Terms__ChangeEvent;
    Sstack_CC__CTH_Terms__c: SObjectDefinition$Sstack_CC__CTH_Terms__c;
    Sstack_CC__Commission_Calculator_Settings__mdt: SObjectDefinition$Sstack_CC__Commission_Calculator_Settings__mdt;
    Sstack_CC__Commission_Report_Result_Line__ChangeEvent: SObjectDefinition$Sstack_CC__Commission_Report_Result_Line__ChangeEvent;
    Sstack_CC__Commission_Report_Result_Line__c: SObjectDefinition$Sstack_CC__Commission_Report_Result_Line__c;
    Sstack_CC__Commission_Report_Result__ChangeEvent: SObjectDefinition$Sstack_CC__Commission_Report_Result__ChangeEvent;
    Sstack_CC__Commission_Report_Result__c: SObjectDefinition$Sstack_CC__Commission_Report_Result__c;
    Sstack_CC__Commission_Table_Line__ChangeEvent: SObjectDefinition$Sstack_CC__Commission_Table_Line__ChangeEvent;
    Sstack_CC__Commission_Table_Line__c: SObjectDefinition$Sstack_CC__Commission_Table_Line__c;
    Sstack_CC__Commission_Table__ChangeEvent: SObjectDefinition$Sstack_CC__Commission_Table__ChangeEvent;
    Sstack_CC__Commission_Table__History: SObjectDefinition$Sstack_CC__Commission_Table__History;
    Sstack_CC__Commission_Table__c: SObjectDefinition$Sstack_CC__Commission_Table__c;
    Sstack_CC__Deal__ChangeEvent: SObjectDefinition$Sstack_CC__Deal__ChangeEvent;
    Sstack_CC__Deal__c: SObjectDefinition$Sstack_CC__Deal__c;
    Sstack_CC__JP_Information__ChangeEvent: SObjectDefinition$Sstack_CC__JP_Information__ChangeEvent;
    Sstack_CC__JP_Information__History: SObjectDefinition$Sstack_CC__JP_Information__History;
    Sstack_CC__JP_Information__c: SObjectDefinition$Sstack_CC__JP_Information__c;
    Sstack_CC__Job_Placement_AM__ChangeEvent: SObjectDefinition$Sstack_CC__Job_Placement_AM__ChangeEvent;
    Sstack_CC__Job_Placement_AM__c: SObjectDefinition$Sstack_CC__Job_Placement_AM__c;
    Sstack_CC__Job_Placement_Recruiter__ChangeEvent: SObjectDefinition$Sstack_CC__Job_Placement_Recruiter__ChangeEvent;
    Sstack_CC__Job_Placement_Recruiter__c: SObjectDefinition$Sstack_CC__Job_Placement_Recruiter__c;
    Sstack_CC__Job_Placement__ChangeEvent: SObjectDefinition$Sstack_CC__Job_Placement__ChangeEvent;
    Sstack_CC__Job_Placement__History: SObjectDefinition$Sstack_CC__Job_Placement__History;
    Sstack_CC__Job_Placement__c: SObjectDefinition$Sstack_CC__Job_Placement__c;
    Sstack_CC__Referrer__ChangeEvent: SObjectDefinition$Sstack_CC__Referrer__ChangeEvent;
    Sstack_CC__Referrer__c: SObjectDefinition$Sstack_CC__Referrer__c;
    Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent: SObjectDefinition$Sstack_CC__Staff_Aug_Commission_Variables__ChangeEvent;
    Sstack_CC__Staff_Aug_Commission_Variables__c: SObjectDefinition$Sstack_CC__Staff_Aug_Commission_Variables__c;
    Sstack_CC__Total_Hours__ChangeEvent: SObjectDefinition$Sstack_CC__Total_Hours__ChangeEvent;
    Sstack_CC__Total_Hours__History: SObjectDefinition$Sstack_CC__Total_Hours__History;
    Sstack_CC__Total_Hours__c: SObjectDefinition$Sstack_CC__Total_Hours__c;
    Sstack_CC__Trigger_Settings__mdt: SObjectDefinition$Sstack_CC__Trigger_Settings__mdt;
    Stamp: SObjectDefinition$Stamp;
    StampAssignment: SObjectDefinition$StampAssignment;
    StaticResource: SObjectDefinition$StaticResource;
    StreamingChannel: SObjectDefinition$StreamingChannel;
    StreamingChannelShare: SObjectDefinition$StreamingChannelShare;
    Survey: SObjectDefinition$Survey;
    SurveyEmailBranding: SObjectDefinition$SurveyEmailBranding;
    SurveyEngagementContext: SObjectDefinition$SurveyEngagementContext;
    SurveyEngagementContextShare: SObjectDefinition$SurveyEngagementContextShare;
    SurveyFeed: SObjectDefinition$SurveyFeed;
    SurveyInvitation: SObjectDefinition$SurveyInvitation;
    SurveyInvitationShare: SObjectDefinition$SurveyInvitationShare;
    SurveyPage: SObjectDefinition$SurveyPage;
    SurveyQuestion: SObjectDefinition$SurveyQuestion;
    SurveyQuestionChoice: SObjectDefinition$SurveyQuestionChoice;
    SurveyQuestionResponse: SObjectDefinition$SurveyQuestionResponse;
    SurveyQuestionScore: SObjectDefinition$SurveyQuestionScore;
    SurveyResponse: SObjectDefinition$SurveyResponse;
    SurveyShare: SObjectDefinition$SurveyShare;
    SurveySubject: SObjectDefinition$SurveySubject;
    SurveyVersion: SObjectDefinition$SurveyVersion;
    SurveyVersionAddlInfo: SObjectDefinition$SurveyVersionAddlInfo;
    TabDefinition: SObjectDefinition$TabDefinition;
    Task: SObjectDefinition$Task;
    TaskChangeEvent: SObjectDefinition$TaskChangeEvent;
    TaskFeed: SObjectDefinition$TaskFeed;
    TaskPriority: SObjectDefinition$TaskPriority;
    TaskRelation: SObjectDefinition$TaskRelation;
    TaskRelationChangeEvent: SObjectDefinition$TaskRelationChangeEvent;
    TaskStatus: SObjectDefinition$TaskStatus;
    TaskWhoRelation: SObjectDefinition$TaskWhoRelation;
    TenantUsageEntitlement: SObjectDefinition$TenantUsageEntitlement;
    TestSuiteMembership: SObjectDefinition$TestSuiteMembership;
    ThirdPartyAccountLink: SObjectDefinition$ThirdPartyAccountLink;
    TimeSlot: SObjectDefinition$TimeSlot;
    Timesheet_File__ChangeEvent: SObjectDefinition$Timesheet_File__ChangeEvent;
    Timesheet_File__c: SObjectDefinition$Timesheet_File__c;
    Timesheet_Line__ChangeEvent: SObjectDefinition$Timesheet_Line__ChangeEvent;
    Timesheet_Line__c: SObjectDefinition$Timesheet_Line__c;
    Timesheet_Note__ChangeEvent: SObjectDefinition$Timesheet_Note__ChangeEvent;
    Timesheet_Note__c: SObjectDefinition$Timesheet_Note__c;
    Timesheet_Settings_2__mdt: SObjectDefinition$Timesheet_Settings_2__mdt;
    Timesheet_Settings__ChangeEvent: SObjectDefinition$Timesheet_Settings__ChangeEvent;
    Timesheet_Settings__c: SObjectDefinition$Timesheet_Settings__c;
    Timesheet_Survey_Settings__ChangeEvent: SObjectDefinition$Timesheet_Survey_Settings__ChangeEvent;
    Timesheet_Survey_Settings__c: SObjectDefinition$Timesheet_Survey_Settings__c;
    Timesheet__ChangeEvent: SObjectDefinition$Timesheet__ChangeEvent;
    Timesheet__c: SObjectDefinition$Timesheet__c;
    TodayGoal: SObjectDefinition$TodayGoal;
    TodayGoalShare: SObjectDefinition$TodayGoalShare;
    Topic: SObjectDefinition$Topic;
    TopicAssignment: SObjectDefinition$TopicAssignment;
    TopicFeed: SObjectDefinition$TopicFeed;
    TopicUserEvent: SObjectDefinition$TopicUserEvent;
    Translation: SObjectDefinition$Translation;
    UiFormulaCriterion: SObjectDefinition$UiFormulaCriterion;
    UiFormulaRule: SObjectDefinition$UiFormulaRule;
    UndecidedEventRelation: SObjectDefinition$UndecidedEventRelation;
    User: SObjectDefinition$User;
    UserAppInfo: SObjectDefinition$UserAppInfo;
    UserAppMenuCustomization: SObjectDefinition$UserAppMenuCustomization;
    UserAppMenuCustomizationShare: SObjectDefinition$UserAppMenuCustomizationShare;
    UserAppMenuItem: SObjectDefinition$UserAppMenuItem;
    UserChangeEvent: SObjectDefinition$UserChangeEvent;
    UserEmailCalendarSync: SObjectDefinition$UserEmailCalendarSync;
    UserEmailPreferredPerson: SObjectDefinition$UserEmailPreferredPerson;
    UserEmailPreferredPersonShare: SObjectDefinition$UserEmailPreferredPersonShare;
    UserEntityAccess: SObjectDefinition$UserEntityAccess;
    UserFeed: SObjectDefinition$UserFeed;
    UserFieldAccess: SObjectDefinition$UserFieldAccess;
    UserLicense: SObjectDefinition$UserLicense;
    UserListView: SObjectDefinition$UserListView;
    UserListViewCriterion: SObjectDefinition$UserListViewCriterion;
    UserLogin: SObjectDefinition$UserLogin;
    UserPackageLicense: SObjectDefinition$UserPackageLicense;
    UserPermissionAccess: SObjectDefinition$UserPermissionAccess;
    UserPreference: SObjectDefinition$UserPreference;
    UserProvAccount: SObjectDefinition$UserProvAccount;
    UserProvAccountStaging: SObjectDefinition$UserProvAccountStaging;
    UserProvMockTarget: SObjectDefinition$UserProvMockTarget;
    UserProvisioningConfig: SObjectDefinition$UserProvisioningConfig;
    UserProvisioningLog: SObjectDefinition$UserProvisioningLog;
    UserProvisioningRequest: SObjectDefinition$UserProvisioningRequest;
    UserProvisioningRequestShare: SObjectDefinition$UserProvisioningRequestShare;
    UserRecordAccess: SObjectDefinition$UserRecordAccess;
    UserRole: SObjectDefinition$UserRole;
    UserSetupEntityAccess: SObjectDefinition$UserSetupEntityAccess;
    UserShare: SObjectDefinition$UserShare;
    UserTeamMember: SObjectDefinition$UserTeamMember;
    VerificationHistory: SObjectDefinition$VerificationHistory;
    VisualforceAccessMetrics: SObjectDefinition$VisualforceAccessMetrics;
    Vote: SObjectDefinition$Vote;
    Voucher__ChangeEvent: SObjectDefinition$Voucher__ChangeEvent;
    Voucher__c: SObjectDefinition$Voucher__c;
    WaveAutoInstallRequest: SObjectDefinition$WaveAutoInstallRequest;
    WaveCompatibilityCheckItem: SObjectDefinition$WaveCompatibilityCheckItem;
    WebLink: SObjectDefinition$WebLink;
    WorkAccess: SObjectDefinition$WorkAccess;
    WorkAccessShare: SObjectDefinition$WorkAccessShare;
    WorkBadge: SObjectDefinition$WorkBadge;
    WorkBadgeDefinition: SObjectDefinition$WorkBadgeDefinition;
    WorkBadgeDefinitionFeed: SObjectDefinition$WorkBadgeDefinitionFeed;
    WorkBadgeDefinitionHistory: SObjectDefinition$WorkBadgeDefinitionHistory;
    WorkBadgeDefinitionShare: SObjectDefinition$WorkBadgeDefinitionShare;
    WorkThanks: SObjectDefinition$WorkThanks;
    WorkThanksShare: SObjectDefinition$WorkThanksShare;
    pandadoc__DocStatus__ChangeEvent: SObjectDefinition$pandadoc__DocStatus__ChangeEvent;
    pandadoc__DocStatus__c: SObjectDefinition$pandadoc__DocStatus__c;
    pandadoc__Object_Tokens__ChangeEvent: SObjectDefinition$pandadoc__Object_Tokens__ChangeEvent;
    pandadoc__Object_Tokens__c: SObjectDefinition$pandadoc__Object_Tokens__c;
    pandadoc__PandaDocDocument__ChangeEvent: SObjectDefinition$pandadoc__PandaDocDocument__ChangeEvent;
    pandadoc__PandaDocDocument__c: SObjectDefinition$pandadoc__PandaDocDocument__c;
    pandadoc__PandaDocLog__ChangeEvent: SObjectDefinition$pandadoc__PandaDocLog__ChangeEvent;
    pandadoc__PandaDocLog__c: SObjectDefinition$pandadoc__PandaDocLog__c;
    pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent: SObjectDefinition$pandadoc__PandaDoc_JsonBulder_Mapping__ChangeEvent;
    pandadoc__PandaDoc_JsonBulder_Mapping__c: SObjectDefinition$pandadoc__PandaDoc_JsonBulder_Mapping__c;
    pandadoc__Pricing_Item_Mapping__ChangeEvent: SObjectDefinition$pandadoc__Pricing_Item_Mapping__ChangeEvent;
    pandadoc__Pricing_Item_Mapping__c: SObjectDefinition$pandadoc__Pricing_Item_Mapping__c;
    pandadoc__Recipient_Map__ChangeEvent: SObjectDefinition$pandadoc__Recipient_Map__ChangeEvent;
    pandadoc__Recipient_Map__c: SObjectDefinition$pandadoc__Recipient_Map__c;
    pandadoc__Settings__ChangeEvent: SObjectDefinition$pandadoc__Settings__ChangeEvent;
    pandadoc__Settings__c: SObjectDefinition$pandadoc__Settings__c;
    pandadoc__TriggerSetting__ChangeEvent: SObjectDefinition$pandadoc__TriggerSetting__ChangeEvent;
    pandadoc__TriggerSetting__c: SObjectDefinition$pandadoc__TriggerSetting__c;
    rcsfl__AdminSetting__ChangeEvent: SObjectDefinition$rcsfl__AdminSetting__ChangeEvent;
    rcsfl__AdminSetting__c: SObjectDefinition$rcsfl__AdminSetting__c;
    sansancard__SSCard__ChangeEvent: SObjectDefinition$sansancard__SSCard__ChangeEvent;
    sansancard__SSCard__c: SObjectDefinition$sansancard__SSCard__c;
    sansancard__ScanToSalesforce_Setting__ChangeEvent: SObjectDefinition$sansancard__ScanToSalesforce_Setting__ChangeEvent;
    sansancard__ScanToSalesforce_Setting__c: SObjectDefinition$sansancard__ScanToSalesforce_Setting__c;
    sansancard__TransferMeta__ChangeEvent: SObjectDefinition$sansancard__TransferMeta__ChangeEvent;
    sansancard__TransferMeta__c: SObjectDefinition$sansancard__TransferMeta__c;
  };
}
